[{"content": "How To Get ALL The Mouse Clicks.\r\n\r\nTook me hours to figure this out. Also note that button 1 and 3 pressed at the same time shows up as button 2, at least on my ubuntu computer.\r\n\r\ne=pygame.event.wait()\r\nif e.type == MOUSEBUTTONDOWN and e.button == 4 : do something mousey", "users_id": 344, "datetimeon": "2005-11-11T14:05:52", "link": "pygame.mouse.get_pressed", "id": 3}, {"content": "It all seemed simple and working properly, then I noticed... \"The area covered by a Rect does not include the right- and bottom-most edge of pixels. If one Rect's bottom border is another Rect's top border (i.e., rect1.bottom=rect2.top), the two meet exactly on the screen but do not overlap, and rect1.colliderect(rect2) returns false.\"\r\n\r\n*mutter* good to know.", "users_id": null, "datetimeon": "2011-01-10T19:28:58", "link": "Rect.colliderect", "id": 3725}, {"content": "Note that when the user resizes the game window, pygame does not automatically update its internal screen surface. You must call set_mode() every time VIDEORESIZE is sent. This really should be more clear in the documentation.", "users_id": null, "datetimeon": "2011-01-11T15:55:57", "link": "pygame.display", "id": 3726}, {"content": "Is it possible to set this mode transparent?\r\nI mean without changing the transparency with set_alpha or ... but from the beginning.", "users_id": null, "datetimeon": "2011-01-13T08:28:22", "link": "pygame.display.set_mode", "id": 3727}, {"content": "Draw a normal thick line, then draw two aa lines either side. Not exactly what you want but it will work.", "users_id": null, "datetimeon": "2011-01-13T15:22:43", "link": "pygame.draw.aaline", "id": 3728}, {"content": "This code fixes the bad rect given by the line function.\r\n\r\ntemprect=(pygame.draw.line(screen,color,firstpos,newpos,thick))\r\ntemprect.inflate_ip(thick*2, thick*2)\r\ndirty.append(temprect)", "users_id": null, "datetimeon": "2005-11-22T22:22:44", "link": "pygame.draw.line", "id": 8}, {"content": "if your rect contains a negative width or height you need to rect.normalize() your rect before passing it to this function", "users_id": null, "datetimeon": "2005-11-27T22:45:10", "link": "pygame.draw.ellipse", "id": 13}, {"content": "Rotates image about its center.", "users_id": null, "datetimeon": "2005-11-28T19:22:44", "link": "pygame.transform.rotate", "id": 14}, {"content": "Make sure you blit according to the center of the newly formed surface, and not what the center of the orginal image is.", "users_id": null, "datetimeon": "2005-11-28T19:24:48", "link": "pygame.transform.rotate", "id": 15}, {"content": "This probably goes without saying, but always rotate the orginal image, not a rotated copy.", "users_id": null, "datetimeon": "2005-11-28T19:26:45", "link": "pygame.transform.rotate", "id": 16}, {"content": "Before calling pygame.key.get_pressed(), one should call pygame.event.pump() to get the lates state of the keyboard.\r\n\r\nThis is so because the get_pressed() function wraps the SDL_GetKeyState() function and in the SDL_GetKeyState() documentation it is written that one should use SDL_PumpEvents() to update the state array and pygame.event.pump() just happens to be a wrapper for SDL_PumpEvents() :-)", "users_id": null, "datetimeon": "2005-12-01T10:30:49", "link": "pygame.key.get_pressed", "id": 18}, {"content": "When I tryed to use this, he couldn't find the key K_t I wanted\r\n untill I used:\r\n\r\nfrom pygame.locals import *\r\n\r\nSo be sure to use it - Shefy\r\n\r\n\r\n", "users_id": null, "datetimeon": "2005-12-07T04:09:33", "link": "pygame.key.get_pressed", "id": 19}, {"content": "if you pass in None as the background argument, you get the error\r\n\"TypeError: Invalid background RGBA argument\"", "users_id": null, "datetimeon": "2005-12-10T19:21:13", "link": "Font.render", "id": 22}, {"content": "  pygame.event.pump()\r\n  m = pygame.key.get_mods()\r\n  if m & KMOD_SHIFT:\r\n    print 'shift pressed'", "users_id": null, "datetimeon": "2005-12-25T19:36:47", "link": "pygame.key.get_pressed", "id": 32}, {"content": "Rotated objects tend to move around because bounding rectangle changes size.\r\nStore the center in a temporary variable, then rotate the original image, and finally reset the center before you blit or update\r\nThis code comes from a sprite class:\r\n\r\n  def turn(self, amount):\r\n    \"turn some amount\"\r\n    oldCenter = self.rect.center\r\n    self.dir += amount\r\n    self.image = pygame.transform.rotate(self.baseImage, self.dir)\r\n    self.rect = self.image.get_rect()\r\n    self.rect.center = oldCenter\r\n", "users_id": null, "datetimeon": "2006-01-03T09:48:09", "link": "pygame.transform.rotate", "id": 36}, {"content": "This effect (1 + 3 = 2) is caused by your X.org/XServer mouse configuration section, which allows to emulate the middle button by clicking both the left and right mouse button at the same time.", "users_id": null, "datetimeon": "2006-01-04T09:16:25", "link": "pygame.mouse.get_pressed", "id": 37}, {"content": "If you're trying to create a surface with per-pixel alphas, and\r\n\r\n  my_surface = pygame.Surface((w, h), SRCALPHA)\r\n\r\ncreates a regular surface instead, try\r\n\r\n  my_surface = pygame.Surface((w, h)).convert_alpha()\r\n", "users_id": 451, "datetimeon": "2006-01-05T16:07:06", "link": "pygame.Surface", "id": 39}, {"content": "This does not result in 'truly' transparent text, as the area between the letters is filled in with the background color. For truly transparent text with an invisible background behind the letters, use Numeric:\r\n\r\ndef RenderTransparent(font, text, antialias=1, color=(255, 0, 0, 0)):\r\n    'Render text with transparency underneath the letters'\r\n    'Requires Numeric'\r\n\r\n    # Create a colored block big enough to hold the text\r\n    w, h = font.size(text)\r\n    surface = pygame.Surface((w, h), pygame.SRCALPHA)\r\n    surface.fill(color)\r\n    \r\n    # Create an alpha channel that contains the shapes of the letters\r\n    alpha = pygame.Surface((w, h), pygame.SRCALPHA)\r\n    WHITE = (255, 255, 255, 0)\r\n    BLACK = (0, 0, 0, 0)\r\n    a = font.render(text, antialias, WHITE, BLACK)\r\n    alpha.blit(a, (0, 0))\r\n        \r\n    # Combine the alpha channel with the colored block\r\n    pic = surface.convert_alpha()\r\n    mask = alpha.convert(32)\r\n    mskarray = pygame.surfarray.pixels3d(mask)\r\n    pygame.surfarray.pixels_alpha(pic)[:, :] = mskarray[:, :, 0]\r\n\r\n    # Return the 'truly' transparent text.\r\n    return pic\r\n\r\n", "users_id": null, "datetimeon": "2006-01-17T14:45:02", "link": "Font.render", "id": 41}, {"content": "Interestingly, pygame.font.get_default_font() returns a font name ('freesansbold.ttf') which is not among the 189 listed by pygame.font.get_fonts().", "users_id": 5772, "datetimeon": "2011-01-03T08:47:41", "link": "pygame.font.get_fonts", "id": 3698}, {"content": "The font name is not a list!  It is a single string.\r\n\r\nThe string can contain multiple font names with commas between them,\r\nbut if you pass a Python list (or tuple) you'll get an error.", "users_id": 5772, "datetimeon": "2011-01-03T09:13:14", "link": "pygame.font.SysFont", "id": 3699}, {"content": "LOL", "users_id": null, "datetimeon": "2011-01-03T19:03:40", "link": "PixelArray.replace", "id": 3700}, {"content": "FUCKING SPAMMER MOTHER FUCKERS WHO OWNS THIS SHIT THEY SHOULD BURN IN HELLL", "users_id": null, "datetimeon": "2011-01-03T19:05:09", "link": "pygame.locals", "id": 3701}, {"content": "On my Windows Vista machine running Python 3.1.2 and pygame 1.9.1,\r\nthe 'black=' and 'white=' parameters are swapped.\r\n\r\nSo, to make the example work (with a black arrow outline\r\naround a white center), you have to do this:\r\n\r\nthickarrow_strings = (            #sized 24x24\r\n      \"XX                      \",\r\n      \"XXX                     \",\r\n      \"XXXX                    \",\r\n      \"XX.XX                   \",\r\n      \"XX..XX                  \",\r\n      \"XX...XX                 \",\r\n      \"XX....XX                \",\r\n      \"XX.....XX               \",\r\n      \"XX......XX              \",\r\n      \"XX.......XX             \",\r\n      \"XX........XX            \",\r\n      \"XX........XXX           \",\r\n      \"XX......XXXXX           \",\r\n      \"XX.XXX..XX              \",\r\n      \"XXXX XX..XX             \",\r\n      \"XX   XX..XX             \",\r\n      \"     XX..XX             \",\r\n      \"      XX..XX            \",\r\n      \"      XX..XX            \",\r\n      \"       XXXX             \",\r\n      \"       XX               \",\r\n      \"                        \",\r\n      \"                        \",\r\n      \"                        \")\r\n\r\ndatatuple, masktuple = pygame.cursor.compile( thickarrow_strings,\r\n                                  black='.', white='X', xor='o' )\r\npygame.mouse.set_cursor( (24,24), (0,0), datatuple, masktuple )\r\n", "users_id": null, "datetimeon": "2011-01-04T09:45:11", "link": "pygame.cursors.compile", "id": 3702}, {"content": "I'm using this generator to get a channel id for each sprite:\r\n\r\ndef free_sound_channel():\r\n    \"\"\"Get next available sound channel\r\n    Usage:\r\n    free_channels=free_sound_channel()\r\n    id=free_channels.next()\r\n    \"\"\"\r\n    id=0\r\n    while id<pygame.mixer.get_num_channels():\r\n        yield id\r\n        id+=1\r\n    return    # or: raise StopIteration()     ", "users_id": null, "datetimeon": "2006-01-29T16:18:15", "link": "pygame.mixer.Channel", "id": 49}, {"content": "COLORKEY and ALPHA should have 'SRC' prefixed to them. Here is a more-complete list of flags revelvant to surface.get_flags():\r\n,\"SRCCOLORKEY\"\r\n,\"RLEACCEL\"\r\n,\"RLEACCELOK\"\r\n,\"PREALLOC\"\r\n,\"HWACCEL\"\r\n,\"SRCALPHA\"\r\n,\"UYVY_OVERLAY\"\r\n,\"YV12_OVERLAY\"\r\n,\"YVYU_OVERLAY\"\r\n,\"YUY2_OVERLAY\"\r\n,\"HWPALETTE\"\r\nSWSURFACE - not really usable as a surface flag, equates to 0 and is always default\r\nANYFORMAT - used to create surfaces, pygame defaults to this flag if you don't specifya bit depth\r\nHWACCEL - surface is hardware accelerated, readonly\r\nSRCCOLORKEY- surface has a colorkey for blits, readonly\r\nSRCALPHA - surface has alpha enabled, readonly\r\nRLEACCELOK - surface is rle accelerated, but hasn't been compiled yet, readonly\r\nPREALLOC - not even sure?\r\nHope this helps....", "users_id": null, "datetimeon": "2006-02-07T21:37:24", "link": "Surface.get_flags", "id": 52}, {"content": "I wish all the possible flags were documented here...", "users_id": null, "datetimeon": "2006-02-07T22:02:57", "link": "pygame.Surface", "id": 53}, {"content": "I don't know what is wrong with you two. I tested the following and it worked as expected. Perhaps it is because I tested it on windows, if you tested it somewhere else (of course that's not the likely cause but I really can't see what else is wrong).\r\n\r\nIt is true that passing None for the final argument causes \"Invalid RGBA argument\". This is a bug in the documentation, not the code. The proper way to get transparency is to simply omit the last argument.\r\n\r\n$python\r\n>>>import pygame\r\n>>>pygame.init()\r\n>>>screen = pygame.display.set_mode((300,300))\r\n>>>screen.fill((255,0,0))\r\n>>>pygame.display.flip()\r\n\r\n>>>font = pygame.font.SysFont(\"Times New Roman\",30)\r\n>>>s = font.render(\"Eggs are good for you, but not on the eiffel tower\",True,(0,255,255))\r\n>>>s.get_flags() #-> 65536 [SRCALPHA].. good, implies the image has per-pixel transparency\r\n>>>[s.get_at((i,j)) for i in range(20) for j in range(20)]\r\n[....          #here we see that indeed each\r\n(0,255,255,68) #pixel is a full RGBA pixel with 4\r\n....]          #components.\r\n>>>screen.blit(s, (0,0))\r\n>>>pygame.display.flip()\r\n>>>pygame.event.pump() #in order to bring the window back to life...\r\n\r\nAnd the result is turquoise text with red in the background, clearly showing transparency. Phew, you had me worried there, thinking I couldn't do transparency with this... until I looked closer. These docs are shiny but can be very hard to read sometimes.", "users_id": null, "datetimeon": "2006-02-08T02:29:13", "link": "Font.render", "id": 54}, {"content": "Here's another solution for creating surfaces with per-pixel-alpha:\r\n\r\nimage = pygame.Surface((width,height),pygame.SRCALPHA,32);\r\n\r\nAdding the depth argument '32' seems to make this work every time.", "users_id": null, "datetimeon": "2006-02-21T15:49:19", "link": "pygame.Surface", "id": 58}, {"content": "In the documentery it says \"The antialias argument is a boolean, if true the \r\ncharacters will have smooth edges.\". If you pass a string as the antialias \r\nargument it raises an exception saying \"TypeError: an integer is required\". This\r\nis very confusing. It should raise \"TypeError: a boolean is required\". \r\nIf antialias is enabled it will greatly drop the framerate (from 100 to 33 on my\r\nmachine). Font.render should be called only for as many times as you need fonts.\r\nDo not call this function every gameloop for it will greatly drop the framerate.\r\n(this cost me about 2 houres of debugging to find out.)\r\nIf any admins read this: Please change the script so that long lines will be seperated to shorter lines. Those 500+ words lines are uncomfortable to read with all that scrolling. mfg nwp.", "users_id": null, "datetimeon": "2006-03-05T13:28:14", "link": "Font.render", "id": 61}, {"content": "you may want to initalise the \r\ndifferent modules seperately\r\nto speed up your program. Of \r\ncourse, then you would need \r\nto know which modules you have\r\ninitalised and which ones you\r\nhave not.", "users_id": null, "datetimeon": "2006-03-08T22:55:41", "link": "pygame.init", "id": 64}, {"content": "\n", "users_id": null, "datetimeon": "2006-12-30T07:59:42", "link": "Hope to find some more useful information on your site!  It is really great!", "id": 196}, {"content": "format of music files\r\non cds are (usualy) in\r\nCD Digital Audio, except\r\nsometimes a program will\r\nmake a cd useing a \r\ndifferent format, so \r\npygame.cdrom.CD(n).play()\r\nwill maby not play it.", "users_id": null, "datetimeon": "2006-03-08T23:02:35", "link": "pygame.cdrom", "id": 67}, {"content": "import pygame\r\nfrom pygame.locals import *\r\n\r\npygame.init()\r\npygame.display.set_mode((300,200))\r\npygame.display.set_caption('Mouse Input Demonstration')\r\nrunning = True\r\nwhile running:\r\n    for event in pygame.event.get():\r\n        if event.type == QUIT:\r\n            running = False\r\n        if event.type == KEYDOWN and event.key == K_ESCAPE:\r\n            running = False\r\n        if event.type == MOUSEBUTTONDOWN:\r\n            print event.button\r\n\r\npygame.display.quit()", "users_id": null, "datetimeon": "2006-04-02T00:38:08", "link": "pygame.mouse.get_pressed", "id": 82}, {"content": "# An Example from perldude69@gmail.com  www.wachadoo.com/forum/\r\n# CONSTANTS\r\nSCREEN_WIDTH  = 800\r\nSCREEN_HEIGHT = 600\r\n#Initialise Game\r\npygame.init()\r\nscreen = pygame.display.set_mode( (SCREEN_WIDTH,SCREEN_HEIGHT))\r\npygame.display.set_caption('Space Invaders')\r\nbackground = pygame.image.load('./pics/background1.jpg').convert()\r\nbackground = pygame.transform.scale(background,( SCREEN_WIDTH, SCREEN_HEIGHT))\r\nscreen.blit(background, (0,0)) \r\npygame.display.flip() \r\ndone = False\r\nwhile not done:\r\n\tfor e in pygame.event.get():\r\n\t\tif e.type == KEYDOWN:\r\n\t\t\tdone = True\r\nif __name__ == \"__main__\":\r\n    main()", "users_id": null, "datetimeon": "2006-04-07T18:04:11", "link": "pygame.transform.scale", "id": 84}, {"content": "Don't specify flags unless you absolutely *must* (that is, don't specify HWSURFACE, depth=32 just because you think it's a good idea). This will reduce the portability of your game.", "users_id": null, "datetimeon": "2006-06-13T21:27:25", "link": "pygame.display.set_mode", "id": 98}, {"content": "Could someone please post the integer values corresponding to the various shift/ctl/alt keys?  Or provide a link.\r\nthank you!", "users_id": null, "datetimeon": "2006-12-18T16:29:25", "link": "pygame.key.get_mods", "id": 183}, {"content": "numpy is fine in Python 3.1.2.  However, pygame.surfarray doesn't work\r\nat all in pygame-1.9.1.win32-py3.1.msi with python-3.1.2.msi and\r\nnumpy-1.5.1-win32-superpack-python3.1.exe under Windows Vista.\r\n\r\nTo see the problem, just run the test that comes with it; 4 of 14 tests fail:\r\n\r\nC:\\>cd \\python31\\lib\\site-packages\\pygame\\tests\r\n\r\nC:\\Python31\\Lib\\site-packages\\pygame\\tests>\\python31\\python surfarray_test.py\r\nEE.EE.........\r\n======================================================================\r\nERROR: test_array2d (__main__.SurfarrayModuleTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"surfarray_test.py\", line 147, in test_array2d\r\n    arr = pygame.surfarray.array2d(surf)\r\n  File \"C:\\python31\\lib\\site-packages\\pygame\\surfarray.py\", line 104, in array2d\r\n    return numpysf.array2d (surface)\r\n  File \"C:\\python31\\lib\\site-packages\\pygame\\_numpysurfarray.py\", line 77, in array2d\r\n    data = ''.join (pattern.findall (data))\r\nTypeError: can't use a string pattern on a bytes-like object\r\n[...snip...]", "users_id": null, "datetimeon": "2011-01-07T03:47:28", "link": "pygame.surfarray", "id": 3704}, {"content": "no fill?", "users_id": null, "datetimeon": "2006-11-19T14:38:36", "link": "pygame.draw.arc", "id": 163}, {"content": "Re: \"During its lifetime, the PixelArray locks the surface, thus you explicitly have to delete it once its not used anymore and the surface should perform operations in the same scope.\"\r\n\r\n1. Grammer: s/its/it's/\r\n\r\n2. s/you explicitly have to delete/you have to explicitly delete/\r\n\r\n3. I assume that to explicitly delete it you can either use \"del pxarray\"\r\nor else simply exit the function to which pxarray is local.  Is that correct?\r\n\r\n4. What does \"and the surface should perform operations in the same scope\" mean?\r\nIs it saying something about the surface returned by px.make_surface(), i.e.,\r\nthat it should be a local variable in the same function  to which pxarray is local?\r\nOr is it saying something about the surface that is passed to pygame.PixelArray()\r\nto create the pxarray object, and if so WHAT is it saying?\r\n", "users_id": 5772, "datetimeon": "2011-01-07T03:08:20", "link": "pygame.PixelArray", "id": 3703}, {"content": "works perfectly fine for me... question: what's the name of the overloaded operator that does the pxarray[x,y] subscripting?", "users_id": null, "datetimeon": "2010-12-23T18:28:10", "link": "pygame.PixelArray", "id": 3689}, {"content": "pygame.cursors.ball is also a cool one.", "users_id": null, "datetimeon": "2010-12-28T16:21:48", "link": "pygame.cursors", "id": 3690}, {"content": "Its a success/failure scenario. It returns True (1) if it went well.", "users_id": null, "datetimeon": "2010-12-30T05:47:55", "link": "pygame.display.toggle_fullscreen", "id": 3691}, {"content": "These appear to be in degrees rather than radians (different than how draw.arc()'s are specified) which is kind of inconsistent.  Are these documented better elsewhere?", "users_id": null, "datetimeon": "2011-01-01T15:04:01", "link": "pygame.gfxdraw.pie", "id": 3694}, {"content": "You need to put\r\nimport pygame\r\nat the top of your program, anonymous.", "users_id": null, "datetimeon": "2011-01-02T07:03:47", "link": "pygame.display", "id": 3695}, {"content": "On my Windows Vista machine running Python 3.1.2 and pygame 1.9.1, pgame.font.get_fonts() returns a list of 189 fonts.  All the font names are lower case, and there are no special characters (like hyphens) in the names.  The expected 'timesnewroman', 'arial', 'arialblack', 'couriernew', 'veranda', 'microsoftsansserif', 'symbol' and 'wingdings' are there (but not 'times' or 'roman' or 'helvetica'), but also many obscure fonts that I've never heard of.", "users_id": 5772, "datetimeon": "2011-01-03T08:43:54", "link": "pygame.font.get_fonts", "id": 3697}, {"content": "\n", "users_id": null, "datetimeon": "2006-12-28T17:27:45", "link": "Looking for information and found it at this great site...", "id": 188}, {"content": "\n", "users_id": null, "datetimeon": "2006-12-29T02:41:08", "link": "I love the whiiite suits! Great show!", "id": 189}, {"content": "\n", "users_id": null, "datetimeon": "2006-12-29T10:09:22", "link": "Thank you for your site. I have found here much useful information...", "id": 190}, {"content": "Pretty cool demo Mr. Anony", "users_id": 5649, "datetimeon": "2010-12-10T22:09:50", "link": "pygame.key.get_pressed", "id": 3683}, {"content": "I had this weird thing where blue/red was inversed, but not the other colours, when I was mapping some pixels from one image to a blank surface.\r\nIt was caused by copying the color integer directly to one pixel to the other, so the trick is to always surface.unmap_rgb(pixel) before setting the color to a new pixel ", "users_id": null, "datetimeon": "2010-12-13T21:22:42", "link": "pygame.PixelArray", "id": 3685}, {"content": "If you want to see a list of attributes, do a help(pygame) and it'll show you", "users_id": 5663, "datetimeon": "2010-12-15T23:46:38", "link": "pygame.locals", "id": 3686}, {"content": ".", "users_id": null, "datetimeon": "2010-12-17T14:01:47", "link": "Movie.play", "id": 3687}, {"content": "import pygame, sys\r\nfrom pygame.version import ver\r\nprint (\"pygame \", ver)\r\nstartstate = pygame.init()\r\nprint (\"{pygame.init()}\", startstate)\r\nscreen = pygame.display.set_mode([640, 480])\r\nprint (\"{pygame.display.set_mode([640, 480]}\", screen)\r\nwhile True:\r\n    for event in pygame.event.get():\r\n        if not event:\r\n            print (\"Event processing error: cannot find event.\")\r\n        elif event.type == pygame.QUIT or event.type == pygame.K_ESCAPE:\r\n            print (\"{for event in pygame.event.get():} : \", event)\r\n            sys.exit()\r\nsys.exit() command does not run when I press escape, all it does is the same as if not event. ", "users_id": null, "datetimeon": "2010-12-18T17:09:49", "link": "pygame.key", "id": 3688}, {"content": "It the range for H should only be [0, 360); at exactly 360 the expression throws an OverflowError. The other ranges are not affected as such.", "users_id": null, "datetimeon": "2010-12-08T17:55:35", "link": "Color.hsva", "id": 3677}, {"content": "\n", "users_id": null, "datetimeon": "2006-12-30T22:35:22", "link": "Very cool design! Useful information. Go on!", "id": 202}, {"content": "\n", "users_id": null, "datetimeon": "2006-12-31T05:52:59", "link": "Very interesting! site. A must bookmark! I wait for continuation", "id": 203}, {"content": "\n", "users_id": null, "datetimeon": "2006-12-31T13:03:40", "link": "Very interesting! site. A must bookmark! I wait for continuation", "id": 204}, {"content": "\n", "users_id": null, "datetimeon": "2006-12-31T19:55:09", "link": "Just wanted to say you have some happyY looking walkers. All natural!", "id": 205}, {"content": "Works fine for me on OS X 10.6.5, though yes it does need to brought up to Quartz", "users_id": 5649, "datetimeon": "2010-12-04T21:54:48", "link": "pygame.display.init", "id": 3675}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-01T09:46:08", "link": null, "id": 207}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-01T16:59:55", "link": "You have an outstanding good and well structured site. I enjoyed browsing through it.", "id": 208}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-02T00:19:19", "link": "I love the whiiite suits! Great show!", "id": 211}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-02T15:12:24", "link": "Hope to find some more useful information on your site!  It is really great!", "id": 212}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-02T22:17:19", "link": "Just wanted to say you have some happyY looking walkers. All natural!", "id": 213}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-03T05:35:22", "link": "You have a great site. All in your web is very useful. Please keep on working.", "id": 214}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-03T12:53:55", "link": "Pretty nice site, wants to see much more on it! :)", "id": 215}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-03T20:02:38", "link": "You have an outstanding good and well structured site. I enjoyed browsing through it.", "id": 216}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-04T10:56:30", "link": null, "id": 217}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-04T18:10:07", "link": "This site is asomeee, well done, thanks for all!", "id": 218}, {"content": "\n", "users_id": null, "datetimeon": "2007-01-05T01:15:13", "link": "Very nice site. Keep up the great work.", "id": 219}, {"content": "Left:\r\nctrl 4160 \r\nshift 4097 \r\nalt 4352 \r\n\r\nRight:\r\nctrl 4224\r\nshift 4098\r\nalt 4608\r\n\r\nLeft:\r\nc+s 4161\r\nc+a 4416\r\na+s 4353\r\n\r\nRight:\r\nc+s 4226\r\nc+a 4736\r\na+s 4610\r\n\r\nDone by hand ;)\r\n\r\n-Jabapyth", "users_id": null, "datetimeon": "2007-01-29T17:22:04", "link": "pygame.key.get_mods", "id": 316}, {"content": "Good site. Thank you.", "users_id": null, "datetimeon": "2007-02-01T20:05:40", "link": null, "id": 323}, {"content": "Good site. Thank you.", "users_id": null, "datetimeon": "2007-02-01T20:05:40", "link": null, "id": 324}, {"content": "Good site. Thank you.", "users_id": null, "datetimeon": "2007-02-01T20:05:40", "link": null, "id": 325}, {"content": "Good site. Thank you.", "users_id": null, "datetimeon": "2007-02-01T20:05:40", "link": null, "id": 326}, {"content": "Good site. Thank you.", "users_id": null, "datetimeon": "2007-02-01T20:05:40", "link": null, "id": 327}, {"content": "Depending on your keyboard there may be limitations of how many simultaneous keypresses can be detected by this command. Some combinations will work on one keyboard and not on another.", "users_id": null, "datetimeon": "2007-02-08T19:53:05", "link": "pygame.key.get_pressed", "id": 335}, {"content": "iupknfqyw vulgq intdjsbek qrficdlvy luxdih nvzeotw fachrvsnk", "users_id": null, "datetimeon": "2007-02-13T11:31:42", "link": null, "id": 340}, {"content": "Good site. Thank you!", "users_id": null, "datetimeon": "2007-02-16T07:03:22", "link": null, "id": 341}, {"content": "Nice site! Thank you.", "users_id": null, "datetimeon": "2007-02-20T04:52:30", "link": null, "id": 352}, {"content": "Nice site! Thank you.", "users_id": null, "datetimeon": "2007-02-20T09:03:43", "link": null, "id": 353}, {"content": "Nice site! ", "users_id": null, "datetimeon": "2007-02-20T10:09:08", "link": null, "id": 354}, {"content": "Nice site! Thank you.", "users_id": null, "datetimeon": "2007-02-20T11:00:54", "link": null, "id": 355}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-22T18:07:39", "link": null, "id": 356}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-22T18:07:43", "link": null, "id": 357}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-22T18:07:48", "link": null, "id": 358}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-22T18:07:53", "link": null, "id": 359}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-22T18:07:57", "link": null, "id": 360}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-23T10:01:39", "link": null, "id": 362}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-23T16:52:37", "link": null, "id": 364}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-23T18:11:26", "link": null, "id": 365}, {"content": "Nice site. Thank you.", "users_id": null, "datetimeon": "2007-02-24T02:38:22", "link": null, "id": 368}, {"content": "Hello! Thank you.", "users_id": null, "datetimeon": "2007-02-24T14:06:02", "link": null, "id": 370}, {"content": "Cool website! Good work. Good resources here. Best regards! ", "users_id": null, "datetimeon": "2007-02-24T20:24:07", "link": null, "id": 372}, {"content": "Just use the same line width as your radius.\r\nThis of course dosn't solve your problem if you want a border on your arc, but then you can just paint twice.", "users_id": null, "datetimeon": "2007-02-26T18:27:17", "link": "pygame.draw.arc", "id": 374}, {"content": "It looks like width is not a keyword argument, but a required/positional/whatever one instead.\r\n\r\n>>> pygame.draw.line(surf, color, (x1, y1), (x2, y2), width=width)\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in ?\r\nTypeError: line() takes no keyword arguments\r\n>>> pygame.draw.line(surf, color, (x1, y1), (x2, y2))\r\n<rect(0, 0, 11, 11)>\r\n>>> pygame.draw.line(surf, color, (x1, y1), (x2, y2), 1)\r\n<rect(0, 0, 11, 11)>\r\n", "users_id": null, "datetimeon": "2007-03-01T11:28:42", "link": "pygame.draw.line", "id": 386}, {"content": "first number = top left rectangle x coordinate\r\nsecond number = top left rectangle y coordinate\r\nthird number = width of rectangle\r\nfourth number = length of rectangle", "users_id": null, "datetimeon": "2007-03-03T16:39:29", "link": "pygame.draw.rect", "id": 400}, {"content": "See tutorials.  \r\nAfter each line \r\n     pygame.image.load(\"<<enter file>>\")\r\nMake it\r\n     pygame.image.load(\"<<enter file>>\").convert()\r\nNo matter what, this will increase your speed by 600%!\r\nThanks to whoever put in that tutorial!\r\n     -P.Z.", "users_id": 1506, "datetimeon": "2007-03-05T00:13:41", "link": "pygame.draw", "id": 403}, {"content": "If you want to make a deep copy of a Rect object (without importing the copy module)\r\nthen you can do so by calling move with the arguments (0,0).", "users_id": null, "datetimeon": "2008-01-04T00:22:04", "link": "Rect.move", "id": 1359}, {"content": "the forth numer is the height of the rect", "users_id": null, "datetimeon": "2007-03-11T20:32:13", "link": "pygame.draw.rect", "id": 434}, {"content": "see:\r\nhttp://www.pygame.org/docs/tut/newbieguide.html\r\n#4", "users_id": 1506, "datetimeon": "2007-03-17T13:13:59", "link": "pygame.draw", "id": 439}, {"content": "The documentation is incorrect. pygame.mixer.music(5) will indeed play the music five times, not six. Perhaps the function used to behave differently, but I can find nothing in the documentation for either pygame or SDL_mixer that suggests so.\r\n", "users_id": null, "datetimeon": "2007-03-19T15:33:19", "link": "pygame.mixer.music.play", "id": 440}, {"content": "I meant to say pygame.mixer.music.play(5), of course. I left out the \"play\" part.", "users_id": null, "datetimeon": "2007-03-19T15:34:19", "link": "pygame.mixer.music.play", "id": 441}, {"content": "pygame.sprite.RenderPlain\r\n\r\n |  add(self, *sprites)\r\n |      add(sprite, list, or group, ...)\r\n |      add sprite to group\r\n |      \r\n |      Add a sprite or sequence of sprites to a group.\r\n |  \r\n |  add_internal(self, sprite)\r\n |  \r\n |  clear(self, surface, bgd)\r\n |      clear(surface, bgd)\r\n |      erase the previous position of all sprites\r\n |      \r\n |      Clears the area of all drawn sprites. the bgd\r\n |      argument should be Surface which is the same\r\n |      dimensions as the surface. The bgd can also be\r\n |      a function which gets called with the passed\r\n |      surface and the area to be cleared.\r\n |  \r\n |  copy(self)\r\n |      copy()\r\n |      copy a group with all the same sprites\r\n |      \r\n |      Returns a copy of the group that is the same class\r\n |      type, and has the same sprites in it.\r\n |  \r\n |  draw(self, surface)\r\n |      draw(surface)\r\n |      draw all sprites onto the surface\r\n |      \r\n |      Draws all the sprites onto the given surface.\r\n |  \r\n |  empty(self)\r\n |      empty()\r\n |      remove all sprites\r\n |      \r\n |      Removes all the sprites from the group.\r\n |  \r\n |  has(self, *sprites)\r\n |      has(sprite or group, ...)\r\n |      ask if group has a sprite or sprites\r\n |      \r\n |      Returns true if the given sprite or sprites are\r\n |      contained in the group. You can also use 'sprite in group'\r\n |      or 'subgroup in group'.\r\n |  \r\n |  has_internal(self, sprite)\r\n |  \r\n |  remove(self, *sprites)\r\n |      remove(sprite, list, or group, ...)\r\n |      remove sprite from group\r\n |      \r\n |      Remove a sprite or sequence of sprites from a group.\r\n |  \r\n |  remove_internal(self, sprite)\r\n |  \r\n |  sprites(self)\r\n |      sprites()\r\n |      get a list of sprites in the group\r\n |      \r\n |      Returns an object that can be looped over with a 'for' loop.\r\n |      (For now it is always a list, but newer version of Python\r\n |      could return different iterators.) You can also iterate directly\r\n |      over the sprite group.\r\n |  \r\n |  update(self, *args)\r\n |      update(*args)\r\n |      call update for all member sprites\r\n |      \r\n |      calls the update method for all sprites in the group.\r\n |      Passes all arguments on to the Sprite update function.", "users_id": null, "datetimeon": "2007-03-20T09:54:09", "link": "pygame.sprite", "id": 444}, {"content": "Properties in the object returned by get_rect():\r\n\r\nbottom\r\nbottomleft\r\nbottomright\r\ncenter\r\ncenterx\r\ncentery\r\nclamp\r\nclamp_ip\r\nclip\r\ncollidedict\r\ncollidedictall\r\ncollidelist\r\ncollidelistall\r\ncollidepoint\r\ncolliderect\r\ncontains\r\nfit\r\nh\r\nheight\r\ninflate\r\ninflate_ip\r\nleft\r\nmidbottom\r\nmidleft\r\nmidright\r\nmidtop\r\nmove\r\nmove_ip\r\nnormalize\r\nright\r\nsize\r\ntop\r\ntopleft\r\ntopright\r\nunion\r\nunion_ip\r\nunionall\r\nunionall_ip\r\nw\r\nwidth\r\nx\r\ny", "users_id": null, "datetimeon": "2007-03-23T00:10:38", "link": "Surface.get_rect", "id": 446}, {"content": "i've noticed the loop functionality to be iffy for certain wave files (an audible gap between each loop). from what i can tell, it looks like this happens with stereo wave files, but i'm not completely sure. the mono waves i try to loop play as expected", "users_id": null, "datetimeon": "2008-01-04T23:39:18", "link": "pygame.mixer.music.fadeout", "id": 1365}, {"content": "i've noticed the loop functionality to be iffy for certain wave files (an audible gap between each loop). from what i can tell, it looks like this happens with stereo wave files, but i'm not completely sure. the mono waves i try to loop play as expected (i accidentally added this comment to fadeout(), sorry)", "users_id": null, "datetimeon": "2008-01-04T23:39:59", "link": "pygame.mixer.music.play", "id": 1366}, {"content": "what about osx? is macosx working?", "users_id": null, "datetimeon": "2007-03-25T15:39:01", "link": "pygame.display.init", "id": 448}, {"content": "omg, you should really use the KMOD_ constants here", "users_id": null, "datetimeon": "2007-03-28T15:20:15", "link": "pygame.key.get_mods", "id": 451}, {"content": "In 1.7.1, the behaviour when None is passed in is NOT reversed. pygame.event.set_allowed(None) will BLOCK all events.", "users_id": null, "datetimeon": "2007-04-01T20:22:29", "link": "pygame.event.set_allowed", "id": 457}, {"content": "just do:\r\nimg = pygame.image.load(\"<<enter file>>\").convert()\r\n\r\n-harry666t", "users_id": null, "datetimeon": "2007-04-03T12:22:16", "link": "pygame.draw", "id": 463}, {"content": "BTW, Those values gotten below are if num-lock is on\r\nKMOD_NUM == 4096\r\nKMOD_LSHIFT == 1\r\nKMOD_RSHIFT == 2\r\nKMOD_NUM | KMOD_LSHIFT == 4097\r\nThe simpler way is to use the bitwise AND (&)\r\n\r\nkeymods & KMOD_LSHIFT \r\n\r\nreturns true (actually 1 in this case) if left shift is pressed, no matter what else is pressed or if num lock is on, or if the planets are aligned correctly.\r\n", "users_id": null, "datetimeon": "2007-04-03T19:15:04", "link": "pygame.key.get_mods", "id": 466}, {"content": "What is the definition of the key and mod members of KEYDOWN?\r\n", "users_id": null, "datetimeon": "2007-04-07T05:35:39", "link": "pygame.event", "id": 475}, {"content": "who do i get a reference to a reserved channel? its not channel 0 nor num_channels-1\r\n\r\n", "users_id": null, "datetimeon": "2007-04-07T11:19:42", "link": "pygame.mixer.set_reserved", "id": 476}, {"content": "\"does not work with current release\". Which release is that? Is the information valid?", "users_id": null, "datetimeon": "2007-04-18T13:12:55", "link": "pygame.movie", "id": 497}, {"content": "FLAC support would be cool", "users_id": null, "datetimeon": "2007-11-19T06:00:08", "link": "pygame.mixer.Sound", "id": 1142}, {"content": "Dear readers, here is a working example of MPEG playing.\r\n-tgfcoder\r\n\r\n\r\nimport pygame, time\r\n\r\npygame.init()\r\n\r\ncine = pygame.movie.Movie('a-movie.mpg')\r\nsz=cine.get_size()\r\npygame.display.set_mode(sz)\r\nscreen = pygame.display.get_surface()\r\ncine.set_display(screen)\r\ncine.play()\r\nwhile True:\r\n time.sleep(1)\r\n", "users_id": 2360, "datetimeon": "2008-01-01T09:40:25", "link": "pygame.movie", "id": 1349}, {"content": "Oh, please replace pygame.init() with pygame.display.init()\r\nBecause we don't want the mixer to be initialised.\r\n", "users_id": 2360, "datetimeon": "2008-01-01T09:46:24", "link": "pygame.movie", "id": 1350}, {"content": "fadeout does not block in linux either", "users_id": null, "datetimeon": "2008-01-01T21:41:36", "link": "pygame.mixer.music.fadeout", "id": 1351}, {"content": "Watch out for this one, it has a major twist:\r\n(x,y) are coordinates in the referential of the rectangle.\r\nFor instance:\r\n>>> import pygame\r\n>>> r = pygame.Rect(32,32,132,132)\r\n>>> r.collidepoint(140,140)\r\n1\r\n\r\n\r\n", "users_id": null, "datetimeon": "2007-04-20T17:57:54", "link": "Rect.collidepoint", "id": 502}, {"content": "Well, actually it's not even that (x,y) needs to be in the referential of the Rect, because if it was true, then (0,0) would return 1, and it doesn't. It is really a bug.", "users_id": 1639, "datetimeon": "2007-04-20T18:04:08", "link": "Rect.collidepoint", "id": 503}, {"content": "pto", "users_id": null, "datetimeon": "2010-11-29T20:06:24", "link": "pygame.sprite.spritecollideany", "id": 3530}, {"content": "# Ellipse example:\r\n# When border=0 ellipse is filled\r\n#                  (screen, (rgb colour) (Xpos,Ypos,width,height),border width)\r\npygame.draw.ellipse(screen, (0, 127, 0), (300, 150, 80, 40), 0)\r\n", "users_id": 2392, "datetimeon": "2008-01-10T10:08:04", "link": "pygame.draw.ellipse", "id": 1392}, {"content": "# Circle example:\r\n# When border=0 circle is filled\r\n#                 (screen, (rgb colour), (Xpos,Ypos),Diameter,border width)\r\npygame.draw.circle(screen, (0, 127, 255), (300, 140), 50, 4)", "users_id": 2392, "datetimeon": "2008-01-10T10:20:38", "link": "pygame.draw.circle", "id": 1393}, {"content": "Music will be resampled in some cases, not in others. When playing a 44.1kHz MP3, the default 22050 frequency works, but a 48kHz mp3 plays in less than half speed - 48000 or 24000 works then.\r\nTo handle this behaviour, you have to know the sample rate of your music files before playing them, and can't switch smoothly. Big bummer.", "users_id": null, "datetimeon": "2008-01-13T07:45:26", "link": "pygame.mixer.music.play", "id": 1406}, {"content": "thank you Trudget for the working code \r\n", "users_id": 2402, "datetimeon": "2008-01-13T13:38:10", "link": "pygame.movie", "id": 1407}, {"content": "\"\"\"It seems that this method does not detect point collisions that fall anywhere \r\nalong the right wall or bottom wall of the rect used. The following program\r\ncreates a rect with a width and height of 4, and a topleft corner at [0,0]. \r\nThe program then moves along each row of the rect area from left to right and\r\ntop to bottom by 1 unit, creating a new point and checking to see if the point\r\ncollides with the rect. If the point collides, a 1 is printed, and if the\r\npoint doesn't collide, a 0 is printed.\"\"\"\r\n\r\n# import\r\nimport pygame\r\n\r\n# main\r\ny = 4\r\nr = pygame.Rect(0,0,y,y)\r\np = [0,0]\r\npList = []\r\nwhile p != [0,y+1]:\r\n\tfor n in range(0,y+1):\r\n\t\tp[0] = n\r\n\t\tif r.collidepoint(p):\r\n\t\t\tpList.append(1)\r\n\t\telse:\r\n\t\t\tpList.append(0)\r\n\r\n\tprint '%d %d %d %d %d' % (pList[0],pList[1],pList[2],pList[3],pList[4])\r\n\t\r\n\tpList = []\r\n\tp[0] = 0\r\n\tp[1] += 1\r\n\r\n# wait for user to manually exit program\r\ninput('press enter to exit')\r\n\r\n\"\"\"Here is the output:\"\"\"\r\n1 1 1 1 0\r\n1 1 1 1 0\r\n1 1 1 1 0\r\n1 1 1 1 0\r\n0 0 0 0 0\r\npress enter to exit\r\n\r\n\"\"\"Even if you were to directly reference the topright, bottomleft, or bottomright\r\npoint of the rect as the argument to the collidepoint function, the rect still \r\nwould not detect a collision. The rect does, however, detect collision with its\r\ntopleft point:\"\"\"\r\n\r\n>>>r.collidepoint(r.bottomleft)\r\n0\r\n>>>r.collidepoint(r.topright)\r\n0\r\n>>>r.collidepoint(r.bottomright)\r\n0\r\n>>>r.collidepoint(r.topleft)\r\n1", "users_id": 2406, "datetimeon": "2008-01-16T15:33:48", "link": "Rect.collidepoint", "id": 1420}, {"content": "# This should draw a square with a hight of 20 pixels on a Surface:\r\nheight = 20\r\npygame.draw.rect(Surface, (255, 255, 255), (0, 0, height, height))\r\n", "users_id": null, "datetimeon": "2007-12-06T15:43:11", "link": "pygame.draw.rect", "id": 1220}, {"content": "Anonymous[0], that's nonsense. The x,y coords are absolute coordinates. To illustrate:\r\n\r\n>>> r = pygame.rect.Rect(32, 32, 132, 132)\r\n>>> r.collidepoint(1,1)\r\n0\r\n>>> r.collidepoint(32,32)\r\n1\r\n", "users_id": null, "datetimeon": "2007-11-23T19:43:53", "link": "Rect.collidepoint", "id": 1153}, {"content": "A little black cross. Mouse cursor is 8*8 Pixel, hotspot is at (4, 4). \r\nthe cross is (Read Binary):\r\n00011000 => 24 \r\n00011000\r\n00011000\r\n11100111 => 231\r\n11100111\r\n00011000\r\n00011000\r\nand has no AND-Mask. \r\n\r\npygame.mouse.set_cursor((8, 8), (4, 4), (24, 24, 24, 231, 231, 24, 24, 24), (0, 0, 0, 0, 0, 0, 0, 0))\r\n", "users_id": null, "datetimeon": "2007-11-26T11:20:04", "link": "pygame.mouse.set_cursor", "id": 1157}, {"content": "excellent comments!\r\njorgen", "users_id": null, "datetimeon": "2007-11-26T19:56:49", "link": "Surface.fill", "id": 1158}, {"content": "True.  set_allowed(None) blocks all event types.\r\n\r\n- Another (initially skeptical) pygame user.", "users_id": null, "datetimeon": "2007-11-26T22:35:30", "link": "pygame.event.set_blocked", "id": 1159}, {"content": "The first channels are reserved.\r\nFor example: pygame.mixer.Channel(0)", "users_id": null, "datetimeon": "2007-11-27T12:11:21", "link": "pygame.mixer.set_reserved", "id": 1160}, {"content": "I have found that just watching for joystick events may not provide enough \r\ngranularity for fast-paced arcade games that require 100 millisecond changes.\r\nInstead of events, consider polling the status of the axes in the main game loop\r\n(or whatever your local equivalent is)  ", "users_id": null, "datetimeon": "2007-12-08T11:08:32", "link": "pygame.joystick", "id": 1230}, {"content": "Actually, on my system [Ubunty Gutsy] it returned a list of None:\r\n>>> import pygame\r\n>>> pygame.font.get_fonts()\r\n[None]\r\n", "users_id": null, "datetimeon": "2007-12-12T08:11:00", "link": "pygame.font.get_fonts", "id": 1242}, {"content": "How do you draw squares in pygame??", "users_id": null, "datetimeon": "2007-11-29T13:19:20", "link": "pygame.draw.rect", "id": 1171}, {"content": "I've got some errors with this one. It's saying my sprite is not iterable.\r\nWhat could it be?", "users_id": null, "datetimeon": "2010-11-28T21:01:10", "link": "pygame.sprite.spritecollide", "id": 3476}, {"content": "\"... will only effect the smaller area\" is probably meant to read \"... will only affect the smaller area\"", "users_id": null, "datetimeon": "2007-12-20T07:32:23", "link": "pygame.Surface", "id": 1290}, {"content": "# Matthew N. Brown copyright 2007\r\n\r\n# Here is an example program in wich\r\n# balls hit walls and other balls:\r\n#\r\n# This program draws circles using:   pygame.draw.circle\r\n#\r\n# You can copy this program on to\r\n# your own computer and run it.\r\n#\r\n\r\nimport os, sys\r\n\r\n ## INIT STUFF!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\ndef HE_HE_init():\r\n    global screen, big_black_rect, APPLICATION_w_size, APPLICATION_z_size\r\n    global WOW_pi_divided_by_180, WOW_180_divided_by_pi\r\n    pygame.init()\r\n    random.seed()\r\n    APPLICATION_w_size = 700\r\n    APPLICATION_z_size = 500\r\n    ##### To close window while in fullscreen, press Esc while holding shift. #######\r\n    screen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size))\r\n    #screen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), FULLSCREEN)\r\n    pygame.display.set_caption(\"They bwounce off bwalls? Matthew N. Brown copyright 2007\")\r\n    pygame.mouse.set_visible(1)\r\n    big_black_rect = pygame.Surface(screen.get_size())\r\n    big_black_rect = big_black_rect.convert()\r\n    big_black_rect.fill((0, 0, 0))\r\n    screen.blit(big_black_rect, (0, 0))\r\n    #fonty = pygame.font.Font(None, 36)\r\n    fonty = pygame.font.SysFont(\"Times New Roman\", 25)\r\n    fonty.set_bold(0)\r\n    IMAGEE = fonty.render('Loading . . .', 1, (0, 250, 10))\r\n    screen.blit(IMAGEE, (100, 200)); del IMAGEE\r\n    pygame.display.flip()\r\n    pygame.mixer.init(22050, -16, True, 1024)\r\n    WOW_pi_divided_by_180 = math.pi / 180.0\r\n    WOW_180_divided_by_pi = 180.0 / math.pi\r\n    set_up_key_variables()\r\n    Lets_ROLL()\r\n ## INIT STUFF!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\n\r\n ## SAVE LEVEL?!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\ndef write_to_file_WEEE_STRANGE(file_namey, data):\r\n    noq = '\\n'\r\n    filey = open(file_namey, 'w')\r\n    for d in data:\r\n     filey.write(   str(d) + noq)\r\n ## SAVE LEVEL?!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\n\r\n ## SMALL FUNCTIONS STUFF!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\n     ### some functions: ###\r\ndef distance_2D (w1, z1, w2, z2):\r\n    return math.sqrt(math.pow(float(w1) - float(w2), 2) + math.pow(float(z1) - float(z2), 2))\r\ndef rect_touching_rect(w1, z1, wol1, zol1, w2, z2, wol2, zol2):\r\n    w2 -= w1\r\n    z2 -= z1\r\n    ww1 = -wol2\r\n    zz1 = -zol2\r\n    return (w2 > ww1 and w2 < wol1 and z2 > zz1 and z2 < zol1)\r\ndef rect_touching_rect2(w1, z1, wol1, zol1, w2, z2, wol2, zol2):\r\n    w2 -= w1\r\n    z2 -= z1\r\n    ww1 = -wol2\r\n    zz1 = -zol2\r\n    return (w2 >= ww1 and w2 <= wol1 and z2 >= zz1 and z2 <= zol1)\r\ndef positive(n):\r\n    if n < 0: n = -n; return n\r\ndef int_randy(range, add):\r\n    return int((random.random() * range) + add)\r\ndef randy(range, add):\r\n    return (random.random() * range) + add\r\ndef freaky_rect_switcharoo_2D(pw, pz, pwol, pzol, buffy_the_fat):\r\n    buffy_the_fat2 = buffy_the_fat * 2\r\n    if pwol > 0:\r\n     gw = pw; gwol = pwol\r\n    else:\r\n     gw = pwol + pw; gwol = pw - gw\r\n    if pzol > 0:\r\n     gz = pz; gzol = pzol\r\n    else:\r\n     gz = pzol + pz; gzol = pz - gz\r\n    return [gw - buffy_the_fat, gz - buffy_the_fat, gwol + buffy_the_fat2, gzol + buffy_the_fat2]\r\ndef points_rotated_by_angle_2D(points_wz, axis_w, axis_z, angle):\r\n    rotated_points_wz = []\r\n    angle = -angle -90\r\n    angle_times_WOW_pi_divided_by_180 = angle * WOW_pi_divided_by_180\r\n    c1 = math.cos(angle_times_WOW_pi_divided_by_180)\r\n    s1 = math.sin(angle_times_WOW_pi_divided_by_180)\r\n    for pointy in points_wz:\r\n     xt = pointy[0] - axis_w\r\n     yt = pointy[1] - axis_z\r\n     rotated_points_wz += [(-xt * s1) + (yt * c1) + axis_w, (-xt * c1) - (yt * s1) + axis_z]\r\n    return rotated_points_wz\r\ndef point_rotated_by_angle_2D(point_w, point_z, axis_w, axis_z, angle):\r\n    angle = -angle -90\r\n    angle_times_WOW_pi_divided_by_180 = angle * WOW_pi_divided_by_180\r\n    c1 = math.cos(angle_times_WOW_pi_divided_by_180)\r\n    s1 = math.sin(angle_times_WOW_pi_divided_by_180)\r\n    xt = point_w - axis_w\r\n    yt = point_z - axis_z\r\n    return (-xt * s1) + (yt * c1) + axis_w, (-xt * c1) - (yt * s1) + axis_z\r\ndef arc_tangent_2D(point_w, point_z):\r\n    return math.atan2(point_w, point_z) * WOW_180_divided_by_pi + 180\r\ndef arc_tangent_2D_2(point_w, point_z):\r\n    return -math.atan2(point_w, point_z) * WOW_180_divided_by_pi + 180\r\ndef ball_to_ball_wzkol_bounce(V1, m1, V2, m2, ball1_is_to_the_left):\r\n    if (ball1_is_to_the_left and V1 >= V2) or (not ball1_is_to_the_left and V1 <= V2):\r\n     Rv1 = V1 - V2\r\n     Rv2 = 0 #V2 - V2\r\n     NewV1 = ((m1 - m2) / float(m1 + m2)) * float(Rv1) + V2\r\n     NewV2 = (( 2 * m1) / float(m1 + m2)) * float(Rv1) + V2\r\n     return NewV1, NewV2\r\n    else:\r\n     return V1, V2\r\ndef Find_where_ball_stops_on_line_w(ball_w, ball_z, ball_wol, ball_zol, ball_rad, line_w, line_rad):\r\n    did_collide = False\r\n    totally = ball_rad + line_rad\r\n    b1 = line_w + totally\r\n    b2 = line_w - totally\r\n    New_ball_w = ball_w + ball_wol\r\n    New_ball_z = ball_z + ball_zol\r\n    if   ball_w >= b1 and ball_wol < 0 and New_ball_w < b1: New_ball_w = b1; did_collide = True\r\n    elif ball_w <= b2 and ball_wol > 0 and New_ball_w > b2: New_ball_w = b2; did_collide = True\r\n    else:\r\n     if ball_w > b2 and ball_w < b1:\r\n      if   ball_w > line_w and ball_wol < 0:\r\n       New_ball_w = ball_w; New_ball_z = ball_z\r\n       did_collide = True\r\n      elif ball_w < line_w and ball_wol > 0:\r\n       New_ball_w = ball_w; New_ball_z = ball_z\r\n       did_collide = True\r\n     return New_ball_w, New_ball_z, did_collide\r\n    New_ball_z = (float(ball_zol) / float(ball_wol) * float(New_ball_w - ball_w)) + float(ball_z)\r\n    return New_ball_w, New_ball_z, did_collide\r\ndef find_where_ball_collides_on_a_wall(\r\n                                       ball_w, ball_z,\r\n                                       ball_wol, ball_zol,\r\n                                       ball_rad,\r\n                                       wall_type,\r\n                                       wall_w1, wall_z1,\r\n                                       wall_w2, wall_z2,\r\n                                       wall_rad):\r\n    toetoadly = ball_rad + wall_rad\r\n    did_collide = False\r\n    New_ball_w = ball_w + ball_wol\r\n    New_ball_z = ball_z + ball_zol\r\n    angle_hit_at = None\r\n    Relate_ball_w = ball_w - wall_w1\r\n    Relate_ball_z = ball_z - wall_z1\r\n    Relate_wall_w2 = wall_w2 - wall_w1\r\n    Relate_wall_z2 = wall_z2 - wall_z1\r\n    arc_tangeriney = arc_tangent_2D(Relate_wall_w2, Relate_wall_z2)\r\n    Rotate_Relate_ball_w, Rotate_Relate_ball_z, Rotate_Relate_wall_w2, Rotate_Relate_wall_z2 = points_rotated_by_angle_2D(((Relate_ball_w, Relate_ball_z), (Relate_wall_w2, Relate_wall_z2)), 0, 0, arc_tangeriney)\r\n    Rotate_ball_wol, Rotate_ball_zol = point_rotated_by_angle_2D(ball_wol, ball_zol, 0, 0, arc_tangeriney)\r\n    Rotate_Relate_ball_collide_w, Rotate_Relate_ball_collide_z, did_hit_weird_line = Find_where_ball_stops_on_line_w(Rotate_Relate_ball_w, Rotate_Relate_ball_z, Rotate_ball_wol, Rotate_ball_zol, ball_rad, 0, wall_rad)\r\n    if Rotate_Relate_ball_w > -toetoadly and Rotate_Relate_ball_w < toetoadly:\r\n     HE_HE_strange_popper_z = Rotate_Relate_ball_z\r\n    else:\r\n     HE_HE_strange_popper_z = Rotate_Relate_ball_collide_z\r\n    Rotate_angle_hit_at = None\r\n    if   HE_HE_strange_popper_z < Rotate_Relate_wall_z2:\r\n       if ball_is_going_towards_point(Rotate_Relate_ball_w, Rotate_Relate_ball_z, Rotate_ball_wol, Rotate_ball_zol, 0, Rotate_Relate_wall_z2):\r\n        p1_touched, p1_collide_w, p1_collide_z, p1_angle_hit_at = find_where_ball_collides_on_another_ball(Rotate_Relate_ball_w, Rotate_Relate_ball_z, Rotate_ball_wol, Rotate_ball_zol, ball_rad, 0, Rotate_Relate_wall_z2, wall_rad)\r\n        if p1_touched:\r\n         Rotate_Relate_ball_collide_w = p1_collide_w\r\n         Rotate_Relate_ball_collide_z = p1_collide_z\r\n         Rotate_angle_hit_at = p1_angle_hit_at\r\n         did_collide = True\r\n    elif HE_HE_strange_popper_z > 0:\r\n       if ball_is_going_towards_point(Rotate_Relate_ball_w, Rotate_Relate_ball_z, Rotate_ball_wol, Rotate_ball_zol, 0, 0):\r\n        p2_touched, p2_collide_w, p2_collide_z, p2_angle_hit_at = find_where_ball_collides_on_another_ball(Rotate_Relate_ball_w, Rotate_Relate_ball_z, Rotate_ball_wol, Rotate_ball_zol, ball_rad, 0, 0, wall_rad)\r\n        if p2_touched:\r\n         Rotate_Relate_ball_collide_w = p2_collide_w\r\n         Rotate_Relate_ball_collide_z = p2_collide_z\r\n         Rotate_angle_hit_at = p2_angle_hit_at\r\n         did_collide = True\r\n    else:\r\n       if did_hit_weird_line:\r\n        did_collide = True\r\n        if Rotate_Relate_ball_collide_w < 0: Rotate_angle_hit_at = 90\r\n        else: Rotate_angle_hit_at = 270\r\n    if did_collide:\r\n     arc_tangeriney_2 = -arc_tangeriney\r\n     angle_hit_at = Rotate_angle_hit_at + arc_tangeriney\r\n     New_ball_w, New_ball_z = point_rotated_by_angle_2D(Rotate_Relate_ball_collide_w, Rotate_Relate_ball_collide_z, 0, 0, arc_tangeriney_2)\r\n     New_ball_w += wall_w1\r\n     New_ball_z += wall_z1\r\n    return did_collide, New_ball_w, New_ball_z, angle_hit_at  #, is_moving_towards\r\ndef zol_at_angle(wol, zol, angle):\r\n    rotated_wol, rotated_zol = point_rotated_by_angle_2D(wol, zol, 0, 0, angle)\r\n    return rotated_zol\r\ndef wzol_bounce_at_angle(wol, zol, angle, multi):\r\n    rotated_wol, rotated_zol = point_rotated_by_angle_2D(wol, zol, 0, 0, angle)\r\n    if rotated_zol > 0: rotated_zol = -rotated_zol * multi\r\n    return point_rotated_by_angle_2D(rotated_wol, rotated_zol, 0, 0, -angle)\r\ndef ball_is_going_towards_point(ball_w, ball_z, ball_wol, ball_zol, point_w, point_z):\r\n    angley = arc_tangent_2D(ball_w - point_w, ball_z - point_z)\r\n    rotated_wol, rotated_zol = point_rotated_by_angle_2D(ball_wol, ball_zol, 0, 0, angley)\r\n    return rotated_zol > 0\r\ndef find_where_ball_collides_on_another_ball (\r\n                                               ball1_w, ball1_z,\r\n                                               ball1_wol, ball1_zol,\r\n                                               ball1_rad,\r\n                                               ball2_w, ball2_z,\r\n                                               ball2_rad\r\n                                             ):\r\n    totally = ball1_rad + ball2_rad\r\n    dis_from_each_other = math.sqrt(math.pow(float(ball1_w) - float(ball2_w), 2) + math.pow(float(ball1_z) - float(ball2_z), 2))\r\n    if dis_from_each_other < totally:\r\n     angley = arc_tangent_2D(ball1_w - ball2_w, ball1_z - ball2_z)\r\n     return True, ball1_w, ball1_z, angley\r\n    else:\r\n        they_did_touch = False\r\n        New_ball1_w = ball1_w + ball1_wol\r\n        New_ball1_z = ball1_z + ball1_zol\r\n        angle_hit_at = None\r\n        Relate_ball1_w = ball1_w - ball2_w\r\n        Relate_ball1_z = ball1_z - ball2_z\r\n        Relate_ball2_w = 0\r\n        Relate_ball2_z = 0\r\n        arcy_tangeriney = arc_tangent_2D(ball1_wol, ball1_zol)\r\n        Rotated_Relate_ball1_w, Rotated_Relate_ball1_z, Rotated_ball1_wol, Rotated_ball1_zol = points_rotated_by_angle_2D(((Relate_ball1_w, Relate_ball1_z), (ball1_wol, ball1_zol)), 0, 0, arcy_tangeriney)\r\n        did_collidey = False\r\n        if Rotated_Relate_ball1_z > 0 and (Rotated_Relate_ball1_w > -totally and Rotated_Relate_ball1_w < totally):\r\n         Rotated_Relate_ball1_collide_w = Rotated_Relate_ball1_w # + Rotated_ball1_wol\r\n         HE_HE = math.pow(Rotated_Relate_ball1_w, 2) - math.pow(totally, 2)\r\n         if HE_HE < 0: HE_HE = -HE_HE\r\n         Rotated_Relate_ball1_collide_z = math.sqrt(HE_HE)\r\n         Rotated_Relate_ball1_z__PLUS__Rotated_ball1_zol = Rotated_Relate_ball1_z + Rotated_ball1_zol\r\n         if Rotated_Relate_ball1_collide_z < Rotated_Relate_ball1_z__PLUS__Rotated_ball1_zol:\r\n          collision_wol = Rotated_ball1_wol\r\n          collision_zol = Rotated_ball1_zol\r\n          Rotated_Relate_ball1_collide_z = Rotated_Relate_ball1_z__PLUS__Rotated_ball1_zol\r\n          angley_to_hit = None\r\n         else:\r\n          did_collidey = True\r\n          they_did_touch = True\r\n          angley_to_hit = arc_tangent_2D(Rotated_Relate_ball1_collide_w, Rotated_Relate_ball1_collide_z)\r\n        else:\r\n         angley_to_hit = None\r\n         collision_wol = Rotated_ball1_wol\r\n         collision_zol = Rotated_ball1_zol\r\n         Rotated_Relate_ball1_collide_w = Rotated_Relate_ball1_w + Rotated_ball1_wol\r\n         Rotated_Relate_ball1_collide_z = Rotated_Relate_ball1_z + Rotated_ball1_zol\r\n        if did_collidey:\r\n         arcy_tangeriney_2 = -arcy_tangeriney\r\n         angle_hit_at = angley_to_hit + arcy_tangeriney\r\n         New_ball1_w, New_ball1_z = point_rotated_by_angle_2D(Rotated_Relate_ball1_collide_w, Rotated_Relate_ball1_collide_z, 0, 0, arcy_tangeriney_2)\r\n         New_ball1_w += ball2_w\r\n         New_ball1_z += ball2_z\r\n    return they_did_touch, New_ball1_w, New_ball1_z, angle_hit_at  #, New_ball1_wol, New_ball1_zol\r\n     ### some functions: ###\r\n\r\n ## GRAPHICS STUFF!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\ndef chilly_font(size):\r\n    fonti = pygame.font.SysFont(\"Times New Roman\", size)\r\n    return fonti\r\ndef chilly_font_Italicy(size):\r\n    fonti = pygame.font.SysFont(\"Times New Roman\", size)\r\n    fonti.set_italic(1)\r\n    return fonti\r\ndef draw_loading_messagey(stringy): # Draw loading message\r\n    pygame.mouse.set_visible(1)\r\n    fonty = chilly_font(26)\r\n    IMAGEE = fonty.render(stringy, 0, (0, 255, 0), (0, 0, 0))\r\n    screen.blit(IMAGEE, (200, 250))\r\n    del IMAGEE\r\n    pygame.display.flip()\r\n           ## GRAPHICS STUFF: ##\r\n#########################################################################################\r\n\r\n ## KEYS AND MOUSE STUFF!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\ndef set_up_key_variables():\r\n     global ky_held, ky_first_held, ky_time_last_pressed\r\n     global mowse_w, mowse_z, mowse_inn\r\n     global mowse_left_pressed, mowse_right_pressed, mowse_left_held, mowse_right_held\r\n     mowse_left_held = False\r\n     mowse_right_held = False\r\n     mowse_left_pressed = False\r\n     mowse_right_pressed = False\r\n     mowse_w = 0\r\n     mowse_z = 0\r\n     mowse_inn = 0\r\n     ky_held = []\r\n     ky_first_held = []\r\n     ky_time_last_pressed = []\r\n     m = -1\r\n     while m < 500:\r\n      m += 1\r\n      ky_held              += [0]\r\n      ky_first_held        += [0]\r\n      ky_time_last_pressed += [0]\r\ndef clear_all_kys():\r\n    global mowse_left_pressed, mowse_right_pressed, mowse_left_held, mowse_right_held\r\n    mowse_left_held = False\r\n    mowse_right_held = False\r\n    mowse_left_pressed = False\r\n    mowse_right_pressed = False\r\n    m = -1\r\n    while (m < 500):\r\n     m += 1; ky_held[m] = 0; ky_first_held[m] = 0; ky_time_last_pressed[m] = 0\r\ndef clear_these_ky_first_held(list_keys_numbers):\r\n    for k in list_keys_numbers:\r\n     ky_first_held[k] = 0\r\ndef clear_first_held_kys():\r\n    m = -1\r\n    while (m < 500):\r\n     m += 1; ky_first_held[m] = 0\r\ndef old_style_ky(n):\r\n    return (ky_first_held_CEV(n) or (ky_held[n] and ky_time_last_pressed[n] < time.time() - .3))\r\ndef ky_first_held_CEV(n):\r\n    if (ky_first_held[n]):\r\n     ky_first_held[n] = 0; return 1\r\n    else:\r\n     return 0\r\ndef mowse_in_rect (w, z, wol, zol):\r\n    return (mowse_w >= w and mowse_z >= z and mowse_w <= w + wol and mowse_z <= z + zol)\r\ndef mowse_in_circle (w, z, rad):\r\n    dia = rad * 2\r\n    if mowse_in_rect(w - rad, z - rad, w + dia, z + dia):\r\n     return (distance_2D(mowse_w, mowse_z, w, z) < rad)\r\n    else:\r\n     return 0\r\n    ## CHECK FOR: KEYBOARD, MOUSE, JOYSTICK, AND OTHERY INPUTY: ##\r\ndef check_for_keys():\r\n        global mowse_w, mowse_z, mowse_inn, mowse_left_pressed, mowse_right_pressed, mowse_left_held, mowse_right_held, APPLICATION_w_size, APPLICATION_z_size\r\n        global loopy\r\n        global unicodey\r\n        mowse_left_pressed = False\r\n        mowse_right_pressed = False\r\n        unicodey = ''\r\n        for e in pygame.event.get():\r\n          if e.type == QUIT:\r\n            loopy = 0\r\n          elif e.type == ACTIVEEVENT:\r\n            mowse_inn = (e.gain and (e.state == 1 or e.state == 6))\r\n          elif e.type == KEYDOWN:\r\n            ky_held[e.key] = 1\r\n            ky_first_held[e.key] = 1\r\n            ky_time_last_pressed[e.key] = time.time()\r\n            unicodey = e.unicode\r\n          elif e.type == KEYUP:\r\n            ky_held[e.key] = 0\r\n          elif e.type == MOUSEMOTION:\r\n            mowse_w = e.pos[0]\r\n            mowse_z = e.pos[1]\r\n            if mowse_w >= 0 and mowse_w <= APPLICATION_w_size and mowse_z >= 0 and mowse_z <= APPLICATION_z_size:\r\n             mowse_inn = 1\r\n            else:\r\n             mowse_inn = 0\r\n          elif e.type == MOUSEBUTTONUP:\r\n            if e.button == 1: mowse_left_held = 0\r\n            if e.button == 3: mowse_right_held = 0\r\n          elif e.type == MOUSEBUTTONDOWN:\r\n            mowse_left_pressed  = (e.button == 1)\r\n            mowse_right_pressed = (e.button == 3)\r\n            mowse_left_held =  mowse_left_held or e.button == 1\r\n            mowse_right_held = mowse_right_held or e.button == 3\r\n          elif e.type == JOYAXISMOTION:\r\n            pass\r\n          elif e.type == JOYBALLMOTION:\r\n            pass\r\n          elif e.type == JOYHATMOTION:\r\n            pass\r\n          elif e.type == JOYBUTTONUP:\r\n            pass\r\n          elif e.type == JOYBUTTONDOWN:\r\n            pass\r\n          elif e.type == VIDEORESIZE:\r\n            print e\r\n            print \"What happened!?\"\r\n            #global big_black_rect, screen\r\n            #APPLICATION_w_size = e.size[0]\r\n            #APPLICATION_z_size = e.size[1]\r\n            #screen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size))#, RESIZABLE)\r\n            #big_black_rect = pygame.Surface(screen.get_size())\r\n            #big_black_rect = big_black_rect.convert()\r\n            #big_black_rect.fill((0, 100, 200))\r\n          elif e.type == VIDEOEXPOSE:\r\n            pass\r\n          elif e.type == USEREVENT:\r\n            pass\r\n        if ky_held[27] and (ky_held[303] or ky_held[304]): loopy = 0\r\n    ## CHECK FOR: KEYBOARD, MOUSE, JOYSTICK, AND OTHERY INPUTY: ##\r\n ## KEYS AND MOUSE STUFF!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\n\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n\r\n\r\n ## MAIN LOOPY STUFF!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#########################################################################################\r\ndef ball_is_going_towards_ball(Bn1, Bn2):\r\n    global ball_max, ball_w, ball_z, ball_wol, ball_zol, ball_rad, ball_color, ball_mass, ball_RECT\r\n    arc_tangerine = arc_tangent_2D(ball_w[Bn1] - ball_w[Bn2], ball_z[Bn1] - ball_z[Bn2])\r\n    woly1, zoly1 = point_rotated_by_angle_2D(ball_wol[Bn1], ball_zol[Bn1], 0, 0, arc_tangerine)\r\n    return zoly1 > 0\r\ndef ball_is_relatively_going_towards_ball(Bn1, Bn2):\r\n    global ball_max, ball_w, ball_z, ball_wol, ball_zol, ball_rad, ball_color, ball_mass, ball_RECT\r\n    arc_tangerine = arc_tangent_2D(ball_w[Bn1] - ball_w[Bn2], ball_z[Bn1] - ball_z[Bn2])\r\n    woly1, zoly1, woly2, zoly2 = points_rotated_by_angle_2D(((ball_wol[Bn1], ball_zol[Bn1]), (ball_wol[Bn2], ball_zol[Bn2])), 0, 0, arc_tangerine)\r\n    return zoly1 > 0 and zoly1 > zoly2  # zoly2 < zoly1 or zoly2 > zoly1 # zoly1 + zoly2 > 0\r\n    #return zoly1 > 0 or zoly1 > zoly2\r\ndef Make_two_balls_hit_at_angle(Bn1, Bn2, angle):\r\n    global bounce_friction\r\n    #print angle\r\n    global ball_max, ball_w, ball_z, ball_wol, ball_zol, ball_rad, ball_color, ball_mass, ball_RECT\r\n    woly1, zoly1, woly2, zoly2 = points_rotated_by_angle_2D(((ball_wol[Bn1], ball_zol[Bn1]), (ball_wol[Bn2], ball_zol[Bn2])), 0, 0, angle)\r\n    V1 = zoly1 * bounce_friction\r\n    V2 = zoly2 * bounce_friction\r\n    zoly1, zoly2 = ball_to_ball_wzkol_bounce(V1, ball_mass[Bn1], V2, ball_mass[Bn2], True)\r\n    ball_wol[Bn1], ball_zol[Bn1], ball_wol[Bn2], ball_zol[Bn2] = points_rotated_by_angle_2D(((woly1, zoly1), (woly2, zoly2)), 0, 0, -angle)\r\n    updatey_ball_quick_rect(Bn1)\r\n    updatey_ball_quick_rect(Bn2)\r\ndef updatey_ball_quick_rect(B):\r\n    dia = ball_rad[B] * 2 + 4\r\n    ball_squar[B] = [ball_w[B] - ball_rad[B] - 2, ball_z[B] - ball_rad[B] - 2, dia, dia]\r\n    ball_RECT[B] = freaky_rect_switcharoo_2D(ball_w[B], ball_z[B], ball_wol[B], ball_zol[B], ball_rad[B] + 4)\r\ndef minus_ball_thing(n):\r\n    global ball_max, ball_w, ball_z, ball_wol, ball_zol, ball_rad, ball_color, ball_angle, ball_angleol, ball_squar, ball_mass, ball_RECT\r\n    if ball_max >= 0:\r\n     del ball_w      [n]\r\n     del ball_z      [n]\r\n     del ball_wol    [n]\r\n     del ball_zol    [n]\r\n     del ball_rad    [n]\r\n     del ball_color  [n]\r\n     del ball_squar  [n]\r\n     del ball_angle  [n]\r\n     del ball_angleol[n]\r\n     del ball_mass   [n]\r\n     del ball_RECT   [n]\r\n     ball_max -= 1\r\ndef add_ball_thing(w, z, wol, zol, rad, color, angle, angleol, mass_thing, rect_thing):\r\n    global ball_max, ball_w, ball_z, ball_wol, ball_zol, ball_rad, ball_color, ball_squar, ball_angle, ball_angleol, ball_mass, ball_RECT\r\n    ball_max += 1\r\n    ball_w       += [w]\r\n    ball_z       += [z]\r\n    ball_wol     += [wol]\r\n    ball_zol     += [zol]\r\n    ball_rad     += [rad]\r\n    ball_color   += [color]\r\n    ball_angle   += [angle]\r\n    ball_angleol += [angleol]\r\n    dia = rad * 2\r\n    ball_squar += [[w - rad, z - rad, dia, dia]]\r\n    if mass_thing == True:\r\n     ball_mass += [4 / 3 * math.pi * rad * rad * rad]\r\n    else:\r\n     ball_mass += [mass_thing]\r\n    if rect_thing == True:\r\n     ball_RECT += [None]\r\n     updatey_ball_quick_rect(ball_max)\r\n     #ball_RECT += [freaky_rect_switcharoo_2D(w, z, wol, zol, rad)]\r\n    else:\r\n     ball_RECT += [rect_thing]\r\ndef minus_wall_thing(WAL):\r\n    global wall_max, wall_type, wall_w1, wall_z1, wall_w2, wall_z2, wall_rad, wall_color, wall_RECT\r\n    if wall_max >= 0:\r\n     del wall_type   [WAL]\r\n     del wall_w1     [WAL]\r\n     del wall_z1     [WAL]\r\n     del wall_w2     [WAL]\r\n     del wall_z2     [WAL]\r\n     del wall_rad    [WAL]\r\n     del wall_color  [WAL]\r\n     del wall_RECT   [WAL]\r\n     wall_max        -= 1\r\ndef add_wall_thing(type, w1, z1, w2, z2, rad, color_thing, rect_thing):\r\n    global wall_max, wall_type, wall_w1, wall_z1, wall_w2, wall_z2, wall_rad, wall_color, wall_RECT\r\n    wall_max    += 1\r\n    wall_type   += [type]\r\n    wall_w1     += [w1]\r\n    wall_z1     += [z1]\r\n    wall_w2     += [w2]\r\n    wall_z2     += [z2]\r\n    wall_rad    += [rad]\r\n    if color_thing == True:\r\n     if   type == 1: color_thing = (220, 220, 220)\r\n     elif type == 2: color_thing = (240, 140, 130)\r\n     elif type == 3: color_thing = (100, 255, 100)\r\n     elif type == 4: color_thing = (255, 100, 100)\r\n     elif type == 5: color_thing = (100, 100, 255)\r\n    wall_color  += [color_thing]\r\n    if rect_thing == True:\r\n     wall_RECT   += [freaky_rect_switcharoo_2D(w1 - 2, z1 - 2, w2 - w1 + 4, z2 - z1 + 4, rad)]\r\n    else:\r\n     wall_RECT   += [rect_thing]\r\ndef reset_stuff():\r\n    global ball_max, ball_w, ball_z, ball_wol, ball_zol, ball_rad, ball_color, ball_angle, ball_angleol, ball_squar, ball_mass, ball_RECT\r\n    global wall_max, wall_type, wall_w1, wall_z1, wall_w2, wall_z2, wall_rad, wall_color, wall_RECT\r\n    global levely\r\n    if levely == 1:\r\n     ball_max     = -1\r\n     ball_w       = []\r\n     ball_z       = []\r\n     ball_wol     = []\r\n     ball_zol     = []\r\n     ball_rad     = []\r\n     ball_color   = []\r\n     ball_angle   = []\r\n     ball_angleol = []\r\n     ball_squar   = []\r\n     ball_mass    = []\r\n     ball_RECT    = []\r\n     #add_ball_thing(350, 300, 0, 0, 18, (230, 230, 250), 0, 0, True, True)\r\n     #add_ball_thing(150, 400, 0, 0, 40, (220, 210, 255), 0, 0, True, True)\r\n     #add_ball_thing(300, 150, 0, 0, 62, (110, 106, 255), 0, 0, True, True)\r\n     add_ball_thing(220, 200, 0, 0, 50, (180, 226, 255), 180, 0, True, True)\r\n     wall_max    = -1\r\n     wall_type   = []\r\n     wall_w1     = []\r\n     wall_z1     = []\r\n     wall_w2     = []\r\n     wall_z2     = []\r\n     wall_rad    = []\r\n     wall_color  = []\r\n     wall_RECT   = []\r\n     add_wall_thing(1, 160, 250, 300, 270,  1, True, True)\r\n     add_wall_thing(1, 500, 270, 600, 310,  1, True, True)\r\n     add_wall_thing(1, 200, 450, 600, 450, 10, True, True)\r\n     add_wall_thing(1, 300, 350, 400, 370,  5, True, True)\r\n     add_wall_thing(1, 300, 100, 400, 100, 20, True, True)\r\n     add_wall_thing(1, 650, 140, 700, 200,  6, True, True)\r\n     add_wall_thing(1, 650, 140, 600,  40,  6, True, True)\r\n     add_wall_thing(1, 150, 340, 150, 340, 30, True, True)\r\n     add_wall_thing(1,  40, 200,  40, 200, 30, True, True)\r\n     add_wall_thing(1,  30, 30,  30, 30, 10, True, True)\r\n     add_wall_thing(1,  30, 30,  30, 30, 10, True, True)\r\n     add_wall_thing(1,  30, 30,  30, 30, 10, True, True)\r\n     add_wall_thing(1,  30, 30,  30, 30, 10, True, True)\r\n     add_wall_thing(1,  30, 30,  30, 30, 10, True, True)\r\n     add_wall_thing(1,  0, 0, APPLICATION_w_size, 0, 5, True, True)\r\n     add_wall_thing(1,  0, 0, 0, APPLICATION_z_size, 5, True, True)\r\n     add_wall_thing(1,  0, APPLICATION_z_size, APPLICATION_w_size, APPLICATION_z_size, 5, True, True)\r\n     add_wall_thing(1,  APPLICATION_w_size, 0, APPLICATION_w_size, APPLICATION_z_size, 5, True, True)\r\n    elif levely == 2:\r\n     ball_max = 1\r\n     ball_w = [323.62638473709342, 384.72135876760257]\r\n     ball_z = [298.67896746658624, 109.24043981044279]\r\n     ball_wol = [-0.27396932987421913, 7.133321987715842]\r\n     ball_zol = [-0.38420912894762504, 1.6564147490246901]\r\n     ball_rad = [15, 28]\r\n     ball_color = [(137, 244, 234), (138, 221, 217)]\r\n     ball_angle = [51.908780125668613, 294.77431504891717]\r\n     ball_angleol = [-1.2400074168431123, 17.698615258690229]\r\n     ball_squar = [[306.62638473709342, 281.67896746658624, 34, 34], [354.72135876760257, 79.240439810442794, 60, 60]]\r\n     ball_mass = [10602.875205865552, 68964.24193160313]\r\n     ball_RECT = [[304.35241540721921, 279.2947583376386, 38.273969329874205, 38.384209128947646], [352.72135876760257, 77.240439810442794, 71.133321987715846, 65.656414749024691]]\r\n     wall_max = 17\r\n     wall_type = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n     wall_w1 = [189, 290, 166, 14, 697, 562, 643, 3, 0, 223, 117, 695, 497, 497, 0, 0, 0, 700]\r\n     wall_z1 = [284, 316, 436, 499, 446, 0, 128, 225, 106, 310, 155, 210, 159, 159, 0, 0, 500, 0]\r\n     wall_w2 = [222, 446, 697, 157, 377, 681, 679, 49, 383, 287, 5, 448, 376, 546, 700, 0, 700, 700]\r\n     wall_z2 = [301, 314, 478, 432, 487, 99, 98, 416, 171, 324, 225, 323, 147, 179, 0, 500, 500, 500]\r\n     wall_rad = [1, 1, 10, 5, 20, 6, 6, 30, 30, 10, 10, 10, 10, 10, 5, 5, 5, 5]\r\n     wall_color = [(220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220)]\r\n     wall_RECT = [[186, 281, 39, 23], [287, 313, 162, 4], [154, 424, 555, 66], [7, 429, 157, 73], [359, 424, 356, 85], [554, -8, 135, 115], [635, 94, 52, 38], [-29, 193, 110, 255], [-32, 74, 447, 129], [211, 298, 88, 38], [-3, 143, 128, 94], [440, 198, 263, 137], [368, 139, 137, 28], [485, 147, 73, 44], [-7, -7, 714, 14], [-7, -7, 14, 514], [-7, 493, 714, 14], [693, -7, 14, 514]]\r\n    elif levely == 3:\r\n     ball_max = 2\r\n     ball_w = [425.0, 492.31837629165733, 98.512856261065167]\r\n     ball_z = [126.0, 422.24553778829392, 430.4902396760661]\r\n     ball_wol = [-12.0, 2.6816237083426699, 6.487143738934833]\r\n     ball_zol = [-3.0, -1.245537788293916, -21.490239676066096]\r\n     ball_rad = [15, 28, 21]\r\n     ball_color = [(137, 244, 234), (138, 221, 217), (136, 235, 236)]\r\n     ball_angle = [93.833857527468922, 75.681742520058592, 323.2915629772819]\r\n     ball_angleol = [-0.87655530207419896, 0.30220691772972269, 1.1825329351046094]\r\n     ball_squar = [[408.0, 109.0, 34, 34], [462.31837629165733, 392.24553778829392, 60, 60], [75.512856261065167, 407.4902396760661, 46, 46]]\r\n     ball_mass = [10602.875205865552, 68964.24193160313, 29094.28956489508]\r\n     ball_RECT = [[394.0, 104.0, 50.0, 41.0], [460.31837629165733, 389.0, 66.68162370834267, 65.245537788293916], [73.512856261065167, 384.0, 56.487143738934833, 71.490239676066096]]\r\n     wall_max = 17\r\n     wall_type = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n     wall_w1 = [189, 290, 166, 14, 697, 562, 643, 3, 0, 223, 117, 695, 497, 497, 0, 0, 0, 700]\r\n     wall_z1 = [284, 316, 436, 499, 446, 0, 128, 225, 106, 310, 155, 210, 159, 159, 0, 0, 500, 0]\r\n     wall_w2 = [222, 446, 697, 157, 377, 681, 679, 49, 383, 287, 5, 480, 376, 546, 700, 0, 700, 700]\r\n     wall_z2 = [301, 314, 478, 432, 487, 99, 98, 416, 171, 324, 225, 325, 147, 179, 0, 500, 500, 500]\r\n     wall_rad = [1, 1, 10, 5, 20, 6, 6, 30, 30, 10, 10, 10, 10, 10, 5, 5, 5, 5]\r\n     wall_color = [(220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220)]\r\n     wall_RECT = [[186, 281, 39, 23], [287, 313, 162, 4], [154, 424, 555, 66], [7, 429, 157, 73], [359, 424, 356, 85], [554, -8, 135, 115], [635, 94, 52, 38], [-29, 193, 110, 255], [-32, 74, 447, 129], [211, 298, 88, 38], [-3, 143, 128, 94], [472, 198, 231, 139], [368, 139, 137, 28], [485, 147, 73, 44], [-7, -7, 714, 14], [-7, -7, 14, 514], [-7, 493, 714, 14], [693, -7, 14, 514]]\r\n    elif levely == 4:\r\n     ball_max = 15\r\n     ball_w = [60.722554805471077, 452.1573538490178, 80.244575784959252, 38.90004863123329, 526.62934623960155, 561.76077439217966, 51.00641675327735, 476.21179724447387, 74.019911348330012, 104.13986580489509, 77.672785567417591, 97.908669417930454, 492.31309851379422, 107.55531577343871, 25.677250467589708, 408.28461679522843]\r\n     ball_z = [123.53309256655999, 426.85562864865636, 446.98025958602022, 145.55077237791539, 432.36880616921724, 419.52605372165829, 185.76812996010321, 398.60172712183214, 227.90675893521163, 330.14246403509031, 280.7917430301959, 382.77488932204739, 431.7008452670733, 426.72875393133694, 108.86075181750218, 420.07030113046562]\r\n     ball_wol = [0.58974898201312453, 0.29357826379544644, -0.7453458908661944, -0.26977452024547638, -0.13077525550683244, 0.35703289164546842, 0.25581836770201244, -0.16968524576896582, -0.96858759109981474, 0.020541831638986374, 0.21623640500730243, 0.16869582232640204, -0.32778500262837312, -1.0423733543425631, 0.078384075232750969, 0.070169924397188832]\r\n     ball_zol = [2.5202528491916918, -0.067935899483811957, 1.0209651395893582, 1.5519551597452736, 0.37674466231734333, 0.7179102343171756, 1.2098558443319702, -0.21937811619009639, 1.6292902773669935, 0.95366629391114355, 0.99836183708718151, 0.65985328138026611, 0.72997687518744558, -0.33325230167901332, 1.8584237502130836, 1.1180771215980612]\r\n     ball_rad = [12, 20, 14, 19, 14, 23, 23, 13, 25, 28, 28, 25, 20, 20, 20, 24]\r\n     ball_color = [(132, 202, 208), (130, 220, 228), (133, 230, 241), (133, 200, 224), (138, 244, 248), (134, 176, 212), (132, 246, 206), (136, 191, 201), (130, 247, 204), (135, 190, 248), (136, 196, 244), (137, 246, 211), (132, 176, 232), (139, 200, 204), (135, 204, 206), (137, 234, 248)]\r\n     ball_angle = [250.64218161257492, 228.50285566079282, 169.93029421257162, 93.92451866434908, 160.53385135173758, 101.81391124171368, 58.682544988047297, 42.833392250734839, 278.96920717602609, 157.52451729820555, 104.82808146227505, 319.29094377305643, 8.3988066326588289, 61.303383965779759, 262.01723832271352, 187.75853100116501]\r\n     ball_angleol = [-11.145052526574146, 0.73910476098485844, -1.916370769365741, 7.8109934129380036, 1.2564621818214414, -0.21633250902344123, 0.96094866236460608, 18.696614939999161, -2.7765510174821686, -0.46915418861267033, 1.3615127061730832, 0.55215997018655683, 0.83188571652892485, -2.1096665563746759, 4.3536534603644128, 0.77565328887569629]\r\n     ball_squar = [[46.722554805471077, 109.53309256655999, 28, 28], [430.1573538490178, 404.85562864865636, 44, 44], [64.244575784959252, 430.98025958602022, 32, 32], [17.90004863123329, 124.55077237791539, 42, 42], [510.62934623960155, 416.36880616921724, 32, 32], [536.76077439217966, 394.52605372165829, 50, 50], [26.00641675327735, 160.76812996010321, 50, 50], [461.21179724447387, 383.60172712183214, 30, 30], [47.019911348330012, 200.90675893521163, 54, 54], [74.139865804895095, 300.14246403509031, 60, 60], [47.672785567417591, 250.7917430301959, 60, 60], [70.908669417930454, 355.77488932204739, 54, 54], [470.31309851379422, 409.7008452670733, 44, 44], [85.555315773438707, 404.72875393133694, 44, 44], [3.6772504675897082, 86.860751817502177, 44, 44], [382.28461679522843, 394.07030113046562, 52, 52]]\r\n     ball_mass = [5428.6721054031623, 25132.741228718347, 8620.5302414503913, 21548.184010972389, 8620.5302414503913, 38223.757816227015, 38223.757816227015, 6902.0790599367756, 49087.385212340516, 68964.24193160313, 68964.24193160313, 49087.385212340516, 25132.741228718347, 25132.741228718347, 25132.741228718347, 43429.376843225298]\r\n     tempy = [[24.00641675327735, 158.76812996010321, 54.255818367702012, 55.209855844331969], [459.04211199870491, 381.38234900564203, 34.16968524576896, 34.219378116190114], [44.051323757230193, 198.90675893521163, 58.968587591099819, 59.629290277366991], [72.139865804895095, 298.14246403509031, 64.02054183163898, 64.953666293911141], [45.672785567417591, 248.7917430301959, 64.216236405007308, 64.998361837087188], [68.908669417930454, 353.77488932204739, 58.168695822326399, 58.659853281380265], [467.98531351116583, 407.7008452670733, 48.327785002628389, 48.729976875187447], [82.512942419096149, 402.39550162965793, 49.042373354342558, 48.333252301679011], [1.6772504675897082, 84.860751817502177, 48.078384075232748, 49.858423750213085], [380.28461679522843, 392.07030113046562, 56.070169924397192, 57.118077121598063]]\r\n     ball_RECT = [[44.722554805471077, 107.53309256655999, 32.589748982013127, 34.520252849191692], [428.1573538490178, 402.78769274917255, 48.293578263795446, 48.067935899483814], [61.499229894093062, 428.98025958602022, 36.74534589086619, 37.020965139589357], [15.630274110987813, 122.55077237791539, 46.269774520245477, 47.551955159745276], [508.49857098409473, 414.36880616921724, 36.130775255506819, 36.376744662317343], [534.76077439217966, 392.52605372165829, 54.357032891645467, 54.717910234317173]] + tempy\r\n     del tempy\r\n     wall_max = 17\r\n     wall_type = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n     wall_w1 = [189, 196, 166, 14, 697, 562, 643, 0, 326, 51, 18, 695, 497, 497, 0, 0, 0, 700]\r\n     wall_z1 = [284, 221, 436, 499, 446, 0, 128, 201, 62, 9, 182, 210, 159, 159, 0, 0, 500, 0]\r\n     wall_w2 = [220, 297, 697, 157, 377, 681, 679, 49, 304, 139, 0, 480, 376, 524, 700, 0, 700, 700]\r\n     wall_z2 = [244, 218, 478, 432, 487, 99, 98, 416, 161, 315, 126, 325, 147, 176, 0, 500, 500, 500]\r\n     wall_rad = [1, 1, 10, 5, 20, 6, 6, 30, 30, 10, 10, 10, 10, 10, 5, 5, 5, 5]\r\n     wall_color = [(220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220)]\r\n     wall_RECT = [[186, 245, 37, 38], [193, 218, 107, 3], [154, 424, 555, 66], [7, 429, 157, 73], [359, 424, 356, 85], [554, -8, 135, 115], [635, 94, 52, 38], [-32, 169, 113, 279], [276, 30, 78, 163], [39, -3, 112, 330], [-8, 118, 34, 72], [472, 198, 231, 139], [368, 139, 137, 28], [485, 147, 51, 41], [-7, -7, 714, 14], [-7, -7, 14, 514], [-7, 493, 714, 14], [693, -7, 14, 514]]\r\n    elif levely == 5:\r\n     ball_max = 15\r\n     ball_w = [563.2380017184845, 135.5091931534665, 435.09697027584525, 132.51126304855137, 158.80356877160969, 486.49890666361813, 28.0454597909272, 469.94449157610796, 253.77058846375945, 33.311743878553251, 651.08671805489632, 467.4560139814393, 420.90145867058521, 248.83956419449743, 98.267666685148598, 670.85536291962285]\r\n     ball_z = [340.3499477728684, 192.53572614832325, 274.00276170743837, 474.72360924550071, 248.04392629767023, 199.66234253741388, 291.77486188629132, 98.828156873677884, 261.79870802935454, 452.90721309179793, 434.31611085503482, 422.84067516142846, 143.71750465032488, 474.55563009909457, 63.407930077910926, 97.5392796541895]\r\n     ball_wol = [-0.12736934788998625, -0.34670289908297647, -0.62730956112551528, -0.01316352118701539, -0.36875760413492498, 0.3253705975573648, -0.43186646985168864, 0.029829055857965088, -0.051399766840351885, 0.31143213467472303, 0.91261705660387604, -0.39289683694945782, 0.6973192899270082, -0.026739395385515136, 0.47773812365404217, -0.14449244329674141]\r\n     ball_zol = [0.2651067487506561, 0.33747092449158278, -0.20330004911815291, 0.11263669365628809, 0.62183969591811039, 0.220324713577495, 0.12382039798193512, -0.062689280803922554, 0.13756798955280808, 0.8702172500111478, -0.031277763984301599, 0.28378328194527458, 0.1666190295210413, 0.056074468995401638, 0.75422143538357722, 0.14790083350095956]\r\n     ball_rad = [12, 20, 14, 19, 14, 23, 23, 13, 25, 28, 28, 25, 20, 20, 20, 24]\r\n     ball_color = [(132, 202, 208), (130, 220, 228), (133, 230, 241), (133, 200, 224), (138, 244, 248), (134, 176, 212), (132, 246, 206), (136, 191, 201), (130, 247, 204), (135, 190, 248), (136, 196, 244), (137, 246, 211), (132, 176, 232), (139, 200, 204), (135, 204, 206), (137, 234, 248)]\r\n     ball_angle = [103.32400188884675, 316.71158855283181, 66.797426175129175, 35.509394217326573, 15.886531654813545, 0.61656478963343941, 195.33151301725019, 152.08747184390086, 199.80989069184068, 131.62120808048311, 339.38767654500623, 158.21789358507957, 322.31233400906359, 97.437869538449633, 179.6312883714439, 134.41162557033078]\r\n     ball_angleol = [0.54118695268280415, -1.0009948706990461, -0.42583251039327935, -0.049119552546591096, -1.7234897593393199, 0.1278122582140804, -0.33925087348758332, 0.98916269599321738, 0.054177225060088277, 0.93648329222661952, 2.0855948904138386, -1.2792816321392795, 1.9343475351789952, -0.094694117658838645, 1.3328174529019678, 1.0390947956294083]\r\n     ball_squar = [[549.2380017184845, 326.3499477728684, 28, 28], [113.5091931534665, 170.53572614832325, 44, 44], [419.09697027584525, 258.00276170743837, 32, 32], [111.51126304855137, 453.72360924550071, 42, 42], [142.80356877160969, 232.04392629767023, 32, 32], [461.49890666361813, 174.66234253741388, 50, 50], [3.0454597909272003, 266.77486188629132, 50, 50], [454.94449157610796, 83.828156873677884, 30, 30], [226.77058846375945, 234.79870802935454, 54, 54], [3.3117438785532514, 422.90721309179793, 60, 60], [621.08671805489632, 404.31611085503482, 60, 60], [440.4560139814393, 395.84067516142846, 54, 54], [398.90145867058521, 121.71750465032488, 44, 44], [226.83956419449743, 452.55563009909457, 44, 44], [76.267666685148598, 41.407930077910926, 44, 44], [644.85536291962285, 71.5392796541895, 52, 52]]\r\n     ball_mass = [5428.6721054031623, 25132.741228718347, 8620.5302414503913, 21548.184010972389, 8620.5302414503913, 38223.757816227015, 38223.757816227015, 6902.0790599367756, 49087.385212340516, 68964.24193160313, 68964.24193160313, 49087.385212340516, 25132.741228718347, 25132.741228718347, 25132.741228718347, 43429.376843225298]\r\n     tempy = [[140.43481116747478, 230.04392629767023, 36.368757604134913, 36.621839695918112], [459.49890666361813, 172.66234253741388, 54.325370597557367, 54.220324713577497], [0.61359332107551268, 264.77486188629132, 54.431866469851684, 54.123820397981937], [452.94449157610796, 81.765467592873961, 34.029829055857967, 34.062689280803923], [224.7191886969191, 232.79870802935454, 58.051399766840348, 58.137567989552807], [1.3117438785532514, 420.90721309179793, 64.311432134674718, 64.870217250011152], [619.08671805489632, 402.28483309105053, 64.912617056603878, 64.031277763984292], [438.06311714448987, 393.84067516142846, 58.392896836949433, 58.283783281945276], [396.90145867058521, 119.71750465032488, 48.697319289927009, 48.166619029521044], [224.81282479911192, 450.55563009909457, 48.026739395385505, 48.056074468995405], [74.267666685148598, 39.407930077910926, 48.477738123654042, 48.754221435383577], [642.71087047632614, 69.5392796541895, 56.144492443296713, 56.147900833500962]]\r\n     ball_RECT = [[547.11063237059454, 324.3499477728684, 32.127369347889953, 32.265106748750654], [111.16249025438353, 168.53572614832325, 48.34670289908297, 48.337470924491583], [416.46966071471974, 255.79946165832024, 36.627309561125514, 36.203300049118127], [109.49809952736436, 451.72360924550071, 46.01316352118701, 46.112636693656285]] + tempy\r\n     del tempy\r\n     wall_max = 17\r\n     wall_type = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n     wall_w1 = [135, 120, 230, 14, 531, 562, 441, 128, 403, 51, 504, 518, 377, 447, 0, 0, 0, 700]\r\n     wall_z1 = [265, 216, 439, 499, 339, 0, 217, 104, 306, 9, 441, 210, 168, 127, 0, 0, 500, 0]\r\n     wall_w2 = [227, 288, 697, 157, 456, 665, 476, 432, 61, 139, 633, 547, 435, 537, 700, 0, 700, 700]\r\n     wall_z2 = [262, 200, 478, 432, 302, 141, 228, 77, 334, 315, 295, 193, 178, 114, 0, 500, 500, 500]\r\n     wall_rad = [1, 1, 10, 5, 20, 6, 6, 30, 30, 10, 10, 10, 10, 10, 5, 5, 5, 5]\r\n     wall_color = [(220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220), (220, 220, 220)]\r\n     wall_RECT = [[132, 262, 98, 3], [117, 201, 174, 14], [218, 427, 491, 63], [7, 429, 157, 73], [438, 284, 111, 73], [554, -8, 119, 157], [433, 209, 51, 27], [96, 49, 368, 83], [33, 274, 398, 92], [39, -3, 112, 330], [492, 287, 153, 162], [506, 185, 53, 33], [365, 156, 82, 34], [435, 106, 114, 29], [-7, -7, 714, 14], [-7, -7, 14, 514], [-7, 493, 714, 14], [693, -7, 14, 514]]\r\ndef draw_walls_on_big_black_rect():\r\n    global wall_max, wall_type, wall_w1, wall_z1, wall_w2, wall_z2, wall_rad, wall_color, wall_RECT\r\n    global big_black_rect\r\n    global LIN_selected, CLICKER, CLICKER2\r\n    if CLICKER:\r\n     if LIN_selected != -1:\r\n      nnn = LIN_selected[0]\r\n      if LIN_selected[1] == 1:\r\n       wall_w1[nnn] = mowse_w\r\n       wall_z1[nnn] = mowse_z\r\n      else:\r\n       wall_w2[nnn] = mowse_w\r\n       wall_z2[nnn] = mowse_z\r\n      w1 = wall_w1[nnn]\r\n      z1 = wall_z1[nnn]\r\n      w2 = wall_w2[nnn]\r\n      z2 = wall_z2[nnn]\r\n      rad = wall_rad[nnn]\r\n      wall_RECT[nnn] = freaky_rect_switcharoo_2D(w1 - 2, z1 - 2, w2 - w1 + 4, z2 - z1 + 4, rad)\r\n    wl = -1\r\n    while wl < wall_max:\r\n     wl += 1\r\n     w1 = wall_w1[wl]\r\n     z1 = wall_z1[wl]\r\n     w2 = wall_w2[wl]\r\n     z2 = wall_z2[wl]\r\n     rad = wall_rad[wl]\r\n     collyu = wall_color[wl]\r\n     pygame.draw.line(big_black_rect, collyu, (w1, z1), (w2, z2), rad * 2)\r\n     pygame.draw.circle(big_black_rect, collyu, (w1, z1), rad)\r\n     pygame.draw.circle(big_black_rect, collyu, (w2, z2), rad)\r\n     #pygame.draw.rect(big_black_rect, (200, 200, 200), wall_RECT[wl], 1)\r\n     if CLICKER2:\r\n      if mowse_in_rect(wall_RECT[wl][0], wall_RECT[wl][1], wall_RECT[wl][2], wall_RECT[wl][3]):\r\n       if   mowse_in_circle(w1, z1, rad+3): selected = -1; LIN_selected = [wl, 1]\r\n       elif mowse_in_circle(w2, z2, rad+3): selected = -1; LIN_selected = [wl, 2]\r\ndef Lets_ROLL():\r\n    global loopy\r\n    global ball_max, ball_w, ball_z, ball_wol, ball_zol, ball_rad, ball_color, ball_angle, ball_angleol, ball_squar, ball_mass, ball_RECT\r\n    global wall_max, wall_type, wall_w1, wall_z1, wall_w2, wall_z2, wall_rad, wall_color, wall_RECT\r\n    global bounce_friction, air_friction, gravity, rock_and_ROLLY\r\n    global LIN_selected, CLICKER, CLICKER2\r\n    global levely\r\n    levely = 3\r\n    bounce_friction = 0.8\r\n    #bounce_friction = 1.0\r\n    air_friction = 0.999\r\n    #air_friction = 1.0\r\n    gravity = 0.5\r\n    rock_and_ROLLY = math.pi / 8 * 180 #24\r\n    reset_stuff()\r\n    fontyyy = chilly_font_Italicy(24)\r\n    PRESS_SPACE_BAR_TO_MOVE_immy = fontyyy.render('Press SPACE BAR to start motion.', 0, (100, 200, 100))\r\n    PRESS_SPACE_BAR_TO_STOP_immy = fontyyy.render('Press SPACE BAR to stop motion.', 0, (200, 100, 100))\r\n    PRESS_ENTER_TO_RESET_immy    = fontyyy.render('Press ENTER to reset.', 0, (150, 150, 150))\r\n    PRESS_MINUS_TO_MINUS_immy    = fontyyy.render('Press - to delete a ball.', 0, (150, 150, 150))\r\n    PRESS_ADD_TO_ADD_immy        = fontyyy.render('Press + to add a ball.', 0, (150, 150, 150))\r\n    LEFT_CLICK_TO_immy           = fontyyy.render('Left click on a \"ghost ball\" to change its speed.', 0, (150, 150, 150))\r\n    RIGHT_CLICK_TO_immy          = fontyyy.render('Right click on a ball to stop its motion.', 0, (150, 150, 150))\r\n    PRESS_S_TO_immy              = fontyyy.render('Press S to stop all balls.', 0, (150, 150, 150))\r\n    PRESS_PAGE_UP_TO_immy        = fontyyy.render('Press Page Up to change the level.', 0, (150, 150, 150))\r\n    #message_1_immy\r\n    del fontyyy\r\n    #calculate_for_sure = True\r\n    selected = -1\r\n    LIN_selected = -1\r\n    move_stuff = True\r\n    t = time.time() + .01\r\n    CLICKER = False\r\n    CLICKER2 = False\r\n    loopy = 1\r\n    while loopy:\r\n          big_black_rect.fill((0, 0, 0))\r\n          draw_walls_on_big_black_rect()\r\n          screen.blit(big_black_rect, (0, 0))\r\n          check_for_keys()\r\n          CLICKER    = mowse_left_held\r\n          CLICKER2   = mowse_left_pressed\r\n          CLICKER_2  = mowse_right_held\r\n          CLICKER2_2 = mowse_right_pressed\r\n          if ky_first_held_CEV(32): move_stuff = not move_stuff\r\n          if ky_first_held_CEV(13): reset_stuff()\r\n          if ky_first_held_CEV(280):\r\n           levely += 1\r\n           if levely > 5: levely = 1\r\n           reset_stuff()\r\n          if ky_first_held_CEV(115): # S\r\n            M = -1\r\n            while M < ball_max:\r\n             M += 1\r\n             ball_wol[M] = 0\r\n             ball_zol[M] = 0\r\n             updatey_ball_quick_rect(M)\r\n          if ky_first_held_CEV(45) or ky_first_held_CEV(269): # -\r\n           minus_ball_thing(0)\r\n          if ky_first_held_CEV(61) or ky_first_held_CEV(270): # +\r\n           add_ball_thing(350 + randy(40, -20), 400 + randy(40, -20), randy(40, -20), randy(40, -20), int_randy(20, 10), (int_randy(10, 130), int_randy(80, 170), int_randy(50, 200)), 0, 0, True, True)\r\n          if ky_first_held_CEV(49):\r\n           listy  = ['Level_save']\r\n           listy += ['ball_max = ' + str(ball_max)]\r\n           listy += ['ball_w = ' + str(ball_w)]\r\n           listy += ['ball_z = ' + str(ball_z)]\r\n           listy += ['ball_wol = ' + str(ball_wol)]\r\n           listy += ['ball_zol = ' + str(ball_zol)]\r\n           listy += ['ball_rad = ' + str(ball_rad)]\r\n           listy += ['ball_color = ' + str(ball_color)]\r\n           listy += ['ball_angle = ' + str(ball_angle)]\r\n           listy += ['ball_angleol = ' + str(ball_angleol)]\r\n           listy += ['ball_squar = ' + str(ball_squar)]\r\n           listy += ['ball_mass = ' + str(ball_mass)]\r\n           listy += ['ball_RECT = ' + str(ball_RECT)]\r\n           listy += ['wall_max = ' + str(wall_max)]\r\n           listy += ['wall_type = ' + str(wall_type)]\r\n           listy += ['wall_w1 = ' + str(wall_w1)]\r\n           listy += ['wall_z1 = ' + str(wall_z1)]\r\n           listy += ['wall_w2 = ' + str(wall_w2)]\r\n           listy += ['wall_z2 = ' + str(wall_z2)]\r\n           listy += ['wall_rad = ' + str(wall_rad)]\r\n           listy += ['wall_color = ' + str(wall_color)]\r\n           listy += ['wall_RECT = ' + str(wall_RECT)]\r\n           ##write_to_file_WEEE_STRANGE(\"Level_Save.dat\", listy)\r\n           del listy\r\n          if CLICKER2:\r\n           allow_selectey_thing = True\r\n          else:\r\n           allow_selectey_thing = False\r\n           if not CLICKER:\r\n            selected = -1\r\n            LIN_selected = -1\r\n          to_be_selected = selected\r\n          M = -1\r\n          while M < ball_max:\r\n           M += 1\r\n           if move_stuff:\r\n            move_ball(M)\r\n           wwol = int(ball_w[M] + ball_wol[M])\r\n           zzol = int(ball_z[M] + ball_zol[M])\r\n           pygame.draw.circle(screen, ball_color[M], (int(ball_w[M]), int(ball_z[M])), ball_rad[M])\r\n           blpw, blpz = point_rotated_by_angle_2D(0, -ball_rad[M], 0, 0, ball_angle[M])\r\n           pygame.draw.line(screen, (100, 100, 100), (int(ball_w[M] + blpw), int(ball_z[M] + blpz)), (int(ball_w[M]), int(ball_z[M])))\r\n           if not move_stuff:\r\n            pygame.draw.circle(screen, (100, 100, 250), (wwol, zzol), ball_rad[M], 1)\r\n            pygame.draw.circle(screen, (100, 100, 150), (wwol, zzol), int(ball_rad[M] * 1.0), 1)\r\n            pygame.draw.circle(screen, (150, 150, 200), (wwol, zzol), int(ball_rad[M] * 0.8), 1)\r\n            pygame.draw.circle(screen, (200, 200, 250), (wwol, zzol), int(ball_rad[M] * 0.5), 1)\r\n            pygame.draw.line(screen, (100, 160, 250), (int(ball_w[M]), int(ball_z[M])), (wwol, zzol))\r\n            pygame.draw.rect(screen, (130, 130, 130), ball_RECT[M], 1)\r\n            pygame.draw.rect(screen, (140, 140, 140), ball_squar[M], 1)\r\n           if allow_selectey_thing:\r\n            if mowse_in_rect(ball_RECT[M][0], ball_RECT[M][1], ball_RECT[M][2], ball_RECT[M][3]):\r\n             if mowse_in_circle(wwol, zzol, ball_rad[M]):\r\n              to_be_selected = M\r\n              LIN_selected = -1\r\n           if CLICKER_2:\r\n            if mowse_in_rect(ball_squar[M][0], ball_squar[M][1], ball_squar[M][2], ball_squar[M][3]):\r\n             if mowse_in_circle(ball_w[M], ball_z[M], ball_rad[M]):\r\n              ball_wol[M] = 0\r\n              ball_zol[M] = 0\r\n              ball_angleol[M] = 0\r\n              updatey_ball_quick_rect(M)\r\n           if CLICKER:\r\n            if selected == M:\r\n             if move_stuff:\r\n              mowseyy_w = mowse_w\r\n              mowseyy_z = mowse_z\r\n              bw1 = ball_rad[M]\r\n              bz1 = ball_rad[M]\r\n              bw2 = APPLICATION_w_size - ball_rad[M]\r\n              bz2 = APPLICATION_z_size - ball_rad[M]\r\n              if mowseyy_w < bw1: mowseyy_w = bw1\r\n              if mowseyy_w > bw2: mowseyy_w = bw2\r\n              if mowseyy_z < bz1: mowseyy_z = bz1\r\n              if mowseyy_z > bz2: mowseyy_z = bz2\r\n              ww = mowseyy_w - ball_w[M]\r\n              zz = mowseyy_z - ball_z[M]\r\n              #dissy = distance_2D(0, 0, ww, zz)\r\n              ball_wol[M] = ww # / 2.0 # / dissy\r\n              ball_zol[M] = zz # / 2.0 # / dissy\r\n             else:\r\n              ball_wol[M] = mowse_w - ball_w[M]\r\n              ball_zol[M] = mowse_z - ball_z[M]\r\n             updatey_ball_quick_rect(M)\r\n          selected = to_be_selected\r\n          if not move_stuff:\r\n           screen.blit(PRESS_SPACE_BAR_TO_MOVE_immy, (10, 10))\r\n          else:\r\n           screen.blit(PRESS_SPACE_BAR_TO_STOP_immy, (10, 10))\r\n          screen.blit(PRESS_MINUS_TO_MINUS_immy, (10, 30))\r\n          screen.blit(PRESS_ADD_TO_ADD_immy, (10, 50))\r\n          screen.blit(PRESS_ENTER_TO_RESET_immy, (10, 70))\r\n          screen.blit(LEFT_CLICK_TO_immy, (10, 90))\r\n          screen.blit(RIGHT_CLICK_TO_immy, (10, 110))\r\n          screen.blit(PRESS_S_TO_immy, (10, 130))\r\n          screen.blit(PRESS_PAGE_UP_TO_immy, (10, 150))\r\n          pygame.display.flip()\r\n          while t > time.time(): pass\r\n          t = time.time() + .01\r\n # Try_Again_HE_HE Is weird!! maybe It should be deleted!!\r\ndef move_ball(M):\r\n            ball_angle[M] += ball_angleol[M]\r\n            if   ball_angle[M] > 359: ball_angle[M] -= 360\r\n            elif ball_angle[M] <   0: ball_angle[M] += 361\r\n            #movey_bally_speciality(M, ball_wol[M], ball_zol[M], 10)\r\n            movey_bally_speciality(M, ball_wol[M], ball_zol[M], 10)\r\n            ball_zol[M] += gravity\r\n            updatey_ball_quick_rect(M)\r\ndef movey_bally_speciality(M, wol_special, zol_special, Try_Again_HE_HE):\r\n            global loopy\r\n            global ball_max, ball_w, ball_z, ball_wol, ball_zol, ball_rad, ball_color, ball_angle, ball_angleol, ball_squar, ball_mass, ball_RECT\r\n            global wall_max, wall_type, wall_w1, wall_z1, wall_w2, wall_z2, wall_rad, wall_color, wall_RECT\r\n            global bounce_friction, air_friction, gravity, rock_and_ROLLY\r\n            distance_is_supposed_to_be_at = distance_2D(0, 0, wol_special, zol_special)\r\n            wa = ball_w[M]\r\n            za = ball_z[M]\r\n            #will_be_w = wa + ball_wol[M]\r\n            #will_be_z = za + ball_zol[M]\r\n            will_be_w = wa + wol_special\r\n            will_be_z = za + zol_special\r\n            LIN_collide_max = -1\r\n            LIN_collide_w    = []\r\n            LIN_collide_z     = []\r\n            LIN_collide_ang    = []\r\n            LIN_collide_dis     = []\r\n            LL = -1\r\n            while LL < wall_max:\r\n              LL += 1\r\n              if rect_touching_rect2(ball_RECT[M][0], ball_RECT[M][1], ball_RECT[M][2], ball_RECT[M][3], wall_RECT[LL][0], wall_RECT[LL][1], wall_RECT[LL][2], wall_RECT[LL][3]):\r\n                  #print 'weee'\r\n                  did_collide, New_ball_w, New_ball_z, angle_hit_at = find_where_ball_collides_on_a_wall(wa, za, wol_special, zol_special, ball_rad[M], wall_type[LL], wall_w1[LL], wall_z1[LL], wall_w2[LL], wall_z2[LL], wall_rad[LL])\r\n                  if did_collide:\r\n                   #print 'collide'\r\n                   #print str(New_ball_w), str(New_ball_z)\r\n                   LIN_collide_max += 1\r\n                   LIN_collide_w    += [New_ball_w]\r\n                   LIN_collide_z     += [New_ball_z]\r\n                   LIN_collide_ang    += [angle_hit_at]\r\n                   LIN_collide_dis     += [distance_2D(wa, za, New_ball_w, New_ball_z)]\r\n            HEH_collide_max = -1\r\n            HEH_collide_w    = []\r\n            HEH_collide_z     = []\r\n            HEH_collide_ang    = []\r\n            HEH_collide_dis     = []\r\n            HEH_collide_ball_hit = []\r\n            M2 = -1\r\n            while M2 < ball_max:\r\n             M2 += 1\r\n             if M2 != M:\r\n              if rect_touching_rect2(ball_RECT[M][0], ball_RECT[M][1], ball_RECT[M][2], ball_RECT[M][3], ball_squar[M2][0], ball_squar[M2][1], ball_squar[M2][2], ball_squar[M2][3]):\r\n                  #they_did_touch, New_ball1_w, New_ball1_z, angle_hit_at = find_where_ball_collides_on_another_ball(wa, za, ball_wol[M], ball_zol[M], ball_rad[M], ball_w[M2], ball_z[M2], ball_rad[M2])\r\n                  they_did_touch, New_ball1_w, New_ball1_z, angle_hit_at = find_where_ball_collides_on_another_ball(wa, za, wol_special, zol_special, ball_rad[M], ball_w[M2], ball_z[M2], ball_rad[M2])\r\n                  if they_did_touch:\r\n                   HEH_collide_max += 1\r\n                   HEH_collide_w    += [New_ball1_w]\r\n                   HEH_collide_z     += [New_ball1_z]\r\n                   HEH_collide_ang    += [angle_hit_at]\r\n                   HEH_collide_dis     += [distance_2D(wa, za, New_ball1_w, New_ball1_z)]\r\n                   HEH_collide_ball_hit += [M2]\r\n            current_dis = distance_is_supposed_to_be_at\r\n            Wall_to_hit_at_angley = None\r\n            Grr = -1\r\n            while Grr < LIN_collide_max:\r\n             Grr += 1\r\n             #print LIN_collide_dis[Grr], current_dis\r\n             if LIN_collide_dis[Grr] < current_dis:\r\n               #print 'weee!'\r\n               Wall_to_hit_at_angley = LIN_collide_ang[Grr]\r\n               current_dis = LIN_collide_dis[Grr]\r\n               will_be_w = LIN_collide_w[Grr]\r\n               will_be_z = LIN_collide_z[Grr]\r\n            Ball_to_hit = None\r\n            Ball_to_hit_at_angley = None\r\n            Heh = -1\r\n            while Heh < HEH_collide_max:\r\n             Heh += 1\r\n             if HEH_collide_dis[Heh] < current_dis:\r\n              if ball_is_going_towards_ball(M, HEH_collide_ball_hit[Heh]):\r\n               if ball_is_relatively_going_towards_ball(M, HEH_collide_ball_hit[Heh]):\r\n                Ball_to_hit = HEH_collide_ball_hit[Heh]\r\n                Ball_to_hit_at_angley = HEH_collide_ang[Heh]\r\n               else:\r\n                Ball_to_hit = None\r\n                Ball_to_hit_at_angley = None\r\n               current_dis = HEH_collide_dis[Heh]\r\n               will_be_w = HEH_collide_w[Heh]\r\n               will_be_z = HEH_collide_z[Heh]\r\n            if Ball_to_hit != None:\r\n             Make_two_balls_hit_at_angle(M, Ball_to_hit, Ball_to_hit_at_angley)\r\n            else:\r\n             #if   bouncey == 1: ball_wol[M] = -ball_wol[M] * bounce_friction\r\n             #elif bouncey == 2: ball_zol[M] = -ball_zol[M] * bounce_friction\r\n             if Wall_to_hit_at_angley != None:\r\n              ball_wol[M], ball_zol[M] = wzol_bounce_at_angle(ball_wol[M], ball_zol[M], Wall_to_hit_at_angley, bounce_friction)\r\n              ball_angleol[M] = zol_at_angle(ball_wol[M], ball_zol[M], Wall_to_hit_at_angley + 90) / ball_rad[M] * rock_and_ROLLY\r\n            ball_w[M] = will_be_w\r\n            ball_z[M] = will_be_z\r\n            if ball_w[M] < 0 or ball_w[M] > APPLICATION_w_size or ball_z[M] < 0 or ball_z[M] > APPLICATION_z_size:\r\n             #print str(M) + \"   \", str(wa), str(za)\r\n             print str(M) + \"   \", str(ball_w[M]), str(ball_z[M]), str(ball_rad[M])\r\n            ball_wol[M] *= air_friction\r\n            ball_zol[M] *= air_friction\r\n            updatey_ball_quick_rect(M)\r\n            if current_dis < distance_is_supposed_to_be_at:\r\n             if Try_Again_HE_HE > 0:\r\n              distance_to_travel_next = distance_is_supposed_to_be_at - current_dis\r\n              disy_HE_HE = distance_2D(0, 0, ball_wol[M], ball_zol[M])\r\n              next_wol = ball_wol[M]\r\n              next_zol = ball_zol[M]\r\n              movey_bally_speciality(M, next_wol, next_zol, Try_Again_HE_HE - 1)\r\n\r\n           ## Woah... Finally! Were near the end of the program! ##\r\nif __name__ == '__main__':\r\n  import math\r\n  import pygame\r\n  import random\r\n  import time\r\n  import gc\r\n  import copy\r\n  from   pygame.locals import *\r\n  if not pygame.font: print 'Warning, fonts disabled?'\r\n  if not pygame.mixer: print 'Warning, sound disabled?'\r\n  HE_HE_init()\r\n           ## THE END! ##", "users_id": null, "datetimeon": "2007-12-23T15:46:20", "link": "pygame.draw.circle", "id": 1320}, {"content": "Guillame was confused on the nature of the last two arguments to Rect().\r\nhe thought that they were absolute coordinates, not width-height.\r\nThere isn't a bug with collidepoint.\r\nsee the pygame mailing list archives for the discussion with Guillame where this topic arose.", "users_id": null, "datetimeon": "2007-04-25T17:52:17", "link": "Rect.collidepoint", "id": 524}, {"content": "I'm guessing they're key pressed (eg, the A or J keys) and the modifiers (Shift, Ctrl, Alt, Meta, Super, etc). Experiment to find details.", "users_id": null, "datetimeon": "2007-04-26T17:03:55", "link": "pygame.event", "id": 528}, {"content": "I, too, get a list with a single item, None. This on Mac OS X 10.4 (Tiger) and Python 2.4.4; \r\npygame.ver returns '1.8.0pre' ", "users_id": null, "datetimeon": "2008-01-20T04:04:36", "link": "pygame.font.get_fonts", "id": 1428}, {"content": "The params units are in pixels.\r\nThe smallest unit for Pygame I think.\r\nIt doesn't make sense to change this to float.", "users_id": null, "datetimeon": "2008-01-21T10:48:00", "link": "Rect.move_ip", "id": 1430}, {"content": "this resource is perfect for games with controls options\r\nbecause through it you can show the current input without creating a whole database of inputs\r\ntxt = font.render(pygame.key.name(current_key),True,(0,0,0))\r\nscreen.blit(txt,(0,0))", "users_id": null, "datetimeon": "2008-01-21T20:04:03", "link": "pygame.key.name", "id": 1431}, {"content": "#!/usr/bin/python\r\nimport pygame\r\nfrom pygame.locals import *\r\n\r\ndef main():\r\n   pygame.init()\r\n   pygame.display.set_mode((300,200))\r\n   pygame.display.set_caption('Testing')\r\n   running = True\r\n   while running:\r\n      for event in pygame.event.get():\r\n         if event.type == QUIT:\r\n            running = False\r\n         if event.type == KEYDOWN and event.key == K_ESCAPE:\r\n            running = False\r\n         if event.type == MOUSEBUTTONDOWN:\r\n            #print event.button\r\n           print pygame.mouse.get_pos()\r\n   pygame.display.quit()\r\n\r\nif __name__ == '__main__':\r\n   main()\r\n", "users_id": null, "datetimeon": "2008-01-23T15:43:49", "link": "pygame.mouse.get_pos", "id": 1436}, {"content": "Once you draw something, how do you delete it??", "users_id": null, "datetimeon": "2007-05-04T00:39:15", "link": "pygame.draw.rect", "id": 548}, {"content": "To use the scrollwheel:\r\nfor event in pygame.event.get():\r\n  if event.type == MOUSEBUTTONDOWN:\r\n    if event.button == 4:\r\n      #Zoom Out\r\n    elif event.button == 5:\r\n      #Zoom In", "users_id": 1681, "datetimeon": "2008-01-25T15:59:11", "link": "pygame.mouse", "id": 1442}, {"content": "Hi,\r\n\r\nI was having a problem when trying to jump from one movie to another.  Even with the fist one stopped the second movie played at half speed with no volume.  A solution was to keep a reference to the old movie, which I assume stops the garbage collector trying to delete it before its finished doing whatever it was doing.  \r\n\r\nThis would cause problems:\r\n\r\ncurrentMovie.stop()\r\ncurrentMovie = pygame.movie.Movie(fullname)\r\ncurrentMovie.play()\r\n\r\nAnd this fixes it:\r\n\r\ncurrentMovie.stop()\r\noldMovie = currentMovie\r\ncurrentMovie = pygame.movie.Movie(fullname)\r\ncurrentMovie.play()\r\n\r\nMaybe need a method for unloading the memory and stopping all its threads.", "users_id": null, "datetimeon": "2007-05-09T10:27:03", "link": "pygame.movie", "id": 554}, {"content": "Does anyone know how to make multiple screens? I've tried making a different variable with different dimensions, but it only changes original\r\n\r\nsize=400,400\r\nscreen=display.set_mode(size)\r\n\r\nsize1=200,200\r\nnew_screen=display.set_mode(size1)", "users_id": null, "datetimeon": "2008-01-29T10:33:27", "link": "pygame.display.set_mode", "id": 1456}, {"content": "The first two arguments to Surface.blit() seem to be reversed. To draw Surface \"source\" onto Surface \"dest\" the correct call is:\r\n\r\n    pygame.Surface.blit(dest, source, position)\r\n\r\nor\r\n\r\n    dest.blit(source, position)\r\n\r\n\r\nExample:\r\n\r\n    screen = pygame.display.set_mode((100,100))\r\n    screen.fill((255,255,255)) # white background\r\n    red_block = pygame.Surface((50,50))\r\n    red_block.fill((255,0,0))\r\n\r\n    # draw red block onto white background\r\n    screen.blit(red_block, (25,25))\r\n\r\n    pygame.display.update()\r\n", "users_id": null, "datetimeon": "2007-05-16T08:51:09", "link": "Surface.blit", "id": 572}, {"content": "Actually, on re-reading the method description, I realize that the \"dest\" argument means the position to where the source Surface should be copied too. So the call synopsis is equivalent to the second case in my comment.\r\n\r\nThe naming of the arguments is a bit confusing, IMHO, and also that it is not (visually) clear that the documentation describes the methods of a Surface object instance and makes no mention of the class methods.\r\n", "users_id": null, "datetimeon": "2007-05-16T09:15:43", "link": "Surface.blit", "id": 573}, {"content": "Only the \"systems with multiple choices\" are listed there.", "users_id": null, "datetimeon": "2007-05-20T19:04:19", "link": "pygame.display.init", "id": 578}, {"content": "Use the following class to generate a bezier curve that can be drawn with aalines:\r\n\r\n## Class begins here\r\nclass Bezier:\r\n\r\n\tclass SmoothnessError(Exception): pass\r\n\tclass CurveError(Exception): pass\r\n\r\n\tdef __init__(self):\r\n\t\t\"\"\"\r\n\t\tA Python class for generating bezier curves\r\n\t\t\r\n\t\tAn implementation of an algorithm presented by Nils Pipenbrinck\r\n\t\thttp://www.cubic.org/docs/bezier.htm\r\n\t\t\"\"\"\r\n\t\r\n\tdef __lerp(self, ptA, ptB, t):\r\n\t\t\"\"\"\r\n\t\tReturns the linear interp between two points as a list\r\n\t\tptA and ptB are a list of xy coords, t is the point on the curve\r\n\t\t\"\"\"\r\n\t\tdest = []\r\n\t\tdest.append(ptA[0]+float(ptB[0]-ptA[0])*t)\r\n\t\tdest.append(ptA[1]+float(ptB[1]-ptA[1])*t)\r\n\t\treturn dest\r\n\t\r\n\tdef bezierPt(self, ctrlPts, t):\r\n\t\t\"\"\"A recursive function for finding point t along a bezier curve\"\"\"\r\n\t\tif len(ctrlPts) == 1:\r\n\t\t\t#print \"Len is 1\", ctrlPts\r\n\t\t\treturn ctrlPts[0]\r\n\t\tlerpList = []\r\n\t\tfor i in xrange(len(ctrlPts)-1):\r\n\t\t\tptA = [ctrlPts[i][0],ctrlPts[i][1]]\r\n\t\t\tptB = [ctrlPts[i+1][0],ctrlPts[i+1][1]]\r\n\t\t\tlerpList.append(self.__lerp(ptA,ptB,t))\r\n\t\t#print len(lerpList)\r\n\t\treturn self.bezierPt(lerpList, t)\r\n\t\r\n\tdef makeBezier(self, ctrlPts, smoothness):\r\n\t\t\"\"\"\r\n\t\tReturns a list of points on a bezier curve\r\n\t\t\r\n\t\tctrlPts is a list of 2d Points that define the curve, in most cases these\r\n\t\tconsist of control point locations and their handles, except in a 3 point\r\n\t\tcurve where it's just defined by the three control points.\r\n\t\t\r\n\t\tsmoothness is the number of points on the curve that should be generated.\r\n\t\tThis should always be more than two points or generating the bezier curve is\r\n\t\tpointless and the script dies in a fire (or throws an exception)\r\n\t\t\"\"\"\r\n\t\t\r\n\t\tif len(ctrlPts) < 2:\r\n\t\t\traise self.CurverError(\"Curve list must contain more than one point\")\r\n\t\tif smoothness < 3:\r\n\t\t\traise self.SmoothnessError(\"Smoothness must be more than two\")\r\n\t\titeration = smoothness\r\n\t\tbezierList = []\r\n\t\tsubtract=1.0/smoothness\r\n\t\tfor i in xrange(0,iteration):\r\n\t\t\tt = 1.0-(subtract*i)\r\n\t\t\tif t < subtract:\r\n\t\t\t\tt = 0\r\n\t\t\tbPt = self.bezierPt(ctrlPts,t)\r\n\t\t\t#print bPt\r\n\t\t\tbezierList.append(bPt)\r\n\t\treturn bezierLis\r\n## Class ends\r\n\r\n###################\r\n# An example of how to use the class with pygame\r\n\r\n\r\n## Pygame Example\r\nimport math, pygame\r\nfrom pygame.locals import *\r\nimport bezier\r\n\r\ndef main():\r\n    pygame.init()\r\n    screen = pygame.display.set_mode((640,480))\r\n    clock = pygame.time.Clock()\r\n    \r\n    b = bezier.Bezier()\r\n    \"\"\"\r\n\tA bezier curve definition, a list of 2d poins, simple innit\r\n\tIt's basically control points with control handle locations before or\r\n\tafter the control point.\r\n\t\r\n    Read http://www.cubic.org/docs/bezier.htm for more info\r\n    \"\"\"\r\n    bezierPts = [[40,100],[80,20],[150,180],[260,100]]\r\n    bLine = b.makeBezier(bezierPts, 10)\r\n    screen.fill((255,255,255))\r\n    pygame.draw.aalines(screen, (1,1,1), False, bLine, 1)\r\n    pygame.display.flip()\r\n    bounce = False\r\n    \r\n    while True:\r\n        clock.tick(60)\r\n        pygame.event.pump()\r\n        event = pygame.event.poll()\r\n        if event.type == QUIT:\r\n            return\r\n        if event.type == KEYDOWN:\r\n            if event.key == K_ESCAPE:\r\n                return\r\n        setTo = pygame.time.get_ticks()/20\r\n        bezierPts[1][1] = setTo\r\n        bLine = b.makeBezier(bezierPts,20)\r\n        screen.fill((255,255,255))\r\n        pygame.draw.aalines(screen, (1,1,1), False, bLine, 1)\r\n        pygame.display.flip()\r\n\r\nif __name__ == \"__main__\":\r\n    m = main()\r\n## End example", "users_id": 2476, "datetimeon": "2008-02-06T10:50:10", "link": "pygame.draw.aalines", "id": 1502}, {"content": "Yeah the doc could be improved. The wrong comment below should be removed, it's only confusing. I did find another problem, though: It's important to note that when you cut out an area from the source, then the dest argument does _not_ specify where the origin of the source would be on the surface that is blitted on, but instead dest specifies the top left corner of just the area that is actually blitted. This is not quite clear from this doc, I think.", "users_id": null, "datetimeon": "2007-05-24T07:20:10", "link": "Surface.blit", "id": 588}, {"content": "Pygame (and SDL) doesn't support multiple windows.", "users_id": null, "datetimeon": "2008-02-09T15:29:56", "link": "pygame.display.set_mode", "id": 1525}, {"content": "you can't \"delete\" something you have drawn, you have to draw something over it instead.\r\nyou can make classes that wrap the different draw function and have both a \"show\" and a \"hide\" function and the hide function has to draw the background over the shape you created in \"hide\", but this can have weird results if shapes overlap and are not correctly redrawn.\r\ncheers", "users_id": null, "datetimeon": "2007-06-02T10:44:48", "link": "pygame.draw.rect", "id": 607}, {"content": "destination.blit(source (distination location),(source location x,y and size x,y)", "users_id": null, "datetimeon": "2007-06-05T09:13:28", "link": "pygame.Surface", "id": 609}, {"content": "destination.blit(source (distination location),(source location x,y and size x,y)", "users_id": null, "datetimeon": "2007-06-05T09:13:56", "link": "Surface.blit", "id": 610}, {"content": "use events to save and release keystates to use it only for some:\r\n\r\nif event.type == pygame.KEYDOWN: if event.key == MYKEY: i = True\r\nelif event.type == pygame.KEYUP: if event.key == MYKEY: i = False\r\nif i: do stuff.\r\n", "users_id": null, "datetimeon": "2008-02-11T16:09:33", "link": "pygame.key.set_repeat", "id": 1541}, {"content": "Is there a way to make the collision box of the line accurate to the line itself?", "users_id": null, "datetimeon": "2008-02-12T18:09:15", "link": "pygame.draw.line", "id": 1549}, {"content": "Is there a way to produce small line segments that have accurate collision boxes\r\nso that one could have two lines that would be parallel to each other with out them colliding?", "users_id": null, "datetimeon": "2008-02-12T18:13:18", "link": "pygame.draw", "id": 1550}, {"content": "Yes, actually it would be quite useful for it to be float, if it could store the\r\ndecimals and increment them as such but not display it until it would take effect...", "users_id": null, "datetimeon": "2008-02-12T20:21:41", "link": "Rect.move_ip", "id": 1552}, {"content": "Clearly, more documentation about the event properties should be written.", "users_id": null, "datetimeon": "2007-06-10T10:28:36", "link": "pygame.event", "id": 628}, {"content": "MOUSEBUTTONDOWN/UP:\r\n pos: tuple of x and y coordinates of the click\r\n button: 1 - left 2 - middle 3 - right button", "users_id": null, "datetimeon": "2007-06-10T13:16:50", "link": "pygame.event", "id": 630}, {"content": "MOUSEMOTION\r\n pos: tuple of x and y coordinates\r\n rel: tuple of relative x and relative y change from previous position\r\n buttons: tuple of three values (left,middle,right). 0-not pressed 1-pressed", "users_id": null, "datetimeon": "2007-06-10T13:18:03", "link": "pygame.event", "id": 631}, {"content": "Play can return None. So be sure to check the channel before using it. Something like this...\r\n\r\n        channel = self.bounce_sound.play()\r\n        if channel is not None:\r\n            channel.set_volume(1.0 - stereo, stereo)", "users_id": 1638, "datetimeon": "2007-06-14T12:13:28", "link": "Sound.play", "id": 635}, {"content": "While thick arcs do get filled, they also get moire holes - at least on Debian's 1.7.1release-4.1.  For now, I've been using a rather ugly workaround where one draws the arc several times with the start angle offset by 0.01 to cut the moires back.", "users_id": null, "datetimeon": "2008-02-16T15:39:17", "link": "pygame.draw.arc", "id": 1580}, {"content": "I have noticed that with my analog joystick square shaped information is returned\r\nfrom this function.  For example, pressing fully down and right would return 1.0\r\nfor both axis directions, instead of 0.7071... as one might expect (since analog\r\njoysticks have a circle shaped socket for the stick to move in.)\r\n\r\nTo correct this one might want to use a function similar to the following\r\njoystick_transform function:\r\n\r\ndef length(v):\r\n\treturn math.sqrt(v[0]*v[0] + v[1]*v[1])\r\n\r\n# Transforms the square info of an analog joystick into circular info\r\ndef joystick_transform(j):\r\n\t# If joystick is not centered:\r\n\tif (j[0],j[1]) != (0,0):\r\n\t\t# Check if x axis is larger than y axis\r\n\t\tif abs(j[0]) > abs(j[1]):\r\n\t\t\t# Since x>y we will check for line intersection with wall\r\n\t\t\t# Get slope (m = y/x) for y = m * x (line equation)\r\n\t\t\tm = abs(j[1] / j[0])\r\n\t\t\t# At x=1.0 (intersecting right wall), y would equal m\r\n\t\t\t# scaler = length of normalized vector / length of line intersecting box\r\n\t\t\ts = 1.0 / length((1.0, m))\r\n\t\telse:\r\n\t\t\t# Since y>=x we will check for line intersection with ceiling\r\n\t\t\t# Get slope (m = x/y) for x = m * y (line equation)\r\n\t\t\tm = abs(j[0] / j[1])\r\n\t\t\t# At y=1.0 (intersecting ceiling), x would equal m\r\n\t\t\t# scaler = length of normalized vector / length of line intersecting box\r\n\t\t\ts = 1.0 / length((m,1.0))\r\n\telse:\r\n\t\t# Since the joystick is centered, the scaler will be 0\r\n\t\ts = 0\r\n\t\t\r\n\t# Simply scale the joystick axis data by the scaler\r\n\treturn (j[0] * s, j[1] * s)\r\n\r\n-----\r\n\r\nHere is a full example illustrating the difference between raw joystick input\r\nand transformed joystick information:\r\n\r\n#!/usr/bin/python\r\n\r\n# In this example the function joystick_transform will transform the\r\n# square shaped joystick axis information into a circular shape.\r\n# This will make the new joystick axis information easier to use while\r\n# moving around a character or cursor.\r\n\r\n# The RED dot represents the actual joystick information.\r\n\r\n# The BLUE dot represents the transformed joystick information.\r\n\r\n# The GREEN dot is a cursor that moves by the transformed joystick\r\n# information in a motion relative to it's previous location.\r\n\r\n\r\nimport pygame\r\nimport math\r\n\r\ndef norm(v):\r\n\tl = length(v)\r\n\tif l != 0:\r\n\t\treturn (v[0] / l, v[1] / l)\r\n\treturn (0,0)\r\n\t\r\ndef length(v):\r\n\treturn math.sqrt(v[0]*v[0] + v[1]*v[1])\r\n\r\n# Transforms the square info of an analog joystick into circular info\r\ndef joystick_transform(j):\r\n\t# If joystick is not centered:\r\n\tif (j[0],j[1]) != (0,0):\r\n\t\t# Check if x axis is larger than y axis\r\n\t\tif abs(j[0]) > abs(j[1]):\r\n\t\t\t# Since x>y we will check for line intersection with wall\r\n\t\t\t# Get slope (m = y/x) for y = m * x (line equation)\r\n\t\t\tm = abs(j[1] / j[0])\r\n\t\t\t# At x=1.0 (intersecting right wall), y would equal m\r\n\t\t\t# scaler = length of normalized vector / length of line intersecting box\r\n\t\t\ts = 1.0 / length((1.0, m))\r\n\t\telse:\r\n\t\t\t# Since y>=x we will check for line intersection with ceiling\r\n\t\t\t# Get slope (m = x/y) for x = m * y (line equation)\r\n\t\t\tm = abs(j[0] / j[1])\r\n\t\t\t# At y=1.0 (intersecting ceiling), x would equal m\r\n\t\t\t# scaler = length of normalized vector / length of line intersecting box\r\n\t\t\ts = 1.0 / length((m,1.0))\r\n\telse:\r\n\t\t# Since the joystick is centered, the scaler will be 0\r\n\t\ts = 0\r\n\t\t\r\n\t# Simply scale the joystick axis data by the scaler\r\n\treturn (j[0] * s, j[1] * s)\r\n\r\npygame.init()\r\npygame.joystick.init()\r\n\r\nscreen = pygame.display.set_mode((640,480))\r\n\r\njs = pygame.joystick.Joystick(0)\r\njs.init()\r\n\r\npx = 320.0\r\npy = 240.0\r\n\r\nmove_speed = 2.0\r\n\r\ndone = False\r\nwhile not done:\r\n\tkey = pygame.key.get_pressed()\r\n\tscreen.fill((255,255,255))\r\n\t\r\n\t# Outer box boundry\r\n\tpygame.draw.rect(screen, (200,200,200), ((10,10),(180,180)), 1)\r\n\t\r\n\t# Circle boundry\r\n\tpygame.draw.circle(screen, (0,0,0), (100,100), 90, 1)\r\n\t\r\n\t# Center point\r\n\tpygame.draw.circle(screen, (200,200,200), (100,100), 2, 1)\r\n\t\r\n\tjx = js.get_axis(0)\r\n\tjy = js.get_axis(1)\r\n\tn = norm((jx,jy))\r\n\t\r\n\t# Line representing normalized joystick information\r\n\tpygame.draw.line(screen, (200,200,200), (100,100), (100 + int(n[0] * 90.0), 100 + int(n[1] * 90.0)))\r\n\t\r\n\t# Raw joystick information\r\n\tx = 100 + int(jx * 90.0)\r\n\ty = 100 + int(jy * 90.0)\r\n\tpygame.draw.circle(screen, (255,0,0), (x, y), 5)\r\n\t\r\n\t# Transformed joystick information\r\n\ttj = joystick_transform((jx,jy))\r\n\tx = 100 + int(tj[0] * 90.0)\r\n\ty = 100 + int(tj[1] * 90.0)\r\n\tpygame.draw.circle(screen, (0,0,255), (x, y), 5)\r\n\t\r\n\t# Cursor moved by transformed joystick information\r\n\tpx = px + tj[0] * move_speed\r\n\tpy = py + tj[1] * move_speed\r\n\tpygame.draw.circle(screen, (0, 255, 0), (int(px), int(py)), 5)\r\n\t\r\n\tpygame.display.flip()\r\n\t\r\n\tfor event in pygame.event.get():\r\n\t\tif event.type == pygame.QUIT: \r\n\t\t\tdone = True\r\n\t\t\t\r\n\t\tif key[pygame.K_ESCAPE]:\r\n\t\t\tdone = True\r\n", "users_id": null, "datetimeon": "2008-02-16T23:25:56", "link": "Joystick.get_axis", "id": 1584}, {"content": "Should have an optional option \r\nfor sound playback speed...", "users_id": 1681, "datetimeon": "2007-06-30T19:41:18", "link": "Sound.play", "id": 676}, {"content": "When antialias is enabled, rendering it on a black background makes it look bold.", "users_id": 1681, "datetimeon": "2007-07-03T01:18:12", "link": "Font.render", "id": 689}, {"content": "the playback doesnt work, the music stops for a second and then starts again\r\nHELP ME", "users_id": null, "datetimeon": "2010-11-27T14:29:59", "link": "pygame.mixer.music.play", "id": 3415}, {"content": "Should have an Anti-alias option...", "users_id": 1681, "datetimeon": "2008-02-25T23:09:09", "link": "pygame.draw.circle", "id": 1646}, {"content": "An example of the Color object is an rgb tuple like (100,0,200).", "users_id": null, "datetimeon": "2008-02-27T10:13:22", "link": "Surface.set_at", "id": 1657}, {"content": "It might be convenient to have this particular documentation within the\r\nhelp(pygame.display.init) documentation, as of this writing it is not.\r\n\r\nAdditionally, information pertaining to Mac-OS X is not present; it may also be\r\nnoteworthy to document the methods by which Pygame renders its surfaces, as OSX,\r\nlike Windows, has its own various subsystems to draw views(surfaces).", "users_id": null, "datetimeon": "2008-03-01T23:13:53", "link": "pygame.display.init", "id": 1680}, {"content": "All the keyboard event.key constants:\r\n\r\nLetters:\r\n    K_a ... K_z\r\n\r\nNumbers:\r\n    K_0  ... K_9\r\n\r\nControl:\r\n    K_TAB\r\n    K_RETURN\r\n    K_ESCAPE\r\n    K_SCROLLOCK\r\n    K_SYSREQ\r\n    K_BREAK\r\n    K_DELETE\r\n    K_BACKSPACE\r\n    K_CAPSLOCK\r\n    K_CLEAR\r\n    K_NUMLOCK\r\n\r\nPunctuation:\r\n    K_SPACE\r\n    K_PERIOD\r\n    K_COMMA\r\n    K_QUESTION\r\n    K_AMPERSAND\r\n    K_ASTERISK\r\n    K_AT\r\n    K_CARET\r\n    K_BACKQUOTE\r\n    K_DOLLAR\r\n    K_EQUALS\r\n    K_EURO\r\n    K_EXCLAIM\r\n    K_SLASH,      K_BACKSLASH\r\n    K_COLON,      K_SEMICOLON\r\n    K_QUOTE,      K_QUOTEDBL\r\n    K_MINUS,      K_PLUS\r\n    K_GREATER,    K_LESS\r\n\r\nBrackets:\r\n    K_RIGHTBRACKET,  K_LEFTBRACKET\r\n    K_RIGHTPAREN,    K_LEFTPAREN\r\n\r\nF-Keys:\r\n    K_F1 ... K_F15\r\n\r\nEdit keys:\r\n    K_HELP\r\n    K_HOME\r\n    K_END\r\n    K_INSERT\r\n    K_PRINT\r\n    K_PAGEUP, K_PAGEDOWN\r\n    K_FIRST,  K_LAST\r\n\r\nKeypad:\r\n    K_KP0 ... K_KP9\r\n    K_KP_DIVIDE\r\n    K_KP_ENTER\r\n    K_KP_EQUALS\r\n    K_KP_MINUS\r\n    K_KP_MULTIPLY\r\n    K_KP_PERIOD\r\n    K_KP_PLUS\r\n\r\nSHF,CTL,ALT etc:\r\n    K_LALT,   K_RALT\r\n    K_LCTRL,  K_RCTRL\r\n    K_LSUPER, K_RSUPER\r\n    K_LSHIFT, K_RSHIFT\r\n    K_RMETA,  K_LMETA\r\n\r\nArrows:\r\n    K_LEFT\r\n    K_UP\r\n    K_RIGHT\r\n    K_DOWN\r\n\r\nOther:\r\n    K_MENU\r\n    K_MODE\r\n    K_PAUSE\r\n    K_POWER\r\n    K_UNDERSCORE\r\n    K_HASH\r\n\r\n    K_UNKNOWN\r\n\r\n\r\n", "users_id": null, "datetimeon": "2008-03-11T11:07:08", "link": "pygame.event.Event", "id": 1682}, {"content": "key is one of the K_* constants in the pygame package level -- it indicates the key pressed. For example, K_UP or K_ESCAPE.\r\nmod is the modifier. I'm assuming it's either a bitfield or a list. Shouldn't be hard to figure it out.", "users_id": null, "datetimeon": "2008-03-16T02:36:10", "link": "pygame.event", "id": 1685}, {"content": "can anyone give me just a small script about how can i play a movie, please?\r\n\r\ni used this script but nothing happened. just a window but blank :(\r\n\r\nimport pygame\r\n\r\n\r\npygame.init()\r\n\r\n\r\ncine = pygame.movie.Movie('film.mpg')\r\nsz=cine.get_size()\r\npygame.display.set_mode(sz)\r\nwhile 1:\r\n    cine.play(1)\r\n\r\nthe movie loads because i tried to find the length and worked and the movie is at the same location. please HELP!!\r\n\r\n", "users_id": null, "datetimeon": "2007-07-12T09:58:26", "link": "pygame.movie", "id": 716}, {"content": "JOYBUTTONDOWN/JOYBUTTONUP\r\nbutton -- the ID of the button which fired the event.", "users_id": null, "datetimeon": "2007-07-14T15:07:03", "link": "pygame.event", "id": 719}, {"content": "Is there a way to draw an anti aliased line with a thickness?", "users_id": null, "datetimeon": "2008-03-28T14:12:55", "link": "pygame.draw.aaline", "id": 1713}, {"content": "mods = pygame.key.get_mods()\r\nif mods & KMOD_LSHIFT: #use whatever KMOD_ constant you want;)\r\n       print \"left shift pressed\"\r\n", "users_id": 2568, "datetimeon": "2008-03-29T16:22:04", "link": "pygame.key.get_mods", "id": 1716}, {"content": "I would like to have a method of telling which side of a rect a point collides.  \r\nIn other words, which side is the point closest to?", "users_id": 1681, "datetimeon": "2008-03-29T23:08:21", "link": "Rect.collidepoint", "id": 1718}, {"content": "I've notice that passing any negative number will cause the music to loop forever, not just -1.", "users_id": null, "datetimeon": "2008-03-30T20:55:44", "link": "pygame.mixer.music.play", "id": 1722}, {"content": "It seams that you can't read the axes or button positions if you don't start the event loop.\r\nThis is a little different from what the docs are saying but actually expected since the joystick \r\nbroadcasts the position (is this right for all drivers?)", "users_id": null, "datetimeon": "2008-04-02T23:40:29", "link": "pygame.joystick.Joystick", "id": 1727}, {"content": "Can I draw just one pixel with this? \r\nApparantly the smallest rect one can draw is 2 pixels big, I guess?", "users_id": null, "datetimeon": "2007-07-16T21:15:36", "link": "pygame.draw.rect", "id": 726}, {"content": "the fade_in parameter seems to be missing. Using 1.7: \r\nTypeError: function takes at most 2 arguments (3 given)", "users_id": null, "datetimeon": "2008-04-04T23:21:49", "link": "Sound.play", "id": 1732}, {"content": "The algorithm used will probably ruin the edges in your images. Makes them kinda blurry.", "users_id": null, "datetimeon": "2008-04-05T17:52:43", "link": "pygame.transform.smoothscale", "id": 1734}, {"content": "\n", "users_id": null, "datetimeon": "2007-07-18T19:04:17", "link": "Very cool design! Useful information. Go on!", "id": 733}, {"content": "\n", "users_id": null, "datetimeon": "2007-07-18T19:04:17", "link": "Pretty nice site, wants to see much more on it! :)", "id": 734}, {"content": "\n", "users_id": null, "datetimeon": "2007-07-18T19:04:17", "link": "Thanks for the enjoy to have you on my site ! Good luck.", "id": 735}, {"content": "How about creating a sound from a string of raw samples?  I shouldn't have to construct a fake WAV header just to get Pygame to accept sound data.", "users_id": null, "datetimeon": "2008-04-09T23:10:47", "link": "pygame.mixer.Sound", "id": 1742}, {"content": "Here are attributes of the different events (as best I can tell):\r\n\r\nACTIVEEVENT:\r\n\tgain\r\n\tstate\r\nKEYDOWN:\r\n\tunicode\r\nKEYUP:\r\n\tkey\r\n\tmod\r\nMOUSEMOTION:\r\n\tpos\r\n\trel\r\n\tbuttons\r\nMOUSEBUTTONDOWN and MOUSEBUTTONUP:\r\n\tpos\r\n\tbutton\r\nJOYAXISMOTION:\r\n\tjoy\r\n\taxis\r\n\tvalue\r\nJOYBALLMOTION:\r\n\tjoy\r\n\tball\r\n\trel\r\nJOYHATMOTION:\r\n\tjoy\r\n\that\r\n\tvalue\r\nJOYBUTTONUP and case JOYBUTTONDOWN:\r\n\tjoy\r\n\tbutton\r\nVIDEORESIZE:\r\n\tsize\r\n\tw\r\n\th\r\nSYSWMEVENT (WIN32 only):\r\n\thwnd\r\n\tmsg\r\n\twparam\r\n\tlparam", "users_id": null, "datetimeon": "2007-07-19T13:22:47", "link": "pygame.event", "id": 740}, {"content": "> It is true that passing None for the final argument causes \"Invalid RGBA argument\". This is a bug in the documentation, not the code.\r\nI'd suggest replacing 'None' with 'NULL' in the documentation, then - it also indicates no value, but is not one you can enter in Python (hence there's no confusion).", "users_id": null, "datetimeon": "2007-07-19T16:32:03", "link": "Font.render", "id": 741}, {"content": "There seems to be a typo in the sentence \"The blit routines will attempt to use hardware acceleration when possible, otherwise will use highly optimized software blitting methods.\"\r\n", "users_id": null, "datetimeon": "2007-07-22T04:31:03", "link": "pygame.Surface", "id": 748}, {"content": "hey thanks for the tip ive been searchin in vain for days", "users_id": null, "datetimeon": "2007-07-22T10:05:15", "link": "Surface.get_rect", "id": 749}, {"content": "Yes, it's particularly an issue for when a sprite wants to move diagonally in a low resolution.\r\n\r\nWhen you're only moving sideways 1 pixel at a time, it's impossible to move diagonally without breaking conservation of momentum.", "users_id": null, "datetimeon": "2008-04-23T19:32:47", "link": "Rect.move_ip", "id": 1782}, {"content": "# Mattew N. Brown copyright 2007\r\n# This is an example program for key input:\r\n\r\n   ## IMPORT THEN EXECUTE IMPORTED MODULE ('*.py'): ##\r\nimport os, sys\r\nimport random\r\nimport pygame\r\nfrom pygame.locals import *\r\n   ## UH!? WHAT IF IT ISN'T EXISTANT!?: ##\r\nif not pygame.font: print 'Warning, fonts disabled'\r\nif not pygame.mixer: print 'Warning, sound disabled'\r\n\r\n           ## LOAD IMAGE AND SOUND: ##\r\ndef image_file_data(file_name, colorkey=None):\r\n   try:\r\n    image = pygame.image.load(file_name)\r\n   except pygame.error, message:\r\n    print 'ERROR: Image did not load:', file_name\r\n    raise SystemExit, message\r\n   image = image.convert()\r\n   if colorkey is not None:\r\n    if colorkey is -1:\r\n     colorkey = image.get_at((0,0))\r\n    image.set_colorkey(colorkey, RLEACCEL)\r\n   return image, image.get_rect()\r\ndef sound_file_data(file_name):\r\n   class NoneSound:\r\n    def play(self): pass\r\n   if not pygame.mixer:\r\n    return NoneSound()\r\n   try:\r\n    sound = pygame.mixer.Sound(file_name)\r\n   except pygame.error, message:\r\n    print 'ERROR: Sound did not load:', file_name\r\n    raise SystemExit, message\r\n   return sound\r\ndef HEHEHE_font(size):\r\n    fonti = pygame.font.Font(None, size)\r\n    fonti.set_bold(0)\r\n    return fonti\r\n           ## IMAGE STRETCH AND ROTATE: ##\r\ndef HEHEHE_stretch_image (IMAGEY, wol, zol):\r\n    #return pygame.transform.scale(IMAGEY, (wol, zol))\r\n    return pygame.transform.scale(IMAGEY, (wol + IMAGEY.get_width(), zol + IMAGEY.get_height()))\r\ndef HEHEHE_rotate_image (IMAGEY, angle):\r\n    center = (0, 0)\r\n    rotate = pygame.transform.rotate\r\n    IMAGEY = rotate(IMAGEY, angle)\r\n    recty = IMAGEY.get_rect(center=center)\r\n    return IMAGEY, recty\r\n           ## DRAW IMAGE: ##\r\ndef draw_HEHEHE_image (IMAGEE, w, z):\r\n    screen.blit(IMAGEE, (w, z))\r\ndef draw_HEHEHE_image_stretch (IMAGEE, w, z, wol, zol):\r\n    IMAGEE = HEHEHE_stretch_image(IMAGEE, wol, zol)\r\n    screen.blit(IMAGEE, (w, z))\r\ndef draw_HEHEHE_image_stretch_rotate (IMAGEE, w, z, wol, zol, angle):\r\n    IMAGEE = HEHEHE_stretch_image(IMAGEE, wol, zol)\r\n    IMAGEE, recty = HEHEHE_rotate_image(IMAGEE, angle)\r\n    screen.blit(IMAGEE, (w + recty.x, z + recty.y))\r\n           ## DRAW TEXT IMAGE: ##\r\ndef draw_HEHEHE_text (t, special, size, w, z, colory):\r\n    fonty = HEHEHE_font(size)\r\n    IMAGEE = fonty.render(t, special, colory)\r\n    screen.blit(IMAGEE, (w, z))\r\ndef draw_HEHEHE_text_stretch (t, special, size, w, z, colory, wol, zol):\r\n    fonty = HEHEHE_font(size)\r\n    IMAGEE = fonty.render(t, special, colory)\r\n    IMAGEE = HEHEHE_stretch_image(IMAGEE, wol, zol)\r\n    screen.blit(IMAGEE, (w, z))\r\ndef draw_HEHEHE_text_stretch_rotate (t, special, size, w, z, colory, wol, zol, angle):\r\n    fonty = HEHEHE_font(size)\r\n    IMAGE = fonty.render(t, special, colory)\r\n    IMAGE = HEHEHE_stretch_image(IMAGE, wol, zol)\r\n    IMAGE, recty = HEHEHE_rotate_image(IMAGE, angle)\r\n    screen.blit(IMAGE, (w + recty.x, z + recty.y))\r\n     ### AAAH! FREAKY!! ###\r\nclock = pygame.time.Clock()\r\nImage_directory = \"PNG/\"\r\nSound_directory = \"SOUND/\"\r\n     ### WHAT IN THE WORLD IS THIS!!??: ###\r\npygame.init()\r\nAPPLICATION_w_size = 700\r\nAPPLICATION_z_size = 500\r\nscreen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), RESIZABLE)\r\n#pygame.display.set_icon(image_file_data(Image_directory + \"ICON.PNG\", 0)[0])\r\npygame.display.set_caption('Mattew N. Brown copyright 2007')\r\npygame.mouse.set_visible(1)\r\n     ### WHAT IN THE WORLD IS THIS!!!!!!!!!!!!??: ###\r\nbackground = pygame.Surface(screen.get_size())\r\nbackground = background.convert()\r\nbackground.fill((0, 0, 0))\r\n     ### THIS IS DRIVING MY CAR CRAZYs!!!\r\nscreen.blit(background, (0, 0))\r\npygame.display.flip()\r\nrandom.seed()\r\n\r\n           ## LOAD ALL IMAGES AND SOUNDS: ##\r\nimage_MAX = 0\r\nimage_file_name =                 [];\r\nimage = []\r\nimage_rect = []\r\nwhile (image_MAX <=                        (-1)   ):\r\n   I = image_MAX\r\n   Itemp1, Itemp2 = image_file_data(Image_directory + image_file_name[I], 0)\r\n   image += [Itemp1]\r\n   image_rect += [Itemp2]\r\n   image_MAX += 1\r\nsound_MAX = 0\r\nsound_file_name =                 [];\r\nsound = []\r\nsound_rect = []\r\nwhile (sound_MAX <=                        (-1)   ):\r\n   I = sound_MAX\r\n   Itemp1, Itemp2 = sound_file_data(Sound_directory + sound_file_name[I])\r\n   sound += [Itemp1]\r\n   sound_rect += [Itemp2]\r\n   sound_MAX += 1\r\n       ## LOAD ONE AND ONLY MUSIC FILE: ##\r\n#pygame.mixer.music.load(d + 'PCDV0043.WAV')\r\n\r\n    # QUIT\t       none\r\n    # ACTIVEEVENT      gain, state\r\n    # KEYDOWN\t       unicode, key, mod\r\n    # KEYUP\t       key, mod\r\n    # MOUSEMOTION      pos, rel, buttons\r\n    # MOUSEBUTTONUP    pos, button\r\n    # MOUSEBUTTONDOWN  pos, button\r\n    # JOYAXISMOTION    joy, axis, value\r\n    # JOYBALLMOTION    joy, ball, rel\r\n    # JOYHATMOTION     joy, hat, value\r\n    # JOYBUTTONUP      joy, button\r\n    # JOYBUTTONDOWN    joy, button\r\n    # VIDEORESIZE      size, w, h\r\n    # VIDEOEXPOSE      none\r\n    # USEREVENT        code\r\n\r\n\r\n\r\n           ## MAIN: ##\r\nif __name__ == '__main__':\r\n    EE = ['', '', '', '', '', '', '', '', '', '',\r\n          '', '', '', '', '']\r\n    b = (190, 130, 110)\r\n    COLORY = [b, b, b, b, b, b, b, b, b, b,\r\n              b, b, b, b, b]\r\n    angy = 0\r\n    loopy = 1\r\n    while (loopy == 1):\r\n        angy += 1\r\n        if angy > 360:\r\n         angy = 1\r\n        clock.tick(70)\r\n        screen.blit(background, (0, 0))\r\n        for e in pygame.event.get():\r\n         if e.type == QUIT:\r\n           loopy = 0\r\n         #elif e.type == KEYDOWN and e.key == K_ESCAPE:\r\n         # loopy = 0\r\n         else:\r\n          nnnnnn = -1\r\n          if e.type == QUIT: nnnnnn = 0\r\n          if e.type == ACTIVEEVENT: nnnnnn = 1\r\n          if e.type == KEYDOWN: nnnnnn = 2\r\n          if e.type == KEYUP: nnnnnn = 3\r\n          if e.type == MOUSEMOTION: nnnnnn = 4\r\n          if e.type == MOUSEBUTTONUP: nnnnnn = 5\r\n          if e.type == MOUSEBUTTONDOWN: nnnnnn = 6\r\n          if e.type == JOYAXISMOTION: nnnnnn = 7\r\n          if e.type == JOYBALLMOTION: nnnnnn = 8\r\n          if e.type == JOYHATMOTION: nnnnnn = 9\r\n          if e.type == JOYBUTTONUP: nnnnnn = 10\r\n          if e.type == JOYBUTTONDOWN: nnnnnn = 11\r\n          if e.type == VIDEORESIZE:\r\n           nnnnnn = 12\r\n           APPLICATION_w_size = e.size[0]\r\n           APPLICATION_z_size = e.size[1]\r\n           screen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), RESIZABLE)\r\n          if e.type == VIDEOEXPOSE: nnnnnn = 13\r\n          if e.type == USEREVENT: nnnnnn = 14\r\n          if nnnnnn != -1:\r\n           EE[nnnnnn] = str(e); COLORY[nnnnnn] = (190, 200, 255)\r\n        WOW = 0\r\n        while (WOW < 14):\r\n         draw_HEHEHE_text(\"E\" + str(WOW) + \"  =  \" + EE[WOW], 1, 24, 30, 20 + (WOW * 22), COLORY[WOW])\r\n         if COLORY[WOW] == b:\r\n          COLORY[WOW] = COLORY[WOW]\r\n         else:\r\n          COLORY[WOW] = (200, 240, 200)\r\n         WOW += 1\r\n    # QUIT\t       none\r\n    # ACTIVEEVENT      gain, state\r\n    # KEYDOWN\t       unicode, key, mod\r\n    # KEYUP\t       key, mod\r\n    # MOUSEMOTION      pos, rel, buttons\r\n    # MOUSEBUTTONUP    pos, button\r\n    # MOUSEBUTTONDOWN  pos, button\r\n    # JOYAXISMOTION    joy, axis, value\r\n    # JOYBALLMOTION    joy, ball, rel\r\n    # JOYHATMOTION     joy, hat, value\r\n    # JOYBUTTONUP      joy, button\r\n    # JOYBUTTONDOWN    joy, button\r\n    # VIDEORESIZE      size, w, h\r\n    # VIDEOEXPOSE      none\r\n    # USEREVENT        code\r\n        #I = 0\r\n        #www = 0\r\n        #while (www < 2):\r\n        # www += 1\r\n        # zzz = 0\r\n        # while (zzz < 10):\r\n        #  zzz += 1\r\n        #  #if (I < image_MAX): draw_HEHEHE_image(I, www * 40, zzz * 40)\r\n        #  if (I < image_MAX): draw_HEHEHE_image_stretch_rotate(I, www * 40, zzz * 40, 40, 40, angy)\r\n        #  I += 1\r\n        #draw_HEHEHE_text_stretch(\"BOOM!\", 1, 40, 330, 400, (255, 255, 255), 20, 20)\r\n        #draw_HEHEHE_text_stretch_rotate(\"BOOM!\", 1, 40, 140, 400, (255, 255, 255), 0, 0, angy)\r\n        #draw_HEHEHE_text_stretch_rotate(\"WEEEE!\", 1, 30, 450, 470, (255, 255, 255), 0, 0, angy)\r\n        pygame.display.flip()\r\n", "users_id": null, "datetimeon": "2007-07-28T12:28:50", "link": "pygame.event", "id": 779}, {"content": "# Matthew N. Brown copyright 2007\r\n# Here is an example program that\r\n# draws: polygons, circles, and rectangles:\r\n#\r\n# You can copy this program on to\r\n# your own computer and run it.\r\n#\r\n\r\nimport os, sys\r\nimport random\r\nimport pygame\r\nfrom pygame.locals import *\r\nif not pygame.font: print 'Warning, fonts disabled'\r\nif not pygame.mixer: print 'Warning, sound disabled'\r\nimport time\r\nimport gc\r\nimport math\r\n\r\npygame.init()\r\nAPPLICATION_w_size = 700\r\nAPPLICATION_z_size = 500\r\nscreen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), RESIZABLE)\r\n#screen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), FULLSCREEN)\r\npygame.display.set_caption(\"HEHE test draw thingie program    Matthew N. Brown copyright 2007\")\r\n#pygame.mouse.set_visible(0)\r\nglobal background\r\nbackground = pygame.Surface(screen.get_size())\r\nbackground.fill((0, 0, 0))\r\nscreen.blit(background, (0, 0))\r\npygame.display.flip()\r\nrandom.seed()\r\n\r\nplayer_w = 3\r\nplayer_z = 2\r\n\r\nx = -1\r\nmap_w_size = 10\r\nmap_z_size = 10\r\nmap = [[x, x, x, x, x, x, x, x, x, x, x],\r\n       [x, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1],\r\n       [x, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1],\r\n       [x, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1],\r\n       [x, 1, 1, 0, 0, 1, 0, 0, 4, 0, 0],\r\n       [x, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\r\n       [x, 1, 1, 0, 0, 2, 0, 1, 1, 0, 1],\r\n       [x, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1],\r\n       [x, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1],\r\n       [x, 1, 0, 4, 0, 1, 0, 0, 0, 0, 1],\r\n       [x, 1, 0, 2, 2, 2, 2, 2, 2, 2, 1]]\r\n\r\nmap[player_z][player_w] = 3\r\n\r\n           ## IMAGE STRETCH AND ROTATE: ##\r\ndef chilly_font(size):\r\n    fonti = pygame.font.Font(None, size)\r\n    fonti.set_bold(0)\r\n    return fonti\r\n           ## DRAW TEXT IMAGE: ##\r\ndef draw_chilly_text (t, special, size, w, z, colory):\r\n    fonty = chilly_font(size)\r\n    IMAGEE = fonty.render(t, special, colory)\r\n    screen.blit(IMAGEE, (w, z))\r\n\r\n\r\n     ### some functions: ###\r\ndef in_repeating_boundy (n, b1, b2):\r\n    if n < b1: n = b2\r\n    if n > b2: n = b1\r\n    return n\r\ndef in_boundy (n, b1, b2):\r\n    if n < b1: n = b1\r\n    if n > b2: n = b2\r\n    return n\r\ndef in_boundy2D ((w, z), (w1, z1, w2, z2)):\r\n    if w < w1: w = w1\r\n    if w > w2: w = w2\r\n    if z < z1: z = z1\r\n    if z > z2: z = z2\r\n    return w, z\r\ndef chilly_distance (w1, z1, w2, z2):\r\n    return math.sqrt(math.pow(w1 - w2, 2) + math.pow(z1 - z2, 2))\r\ndef chilly_rect_touching_rect(w1, z1, wol1, zol1, w2, z2, wol2, zol2):\r\n     w2   -= w1\r\n     z2   -= z1\r\n     ww1   = -wol2\r\n     zz1   = -zol2\r\n     return (w2 >= ww1 and w2 <= wol1 and z2 >= zz1 and z2 <= zol1)\r\n\r\n          ## keys and mouse stuff: ##\r\nglobal ky_held, ky_first_held, ky_time_last_pressed\r\nglobal mouse_w, mouse_z, mouse_inn, mouse_left_pressed, mouse_right_pressed, mouse_left_held, mouse_right_held\r\nnot_mouse_left_or_right_held = 1\r\nmouse_left_held = 0\r\nmouse_right_held = 0\r\nmouse_w = 0\r\nmouse_z = 0\r\nmouse_inn = 0\r\nky_held = [0]\r\nky_first_held = [0]\r\nky_time_last_pressed = [0]\r\nm = -1\r\nwhile (m < 500):\r\n m += 1\r\n ky_held += [0]\r\n ky_first_held += [0]\r\n ky_time_last_pressed += [0]\r\n\r\n           ## MOUSE AND KEY FUNCTIONS: ##\r\ndef clear_kys():\r\n    m = -1\r\n    while (m < 500):\r\n     m += 1\r\n     ky_held[m] = 0\r\n     ky_first_held[m] = 0\r\n     ky_time_last_pressed[m] = 0\r\ndef mouse_left_pressed_CEV():\r\n    global mouse_left_pressed\r\n    if mouse_left_pressed: mouse_left_pressed = 0; return 1\r\ndef mouse_right_pressed_CEV():\r\n    global mouse_right_pressed\r\n    if mouse_right_pressed: mouse_right_pressed = 0; return 1\r\ndef old_style_ky(n):\r\n    return (ky_first_held_CEV(n) or (ky_held[n] and ky_time_last_pressed[n] < time.time() - .3))\r\ndef ky_first_held_CEV(n):\r\n    if (ky_first_held[n]):\r\n     ky_first_held[n] = 0\r\n     return 1\r\n    else:\r\n     return 0\r\ndef mouse_in_rect (w, z, wol, zol):\r\n    return (mouse_w >= w and mouse_z >= z and mouse_w <= w + wol and mouse_z <= z + zol)\r\ndef mouse_in_circle (w, z, rad):\r\n    dia = rad * 2\r\n    if mouse_in_rect(w - rad, z - rad, w + dia, z + dia):\r\n     return (chilly_distance(mouse_w, mouse_z, w, z) < rad)\r\n    else:\r\n     return 0\r\n\r\n    ## CHECK FOR: KEYBOARD, MOUSE, JOYSTICK, AND OTHERY INPUTY: ##\r\ndef check_for_keys():\r\n        global mouse_w, mouse_z, mouse_inn, mouse_left_pressed, mouse_right_pressed, mouse_left_held, mouse_right_held\r\n        global loopy, letter_hitty\r\n        global not_mouse_left_or_right_held\r\n        for e in pygame.event.get():\r\n          if e.type == QUIT:\r\n           loopy = 0\r\n          if e.type == ACTIVEEVENT:\r\n           mouse_inn = (e.gain and (e.state == 1 or e.state == 6))\r\n           if not mouse_inn:\r\n            mouse_w = 0\r\n            mouse_z = 0\r\n          if e.type == KEYDOWN:\r\n           ky_held[e.key] = 1\r\n           ky_first_held[e.key] = 1\r\n           ky_time_last_pressed[e.key] = time.time()\r\n           if (e.key >= 97 and e.key <= 122):\r\n            letter_hitty = e.unicode.lower()\r\n          if e.type == KEYUP:\r\n           ky_held[e.key] = 0\r\n           #ky_first_held[e.key] = 0\r\n          if e.type == MOUSEMOTION:\r\n           mouse_w = e.pos[0]\r\n           mouse_z = e.pos[1]\r\n          if e.type == MOUSEBUTTONUP:\r\n           if e.button == 1: mouse_left_held = 0\r\n           if e.button == 3: mouse_right_held = 0\r\n           if not mouse_left_held and not mouse_right_held: not_mouse_left_or_right_held = 1\r\n          if e.type == MOUSEBUTTONDOWN:\r\n           mouse_left_pressed =  e.button == 1\r\n           mouse_right_pressed = e.button == 3\r\n           mouse_left_held =  mouse_left_held or e.button == 1\r\n           mouse_right_held = mouse_right_held or e.button == 3\r\n           if mouse_left_held or mouse_right_held: not_mouse_left_or_right_held = 0\r\n          if e.type == JOYAXISMOTION: nnnnnn = 7\r\n          if e.type == JOYBALLMOTION: nnnnnn = 8\r\n          if e.type == JOYHATMOTION: nnnnnn = 9\r\n          if e.type == JOYBUTTONUP: nnnnnn = 10\r\n          if e.type == JOYBUTTONDOWN: nnnnnn = 11\r\n          if e.type == VIDEORESIZE:\r\n           global background, Dimage_editing_screen, screen, APPLICATION_w_size, APPLICATION_z_size\r\n           APPLICATION_w_size = e.size[0]\r\n           APPLICATION_z_size = e.size[1]\r\n           screen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), RESIZABLE)\r\n           background = pygame.Surface((APPLICATION_w_size, APPLICATION_z_size))\r\n          if e.type == VIDEOEXPOSE: nnnnnn = 13\r\n          if e.type == USEREVENT: nnnnnn = 14\r\n\r\n       ### MORE STUFF: ###\r\nHE_HE_surfacey = pygame.Surface((40, 40))\r\ncolor1 = (200, 200, 200)\r\ncolor2 = (200, 0, 0)\r\ncolor3 = (0, 200, 0)\r\ncolor4 = (130, 180, 180)\r\nblack_colory = (0, 0, 0)\r\nHE_HE_surfacey.fill(black_colory)\r\n\r\ndef try_to_push_block(w, z, wo, zo):\r\n    if map[z][w] == 1:\r\n     w_pushed = w + wo\r\n     z_pushed = z + zo\r\n     w_pushed, z_pushed = in_boundy2D((w_pushed, z_pushed), (0, 0, map_w_size, map_z_size))\r\n     if map[z_pushed][w_pushed] == 0:\r\n      map[z][w] = 0\r\n      map[z_pushed][w_pushed] = 1\r\n\r\ndef draw_map():\r\n    ww = 0\r\n    while ww < map_w_size:\r\n     ww += 1\r\n     zz = 0\r\n     while zz < map_z_size:\r\n      zz += 1\r\n      n = map[zz][ww]\r\n      screen.blit(HE_HE_surfacey, (ww * 40, zz * 40))\r\n      if n == 1:\r\n       pygame.draw.rect(screen, color1, (ww * 40, zz * 40, 40, 40), 2)\r\n      elif n == 2:\r\n       #pygame.draw.rect(screen, color2, (ww * 40, zz * 40, 40, 40), 2)\r\n       pygame.draw.circle(screen, color2, (ww * 40 + 20, zz * 40 + 20), 17, 2)\r\n      elif n == 3:\r\n       #pygame.draw.rect(screen, color3, (ww * 40, zz * 40, 40, 40), 2)\r\n       locy_w = ww * 40\r\n       locy_z = zz * 40\r\n       point1 = (20 + locy_w, 10 + locy_z)\r\n       point2 = (40 + locy_w, 12 + locy_z)\r\n       point3 = (30 + locy_w, 19 + locy_z)\r\n       point4 = (30 + locy_w, 30 + locy_z)\r\n       point5 = (20 + locy_w, 20 + locy_z)\r\n       points = (point1, point2, point3, point4, point5)\r\n       pygame.draw.polygon(screen, color3, points, 2)\r\n      elif n == 4:\r\n       pygame.draw.rect(screen, color4, (ww * 40, zz * 40, 40, 40), 4)\r\n\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n\r\n# NOTE: w = x\r\n# NOTE: z = y\r\n#    -- HE, HE, Bad habit of mine . . .\r\n\r\n           ## MAIN: ##\r\nif __name__ == '__main__':\r\n\r\n         # THE MAIN, MAIN, MAIN LOOP:\r\n    loopy = 1\r\n    while (loopy == 1):\r\n\r\n\r\n        mouse_left_pressed = 0\r\n        mouse_right_pressed = 0\r\n        check_for_keys()\r\n\r\n        draw_map()\r\n        draw_chilly_text('Press the arrow keys to move . . .', 0, 20, 0, 0, (255, 255, 255))\r\n\r\n        wa = player_w\r\n        za = player_z\r\n        map[player_z][player_w] = 0\r\n        if old_style_ky(276): player_w -= 1\r\n        if old_style_ky(273): player_z -= 1\r\n        if old_style_ky(275): player_w += 1\r\n        if old_style_ky(274): player_z += 1\r\n        player_w, player_z = in_boundy2D((player_w, player_z), (0, 0, map_w_size, map_z_size))\r\n        try_to_push_block(player_w, player_z, player_w - wa, player_z - za)\r\n        if map[player_z][player_w] != 0:\r\n         player_w = wa\r\n         player_z = za\r\n        map[player_z][player_w] = 3\r\n\r\n        #if ky_first_held[27]: loopy = 0\r\n        pygame.display.flip()\r\n", "users_id": null, "datetimeon": "2007-07-29T17:05:04", "link": "pygame.draw", "id": 781}, {"content": "# Matthew N. Brown copyright 2007\r\n# Here is an example program that\r\n# draws a bouncing ball using:   pygame.draw.circle\r\n#\r\n# You can copy this program on to\r\n# your own computer and run it.\r\n#\r\n\r\nimport os, sys\r\nimport random\r\nimport pygame\r\nfrom pygame.locals import *\r\nif not pygame.font: print 'Warning, fonts disabled'\r\nif not pygame.mixer: print 'Warning, sound disabled'\r\nimport time\r\nimport gc\r\nimport math\r\n\r\npygame.init()\r\nAPPLICATION_w_size = 700\r\nAPPLICATION_z_size = 500\r\nscreen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), RESIZABLE)\r\n#screen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), FULLSCREEN)\r\npygame.display.set_caption(\"HEHE test circle thingie program    Matthew N. Brown copyright 2007\")\r\n#pygame.mouse.set_visible(0)\r\nglobal background\r\nbackground = pygame.Surface(screen.get_size())\r\nbackground.fill((0, 0, 0))\r\nscreen.blit(background, (0, 0))\r\npygame.display.flip()\r\nrandom.seed()\r\n\r\n\r\n           ## IMAGE STRETCH AND ROTATE: ##\r\ndef HEHEHE_font(size):\r\n    fonti = pygame.font.Font(None, size)\r\n    fonti.set_bold(0)\r\n    return fonti\r\n           ## DRAW TEXT IMAGE: ##\r\ndef draw_HEHEHE_text (t, special, size, w, z, colory):\r\n    fonty = HEHEHE_font(size)\r\n    IMAGEE = fonty.render(t, special, colory)\r\n    screen.blit(IMAGEE, (w, z))\r\n\r\n\r\n     ### some functions: ###\r\ndef in_repeating_boundy (n, b1, b2):\r\n    if n < b1: n = b2\r\n    if n > b2: n = b1\r\n    return n\r\ndef in_boundy (n, b1, b2):\r\n    if n < b1: n = b1\r\n    if n > b2: n = b2\r\n    return n\r\ndef in_boundy2D ((w, z), (w1, z1, w2, z2)):\r\n    if w < w1: w = w1\r\n    if w > w2: w = w2\r\n    if z < z1: z = z1\r\n    if z > z2: z = z2\r\n    return w, z\r\ndef HEHEHE_distance (w1, z1, w2, z2):\r\n    return math.sqrt(math.pow(w1 - w2, 2) + math.pow(z1 - z2, 2))\r\ndef HEHEHE_rect_touching_rect(w1, z1, wol1, zol1, w2, z2, wol2, zol2):\r\n     w2   -= w1\r\n     z2   -= z1\r\n     ww1   = -wol2\r\n     zz1   = -zol2\r\n     return (w2 >= ww1 and w2 <= wol1 and z2 >= zz1 and z2 <= zol1)\r\n\r\n          ## keys and mouse stuff: ##\r\nglobal ky_held, ky_first_held, ky_time_last_pressed\r\nglobal mouse_w, mouse_z, mouse_inn, mouse_left_pressed, mouse_right_pressed, mouse_left_held, mouse_right_held\r\nnot_mouse_left_or_right_held = 1\r\nmouse_left_held = 0\r\nmouse_right_held = 0\r\nmouse_w = 0\r\nmouse_z = 0\r\nmouse_inn = 0\r\nky_held = [0]\r\nky_first_held = [0]\r\nky_time_last_pressed = [0]\r\nm = -1\r\nwhile (m < 500):\r\n m += 1\r\n ky_held += [0]\r\n ky_first_held += [0]\r\n ky_time_last_pressed += [0]\r\n\r\n           ## MOUSE AND KEY FUNCTIONS: ##\r\ndef clear_kys():\r\n    m = -1\r\n    while (m < 500):\r\n     m += 1\r\n     ky_held[m] = 0\r\n     ky_first_held[m] = 0\r\n     ky_time_last_pressed[m] = 0\r\ndef mouse_left_pressed_CEV():\r\n    global mouse_left_pressed\r\n    if mouse_left_pressed: mouse_left_pressed = 0; return 1\r\ndef mouse_right_pressed_CEV():\r\n    global mouse_right_pressed\r\n    if mouse_right_pressed: mouse_right_pressed = 0; return 1\r\ndef old_style_ky(n):\r\n    return (ky_first_held_CEV(n) or (ky_held[n] and ky_time_last_pressed[n] < time.time() - .3))\r\ndef ky_first_held_CEV(n):\r\n    if (ky_first_held[n]):\r\n     ky_first_held[n] = 0\r\n     return 1\r\n    else:\r\n     return 0\r\ndef mouse_in_rect (w, z, wol, zol):\r\n    return (mouse_w >= w and mouse_z >= z and mouse_w <= w + wol and mouse_z <= z + zol)\r\ndef mouse_in_circle (w, z, rad):\r\n    dia = rad * 2\r\n    if mouse_in_rect(w - rad, z - rad, w + dia, z + dia):\r\n     return (HEHEHE_distance(mouse_w, mouse_z, w, z) < rad)\r\n    else:\r\n     return 0\r\n\r\n    ## CHECK FOR: KEYBOARD, MOUSE, JOYSTICK, AND OTHERY INPUTY: ##\r\ndef check_for_keys():\r\n        global mouse_w, mouse_z, mouse_inn, mouse_left_pressed, mouse_right_pressed, mouse_left_held, mouse_right_held\r\n        global loopy, letter_hitty\r\n        global not_mouse_left_or_right_held\r\n        for e in pygame.event.get():\r\n          if e.type == QUIT:\r\n           loopy = 0\r\n          if e.type == ACTIVEEVENT:\r\n           mouse_inn = (e.gain and (e.state == 1 or e.state == 6))\r\n           if not mouse_inn:\r\n            mouse_w = 0\r\n            mouse_z = 0\r\n          if e.type == KEYDOWN:\r\n           ky_held[e.key] = 1\r\n           ky_first_held[e.key] = 1\r\n           ky_time_last_pressed[e.key] = time.time()\r\n           if (e.key >= 97 and e.key <= 122):\r\n            letter_hitty = e.unicode.lower()\r\n          if e.type == KEYUP:\r\n           ky_held[e.key] = 0\r\n           #ky_first_held[e.key] = 0\r\n          if e.type == MOUSEMOTION:\r\n           mouse_w = e.pos[0]\r\n           mouse_z = e.pos[1]\r\n          if e.type == MOUSEBUTTONUP:\r\n           if e.button == 1: mouse_left_held = 0\r\n           if e.button == 3: mouse_right_held = 0\r\n           if not mouse_left_held and not mouse_right_held: not_mouse_left_or_right_held = 1\r\n          if e.type == MOUSEBUTTONDOWN:\r\n           mouse_left_pressed =  e.button == 1\r\n           mouse_right_pressed = e.button == 3\r\n           mouse_left_held =  mouse_left_held or e.button == 1\r\n           mouse_right_held = mouse_right_held or e.button == 3\r\n           if mouse_left_held or mouse_right_held: not_mouse_left_or_right_held = 0\r\n          if e.type == JOYAXISMOTION: nnnnnn = 7\r\n          if e.type == JOYBALLMOTION: nnnnnn = 8\r\n          if e.type == JOYHATMOTION: nnnnnn = 9\r\n          if e.type == JOYBUTTONUP: nnnnnn = 10\r\n          if e.type == JOYBUTTONDOWN: nnnnnn = 11\r\n          if e.type == VIDEORESIZE:\r\n           global background, Dimage_editing_screen, screen, APPLICATION_w_size, APPLICATION_z_size\r\n           APPLICATION_w_size = e.size[0]\r\n           APPLICATION_z_size = e.size[1]\r\n           screen = pygame.display.set_mode((APPLICATION_w_size, APPLICATION_z_size), RESIZABLE)\r\n           background = pygame.Surface((APPLICATION_w_size, APPLICATION_z_size))\r\n          if e.type == VIDEOEXPOSE: nnnnnn = 13\r\n          if e.type == USEREVENT: nnnnnn = 14\r\n\r\n       ### MORE STUFF: ###\r\nball_w = 30.0\r\nball_z = 20.0\r\n\r\nball_wol =  4.0\r\nball_zol = -1.0\r\n\r\ngravity_w = 0.0\r\ngravity_z = 1.0\r\n\r\nradius = 11.0\r\n\r\nmakes_ball_slower_per_bounce = 1.2\r\n\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n#######################################################################################\r\n\r\n# NOTE: w = x\r\n# NOTE: z = y\r\n#    -- HE, HE, Bad habit of mine . . .\r\n\r\n           ## MAIN: ##\r\nif __name__ == '__main__':\r\n\r\n         # THE MAIN, MAIN, MAIN LOOP:\r\n    loopy = 1\r\n    while (loopy == 1):\r\n\r\n        t = time.time()\r\n        while t > time.time() - .03:\r\n         pass\r\n        mouse_left_pressed = 0\r\n        mouse_right_pressed = 0\r\n        check_for_keys()\r\n\r\n        ball_wol += gravity_w\r\n        ball_zol += gravity_z\r\n\r\n        if old_style_ky(276): ball_wol -= 12\r\n        if old_style_ky(273): ball_zol -= 22\r\n        if old_style_ky(275): ball_wol += 12\r\n        if old_style_ky(274): ball_zol += 22\r\n        if ky_held[115]: ball_wol = 0; ball_zol = 0\r\n        if ky_held[99]: ball_wol = (random.random() * 400) - 200; ball_zol = (random.random() * 400) - 200\r\n\r\n        ball_w += ball_wol\r\n        ball_z += ball_zol\r\n\r\n        if ball_w <                      radius: ball_w =                      radius; ball_wol = -(ball_wol / makes_ball_slower_per_bounce)\r\n        if ball_z <                      radius: ball_z =                      radius; ball_zol = -(ball_zol / makes_ball_slower_per_bounce)\r\n        if ball_w > APPLICATION_w_size - radius: ball_w = APPLICATION_w_size - radius; ball_wol = -(ball_wol / makes_ball_slower_per_bounce)\r\n        if ball_z > APPLICATION_z_size - radius: ball_z = APPLICATION_z_size - radius; ball_zol = -(ball_zol / makes_ball_slower_per_bounce)\r\n\r\n        screen.fill((0, 0, 0))\r\n        draw_HEHEHE_text('Press the arrow keys to move ball.', 0, 25, 0, 0, (255, 255, 255))\r\n        draw_HEHEHE_text('Hold  S  to stop ball.', 0, 25, 0, 30, (255, 255, 255))\r\n        draw_HEHEHE_text('press  C  to make ball go crazy.', 0, 25, 0, 70, (255, 255, 255))\r\n        pygame.draw.circle(screen, (200, 200, 200), (int(ball_w), int(ball_z)), int(radius))\r\n\r\n        #if ky_first_held[27]: loopy = 0\r\n        pygame.display.flip()", "users_id": null, "datetimeon": "2007-07-29T19:02:50", "link": "pygame.draw.circle", "id": 782}, {"content": "Right.  Unfortunately, That's the way it is.  A width or height of 0 should also\r\nbe allowed, for rectangles of changing sizes (think progressbar at 0%)", "users_id": 1681, "datetimeon": "2007-08-01T17:48:16", "link": "pygame.draw.rect", "id": 785}, {"content": "\n", "users_id": null, "datetimeon": "2007-08-08T10:35:27", "link": "You have a great site. All in your web is very useful. Please keep on working.", "id": 796}, {"content": "Is this fast ? What is better for software systems ?", "users_id": null, "datetimeon": "2007-08-12T18:03:51", "link": "Surface.blit", "id": 800}, {"content": "I have not tried photoshop or something to create alpha channels in bitmaps directly. Instead, I use a mask color in a 'normal' bitmap, and make that look transparant in the icon.\r\ncreate a bitmap in mspaint, black areas will be transparant, size 32x32 pixels, save it as 'icon.bmp'.\r\n \r\nthen create a file named icon.py and put this in it:\r\n###\r\nimport pygame\r\n\r\ndef seticon(iconname):\r\n    \"\"\"\r\n    give an iconname, a bitmap sized 32x32 pixels, black (0,0,0) will be alpha channel\r\n    \r\n    the windowicon will be set to the bitmap, but the black pixels will be full alpha channel\r\n     \r\n    can only be called once after pygame.init() and before somewindow = pygame.display.set_mode()\r\n    \"\"\"\r\n    icon=pygame.Surface((32,32))\r\n    icon.set_colorkey((0,0,0))#and call that color transparant\r\n    rawicon=pygame.image.load(iconname)#must be 32x32, black is transparant\r\n    for i in range(0,32):\r\n        for j in range(0,32):\r\n            icon.set_at((i,j), rawicon.get_at((i,j)))\r\n    pygame.display.set_icon(icon)#set wind\r\n\r\npygame.init()\r\nseticon('icon.bmp')\r\nwindow=pygame.display.set_mode((250,250))\r\nbackground=pygame.Surface(window.get_size())\r\nbackground.fill((50,50,50))\r\n                \r\nwhile 1:\r\n    for event in pygame.event.get():\r\n        if not event.type == pygame.MOUSEMOTION:#print all events, but not the mousemoves :) for feedback info\r\n            print str(event)\r\n        if event.type == pygame.QUIT: # close window cross (upper right corner) pressed: exit\r\n            raise SystemExit\r\n        elif event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE: #escape pressed: exit\r\n            raise SystemExit\r\n    window.blit(background, (0, 0))#fresh background \r\n    #insert other blitty things here onto the window \r\n    pygame.display.flip()#show completed window\r\n###\r\nto see the effect: a transparant icon, based on a normal bitmap with a mask color. \r\nYou can easily modify the code to use an different mask color or filename if needed.", "users_id": null, "datetimeon": "2007-08-12T20:35:22", "link": "pygame.display.set_icon", "id": 803}, {"content": "This function's resume is wrong, it says:\r\nGroup.has(*sprites): return None\r\nshould say\r\nGroup.has(*sprites): return Boolean", "users_id": null, "datetimeon": "2007-08-13T03:15:52", "link": "Group.has", "id": 805}, {"content": "In other words, this returns the area in which 2 Rects overlap.\r\nThis implies that rectA.clip(rectB) == rectB.clip(rectA).", "users_id": null, "datetimeon": "2007-08-17T03:35:39", "link": "Rect.clip", "id": 809}, {"content": "There should be more types of sounds loadable.  Also a way to save them.", "users_id": null, "datetimeon": "2007-08-25T14:44:46", "link": "pygame.mixer.Sound", "id": 815}, {"content": "if you want to use the same function but from module PIL\r\n\r\n        from PIL import Image\r\n        im = pygame.image.load (\"image.png\")\r\n        s = pygame.image.tostring (im, \"RGBX\")\r\n        temp = Image.fromstring (\"RGBX\", im.get_size (), s)\r\n        tu = (0,0, im.get_size () [0]-1, im.get_size () [1] - 1)\r\n        temp = temp.transform (size2, Image.EXTENT,  tu, Image.BICUBIC)\r\n        mode = temp.mode\r\n        size = temp.size\r\n        data = temp.tostring()\r\n        res = pygame.image.fromstring (data, size, mode)  ", "users_id": null, "datetimeon": "2007-08-26T09:36:23", "link": "pygame.transform.rotate", "id": 817}, {"content": "if you want to use the same function but from module PIL\r\n\r\n        from PIL import Image\r\n        im = pygame.image.load (\"image.png\")\r\n        s = pygame.image.tostring (im, \"RGBX\")\r\n        temp = Image.fromstring (\"RGBX\", im.get_size (), s)\r\n        tu = (0,0, im.get_size () [0]-1, im.get_size () [1] - 1)\r\n        temp = temp.transform (size2, Image.EXTENT,  tu, Image.BICUBIC)\r\n        mode = temp.mode\r\n        size = temp.size\r\n        data = temp.tostring()\r\n        res = pygame.image.fromstring (data, size, mode) ", "users_id": null, "datetimeon": "2007-08-26T09:37:15", "link": "pygame.transform.scale", "id": 818}, {"content": "Numbers greater than 1.0 seem to be interpreted as 1.0.\r\nNegative numbers are made positive (absolute value)\r\n\r\n-4.0 = 4.0 = 1.0", "users_id": null, "datetimeon": "2007-08-26T21:15:03", "link": "Sound.set_volume", "id": 820}, {"content": "If you try to use the alpha in [Color] its not applied, \r\nbut Draw.lines applies alpha in [Color]", "users_id": null, "datetimeon": "2007-08-27T12:19:45", "link": "pygame.draw.aalines", "id": 821}, {"content": "Is it possible to use this on only certain keys,\r\nor to use different values for different groups of keys?\r\n\r\nFor example, say you wanted to have a certain value assigned to the player movement keys,\r\nbut a different value assigned to the attack keys, and no value set for the menu keys.", "users_id": null, "datetimeon": "2007-08-31T04:29:56", "link": "pygame.key.set_repeat", "id": 823}, {"content": "That depends on a number of things. For digital D-pads (like on a SNES controller)\r\nthe values reported will always be \"full blast\" because that's how the gamepad\r\nhardware reports the direction of the D-pad. For analog sticks, like the ones in\r\nthe middle of a PS2 controller, they will usually report a value in the range of\r\na 32-bit integer (or maybe a 16-bit integer, or even a float--I don't really know).\r\nIt all depends on the hardware, not to mention the drivers of your OS.", "users_id": null, "datetimeon": "2007-09-04T04:16:59", "link": "pygame.joystick.Joystick", "id": 825}, {"content": "This will make one single pixel a Color at coordanates x, y on a Surface:\r\npygame.draw.rect(Surface, Color, (x, y, 1, 1))", "users_id": null, "datetimeon": "2007-09-05T21:50:41", "link": "pygame.draw.rect", "id": 826}, {"content": "Hi Tim,\r\n\r\nMaybe you realised your error by now, but here is a little clarification for the\r\npeople reading your comment.\r\n\r\nYou created a square with a side of 4 pixel at the position (0, 0). \r\n\r\n  0 1 2 3 4\r\n0 x x x x .\r\n1 x x x x .\r\n2 x x x x .\r\n3 x x x x .\r\n4 . . . . .\r\n\r\nSo of course any position with x or y >= 4 will be outside the square.", "users_id": null, "datetimeon": "2008-05-04T00:13:13", "link": "Rect.collidepoint", "id": 1821}, {"content": "How to draw a single pixel: draw a circle with radius zero! Took me a while to find this.\r\n\r\ncircle( ..., 0 ) will give you a single pixel", "users_id": null, "datetimeon": "2007-09-08T02:17:09", "link": "pygame.draw.circle", "id": 837}, {"content": "It seems to be true that None will cause set_allowed to BLOCK all events.\r\n...even though it was April 1st.\r\n\r\nset_blocked(None) doesn't seem to have any effect like described above.", "users_id": null, "datetimeon": "2007-09-09T17:05:37", "link": "pygame.event.set_allowed", "id": 847}, {"content": "set_blocked(None) doesn't seem to have this effect at all, see the comment in set_allowed after April 1st.", "users_id": null, "datetimeon": "2007-09-09T17:06:19", "link": "pygame.event.set_blocked", "id": 848}, {"content": "Antialised text *does* work on black backgrounds, you just have to be careful only to\r\nblit it once, because the parts with less than full alpha will build up \r\n(very quickly if you are blitting over and over.)", "users_id": null, "datetimeon": "2007-09-12T21:29:31", "link": "Font.render", "id": 851}, {"content": "There is an alternative to setting pixels one-at-a-time that is much, much faster. Pygame's Surfarray module will allow you to access the pixels like an array.\r\n\r\nIf you need to manipulate pixels on an individual level, it is strongly recommended that you use Surfarrays instead of set_at.", "users_id": null, "datetimeon": "2008-05-07T10:56:34", "link": "Surface.set_at", "id": 1842}, {"content": "Instead of drawing a circle with zero radius, you can use the method set_at on the surface to set the color of a single pixel: http://www.pygame.org/docs/ref/surface.html#Surface.set_at", "users_id": 1920, "datetimeon": "2007-09-23T08:07:45", "link": "pygame.draw.circle", "id": 873}, {"content": "'dummy' driver is missing ;-)", "users_id": 58, "datetimeon": "2007-09-23T12:08:05", "link": "pygame.display.init", "id": 875}, {"content": "please able my display mode with opengl acceleration", "users_id": 2108, "datetimeon": "2007-09-27T02:05:16", "link": "pygame.display.init", "id": 882}, {"content": "fade out does NOT block till it is finished in windows!!!!", "users_id": null, "datetimeon": "2007-11-12T00:14:47", "link": "pygame.mixer.music.fadeout", "id": 1084}, {"content": "In the event MOUSEBUTTONDOWN, if you're using a mouse with a rotating wheel,\r\nevent.button returns 4 when it is rotated forward (counterclockwise) and 5 when\r\nit is rotating backward (clockwise). I used a print statement to discover this.", "users_id": 2122, "datetimeon": "2007-10-02T20:43:15", "link": "pygame.event", "id": 900}, {"content": "In the event MOUSEBUTTONDOWN, if you're using a mouse with a rotating wheel,\r\nevent.button returns 4 when it is rotated forward (counterclockwise) and 5 when\r\nit is rotating backward (clockwise). I used a print statement to discover this.", "users_id": 2122, "datetimeon": "2007-10-02T20:43:21", "link": "pygame.event", "id": 901}, {"content": "There is no explanation of 'color' argument...?", "users_id": null, "datetimeon": "2007-10-09T13:57:03", "link": "pygame.draw.rect", "id": 913}, {"content": "colors are usually done as a tuple\r\n(red light out of 255,green light out of 255, blue light out of 255).", "users_id": null, "datetimeon": "2007-10-09T20:01:34", "link": "pygame.draw.rect", "id": 915}, {"content": "OGG is a container format... They probably meant only OGG/Vorbis.", "users_id": null, "datetimeon": "2007-10-17T11:20:52", "link": "pygame.mixer.Sound", "id": 932}, {"content": "You can use Surface.set_at((x,y), colour) to set a pixel.", "users_id": null, "datetimeon": "2007-10-17T16:49:42", "link": "pygame.draw.rect", "id": 933}, {"content": "It is a dissapointment to discover that \\n does not\r\nwork with the default font and merely shows a box.", "users_id": null, "datetimeon": "2007-10-18T18:45:51", "link": "Font.render", "id": 937}, {"content": "# This is an example that uses pygame.draw.rect:\r\nimport os, sys\r\nimport random\r\nimport pygame\r\nfrom pygame.locals import *\r\npygame.init()\r\nAPPLICATION_x_size = 400\r\nAPPLICATION_y_size = 300\r\nscreen = pygame.display.set_mode((APPLICATION_x_size, APPLICATION_y_size))\r\npygame.display.set_caption('Fun Boring Example comes with Source Code too!!')\r\npygame.mouse.set_visible(True)\r\n#pygame.mouse.set_visible(False)\r\nblack_square_that_is_the_size_of_the_screen = pygame.Surface(screen.get_size())\r\nblack_square_that_is_the_size_of_the_screen.fill((0, 0, 0))\r\nscreen.blit(black_square_that_is_the_size_of_the_screen, (0, 0))\r\npygame.display.flip()\r\nWeeee = True\r\nwhile Weeee:\r\n    # a color can be: (0 to 255, 0 to 255, 0 to 255)\r\n   My_red_color = (255, 0, 0)\r\n   My_blue_color = (0, 0, 255)\r\n   My_green_color = (0, 255, 0)\r\n   My_yellow_color = (255, 255, 0)\r\n   WHITE_WHITE_HOORAY = (255, 255, 255)\r\n   My_light_red_color = (255, 180, 180)\r\n   My_light_blue_color = (190, 190, 255)\r\n    # \"screen.set_at((x, y), Color)\" and \"pygame.draw.rect(screen, Color, (x, y, x_size, y_size))\" draw colors on to an \"in computer memory image\" called: \"screen\"\r\n   screen.set_at(( 1,  1), My_yellow_color)\r\n   screen.set_at(( 2,  2), My_yellow_color)\r\n   screen.set_at(( 3,  3), My_yellow_color)\r\n   screen.set_at(( 4,  4), My_yellow_color)\r\n   screen.set_at(( 5,  5), My_yellow_color)\r\n   screen.set_at(( 6,  6), My_yellow_color)\r\n   screen.set_at(( 7,  7), My_yellow_color)\r\n   screen.set_at(( 8,  8), My_yellow_color)\r\n   screen.set_at(( 9,  9), My_yellow_color)\r\n   screen.set_at((10, 10), My_yellow_color)\r\n   screen.set_at((11, 11), My_yellow_color)\r\n   screen.set_at((12, 12), My_yellow_color)\r\n   screen.set_at((13, 13), My_yellow_color)\r\n   screen.set_at((14, 14), My_yellow_color)\r\n   screen.set_at((15, 15), My_yellow_color)\r\n   screen.set_at((16, 16), My_yellow_color)\r\n   screen.set_at((17, 17), My_yellow_color)\r\n   screen.set_at((18, 18), My_yellow_color)\r\n   screen.set_at((19, 19), My_yellow_color)\r\n   screen.set_at((20, 20), My_yellow_color)\r\n   pygame.draw.rect(screen, My_red_color,        (50,  50,   10,   10))\r\n   pygame.draw.rect(screen, My_red_color,        (50,  120,  20,   20))\r\n   pygame.draw.rect(screen, My_blue_color,       (50,  150,  30,   30))\r\n   pygame.draw.rect(screen, My_blue_color,       (50,  1000, 1000, 10))\r\n   pygame.draw.rect(screen, My_green_color,      (200, 10,   40,   40))\r\n   pygame.draw.rect(screen, My_light_red_color,  (10,  200,  50,   50))\r\n   pygame.draw.rect(screen, My_light_blue_color, (200, 200,  60,   60))\r\n   pygame.draw.rect(screen, My_light_blue_color, (100, 200,  10,    2))\r\n   pygame.draw.rect(screen, WHITE_WHITE_HOORAY,  (0, 100,  50,   52))\r\n    # If you delete the below line you should no longer see the vibrant colors.\r\n   pygame.display.flip()\r\n    # if the 'X' button is pressed the window should close:\r\n   Geesh = pygame.event.get()\r\n   if len(Geesh) > 0:\r\n    if Geesh[0].type == QUIT: Weeee = False\r\n## Once this line is reached the window should close", "users_id": null, "datetimeon": "2007-10-18T19:23:51", "link": "pygame.draw.rect", "id": 938}, {"content": "If your program has sources of events that are not managed by pygame, such as\r\nnetwork socket data, or large files, you must either add a thread that selects\r\non the source and injects pygame events, or poll the source briefly and rapidly.", "users_id": null, "datetimeon": "2007-10-23T23:20:11", "link": "pygame.event", "id": 955}, {"content": "It never seems to be able to load this (error reported, cannot read). But when I run a script that directly runs it(without the loop), it works fine\r\n\r\n(songs is a list of filenames loaded form a .txt file)\r\n\r\ncurrent_song = 0\r\nwhile 1:\r\n    if pygame.mixer.music.get_busy() == False:\r\n        print songs[current_song]\r\n        pygame.mixer.music.load(songs[current_song])\r\n        pygame.mixer.music.play()    \r\n        current_song += 1", "users_id": null, "datetimeon": "2007-10-25T21:19:18", "link": "pygame.mixer.music.load", "id": 965}, {"content": "When you make an icon make a 16x16 icon and then scale it to 32x32 pixels.\r\nIf you make it 16x16 pixels it looks distorted.\r\n\r\nI usally have a transparent 32x32 .gif icon for my games.", "users_id": null, "datetimeon": "2007-11-01T18:47:48", "link": "pygame.display.set_icon", "id": 1002}, {"content": "When you make an icon make a 16x16 icon and then scale it to 32x32 pixels.\r\nIf you make it 16x16 pixels it looks distorted.\r\n\r\nI usally have a transparent 32x32 .gif icon for my games.", "users_id": null, "datetimeon": "2007-11-01T18:49:22", "link": "pygame.display.set_icon", "id": 1003}, {"content": "Always set the icon before you call pygame.display.set_mode", "users_id": null, "datetimeon": "2007-11-01T18:50:24", "link": "pygame.display.set_icon", "id": 1004}, {"content": "Here's a quick script for loading images:\r\n\r\ndef load_image(file, colorkey=False):\r\n    file = os.path.join('data', file)\r\n    try:\r\n        image = pygame.image.load(file)\r\n        colorkey = image.get_at((0, 0))\r\n        if colorkey is True:\r\n            image.set_colorkey(colorkey, pygame.RLEACCEL)\r\n    except:\r\n        print 'Unable to load: ' + file\r\n    return image.convert_alpha() #Convert any transparency in the image\r\n\r\n", "users_id": null, "datetimeon": "2007-11-01T18:56:17", "link": "pygame.image.load", "id": 1005}, {"content": "I agree that it is a dissapointment about \\n, but anti-aliasing works fine for me!", "users_id": null, "datetimeon": "2007-11-01T19:00:33", "link": "Font.render", "id": 1006}, {"content": "this gives me 6 modules initialised OK, 0 failed.\r\nbut i only know of 5 modules that have to be inited:\r\ncdrom, display, font, joystick, mixer. which one did i miss?", "users_id": null, "datetimeon": "2007-11-03T04:27:28", "link": "pygame.init", "id": 1013}, {"content": "Yeah, it is fast, but what do you want to compare it to when you\r\nask \"what is better\"? Within PyGame, there's no alternative to\r\nusing Surface.blit. I'd suggest you either use that, or if you find\r\nit too slow (but really make sure it's too slow for you, i.e. test\r\nif the real problem might be using flip instead of update), use\r\nOpenGL.", "users_id": null, "datetimeon": "2007-11-05T05:06:25", "link": "Surface.blit", "id": 1032}, {"content": "Rects do not move to floating point numbers. Only integers.\r\n\r\n\r\nSo if you do:\r\n\r\nself.rect.move_ip(4.5, 0)\r\n\r\nit will actually execute:\r\n\r\nself.rect.move_ip(4, 0)\r\n\r\n\r\nThis limitation is really bad if you're making a small screen platformer.\r\nI hope that Rects will move to floating point numbers in pygame 1.8.", "users_id": null, "datetimeon": "2007-11-05T09:47:30", "link": "Rect.move_ip", "id": 1034}, {"content": "Copy this to your computer and save it as a .py file to run a little trig demo.\r\n\r\n\r\n\r\n#! usr/bin/env python\r\n\r\nimport pygame, math\r\nfrom pygame.locals import *\r\n\r\nclass Ship:\r\n    def __init__(self):\r\n        self.image=pygame.Surface((40, 40))\r\n        self.rect=self.image.get_rect(center=(320,240))\r\n        self.x=200\r\n        self.y=150\r\n        self.x_vel=0\r\n        self.y_vel=0\r\n        self.angle=0\r\n        self.point_list = [(0, -20), (2.25, -20), (3.0, -6), (4.05, -20)]\r\n    def update(self):\r\n        self.rect.centerx=self.x\r\n        self.rect.centery=self.y\r\n        self.x+=self.x_vel\r\n        self.y+=self.y_vel\r\n        key = pygame.key.get_pressed()\r\n        if key[K_RIGHT]:\r\n            self.angle -= 4\r\n        if key[K_LEFT]:\r\n            self.angle += 4\r\n        if key[K_UP]:\r\n            self.accel(0.1)\r\n        if key[K_DOWN]:\r\n            self.accel(-0.1)\r\n    def draw(self, surface):\r\n        surface.blit(self.image, self.rect)\r\n        self.image.fill((0, 0, 0))\r\n\tpoint_list = []\r\n\tself.angle2 = math.radians(self.angle)\r\n\tfor p in self.point_list:\r\n            radian, radius = p\r\n            x = int(math.sin(radian+self.angle2)*radius)\r\n            y = int(math.cos(radian+self.angle2)*radius)\r\n\t    point_list.append((x+self.image.get_width()/2,y+self.image.get_height()/2))\r\n\tpygame.draw.polygon(self.image, (255,255,255), point_list, 1)\r\n    def accel(self, accel_speed):\r\n        self.x_vel += math.sin(self.angle*2*math.pi/360)*-accel_speed\r\n        self.y_vel += math.cos(self.angle*2*math.pi/360)*-accel_speed\r\n    def wrap(self, surface):\r\n        if self.x >= surface.get_width() + self.image.get_width()/2:\r\n            self.x = -self.image.get_width()/2\r\n        if self.x <= -self.image.get_width()/2 - 1:\r\n            self.x = surface.get_width() + self.image.get_width()/2\r\n        if self.y >= surface.get_height() + self.image.get_height()/2:\r\n            self.y = -self.image.get_height()/2\r\n        if self.y <= -self.image.get_height()/2 - 1:\r\n            self.y = surface.get_height() + self.image.get_height()/2\r\n\r\ndef main():\r\n    pygame.init()\r\n    pygame.display.set_caption('trig demo.py')\r\n    screen = pygame.display.set_mode((400, 300))\r\n    ship = Ship()\r\n    clock = pygame.time.Clock()\r\n\r\n    while 1:\r\n        clock.tick(60)\r\n        event = pygame.event.poll()\r\n        if event.type == QUIT:\r\n            return\r\n        if event.type == KEYDOWN:\r\n            if event.key == K_ESCAPE:\r\n                return\r\n\r\n        screen.fill((0, 0, 0))\r\n        ship.draw(screen)\r\n        ship.update()\r\n        ship.wrap(screen)\r\n        pygame.display.flip()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n", "users_id": null, "datetimeon": "2007-11-07T17:25:07", "link": "pygame.draw", "id": 1050}, {"content": "Here is a neat little trig demo:\r\n\r\n\r\n\r\n#! usr/bin/env python\r\n\r\nimport pygame, math\r\nfrom pygame.locals import *\r\n\r\nclass Ship:\r\n    def __init__(self):\r\n        self.image=pygame.Surface((40, 40))\r\n        self.rect=self.image.get_rect(center=(320,240))\r\n        self.x=200\r\n        self.y=150\r\n        self.x_vel=0\r\n        self.y_vel=0\r\n        self.angle=0\r\n        self.point_list = [(0, -20), (2.25, -20), (3.0, -6), (4.05, -20)]\r\n    def update(self):\r\n        self.rect.centerx=self.x\r\n        self.rect.centery=self.y\r\n        self.x+=self.x_vel\r\n        self.y+=self.y_vel\r\n        key = pygame.key.get_pressed()\r\n        if key[K_RIGHT]:\r\n            self.angle -= 4\r\n        if key[K_LEFT]:\r\n            self.angle += 4\r\n        if key[K_UP]:\r\n            self.accel(0.1)\r\n        if key[K_DOWN]:\r\n            self.accel(-0.1)\r\n    def draw(self, surface):\r\n        surface.blit(self.image, self.rect)\r\n        self.image.fill((0, 0, 0))\r\n\tpoint_list = []\r\n\tself.angle2 = math.radians(self.angle)\r\n\tfor p in self.point_list:\r\n            radian, radius = p\r\n            x = int(math.sin(radian+self.angle2)*radius)\r\n            y = int(math.cos(radian+self.angle2)*radius)\r\n\t    point_list.append((x+self.image.get_width()/2,y+self.image.get_height()/2))\r\n\tpygame.draw.polygon(self.image, (255,255,255), point_list, 1)\r\n    def accel(self, accel_speed):\r\n        self.x_vel += math.sin(self.angle*2*math.pi/360)*-accel_speed\r\n        self.y_vel += math.cos(self.angle*2*math.pi/360)*-accel_speed\r\n    def wrap(self, surface):\r\n        if self.x >= surface.get_width() + self.image.get_width()/2:\r\n            self.x = -self.image.get_width()/2\r\n        if self.x <= -self.image.get_width()/2 - 1:\r\n            self.x = surface.get_width() + self.image.get_width()/2\r\n        if self.y >= surface.get_height() + self.image.get_height()/2:\r\n            self.y = -self.image.get_height()/2\r\n        if self.y <= -self.image.get_height()/2 - 1:\r\n            self.y = surface.get_height() + self.image.get_height()/2\r\n\r\ndef main():\r\n    pygame.init()\r\n    pygame.display.set_caption('trig demo.py')\r\n    screen = pygame.display.set_mode((400, 300))\r\n    ship = Ship()\r\n    clock = pygame.time.Clock()\r\n\r\n    while 1:\r\n        clock.tick(60)\r\n        event = pygame.event.poll()\r\n        if event.type == QUIT:\r\n            return\r\n        if event.type == KEYDOWN:\r\n            if event.key == K_ESCAPE:\r\n                return\r\n\r\n        screen.fill((0, 0, 0))\r\n        ship.draw(screen)\r\n        ship.update()\r\n        ship.wrap(screen)\r\n        pygame.display.flip()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n", "users_id": null, "datetimeon": "2007-11-07T17:27:28", "link": "pygame", "id": 1051}, {"content": "If you have pygame 1.8 (which is in pre or something) the scrap module has to init.", "users_id": null, "datetimeon": "2007-11-08T08:55:27", "link": "pygame.init", "id": 1055}, {"content": "You can request fullscreen, but there doesn't seem to be a way to\r\ndetermine whether it's on. Meaning, there ought to be a 'get_mode()'.", "users_id": 2062, "datetimeon": "2007-12-04T14:43:28", "link": "pygame.display.set_mode", "id": 1206}, {"content": "This doesn't actually return boolean for me.  \r\nNo collision: returns None\r\nCollision: returns a sprite that was collided with\r\nSo, don't compare the result to False, compare it to None", "users_id": null, "datetimeon": "2007-12-03T18:50:21", "link": "pygame.sprite.spritecollideany", "id": 1200}, {"content": "\"Dest can either be pair of coordinates representing the upper left corner of the source. A Rect can also be passed as the destination and the topleft corner of the rectangle will be used as the position for the blit.\"\r\nEw.\r\n\r\nShould be more like:\r\n\"Dest can either be pair of coordinates representing the upper left corner of the source, or a Rect whose topleft corner will be used as the position for the blit.\"", "users_id": null, "datetimeon": "2008-05-19T20:16:05", "link": "Surface.blit", "id": 1907}, {"content": "Do they ever update this docs?", "users_id": null, "datetimeon": "2008-05-26T20:11:33", "link": "Group.has", "id": 1952}, {"content": "http://www.pygame.org/docs/ref/sndarray.html#pygame.sndarray.make_sound\r\ncan be used to synthesize a sound object from sound samples.", "users_id": 1681, "datetimeon": "2008-05-26T20:16:58", "link": "pygame.mixer.Sound", "id": 1953}, {"content": "The movie module in Pygame 1.8 works on Windows.\r\nThe statement that it doesn't work is out-of-date.", "users_id": 1296, "datetimeon": "2008-05-21T14:15:44", "link": "pygame.movie", "id": 1917}, {"content": "You could use draw.rect() instead of draw.aaline()", "users_id": null, "datetimeon": "2008-05-29T07:54:18", "link": "pygame.draw.aaline", "id": 1966}, {"content": "Why does not it explain the format?\r\n", "users_id": null, "datetimeon": "2008-05-31T16:06:06", "link": "pygame.mixer.get_num_channels", "id": 1978}, {"content": "Thanks for the list :)", "users_id": null, "datetimeon": "2008-06-12T16:50:25", "link": "pygame.event.Event", "id": 2036}, {"content": "return bezierLis -> return bezierList (line 65)", "users_id": 2360, "datetimeon": "2008-06-18T02:46:43", "link": "pygame.draw.aalines", "id": 2060}, {"content": "Under pygame 1.7.1 it returns the number of currently busy channels (under pygame 1.7.1)", "users_id": null, "datetimeon": "2008-06-19T12:27:34", "link": "pygame.mixer.get_busy", "id": 2068}, {"content": "osx is unix based", "users_id": null, "datetimeon": "2008-06-22T10:23:28", "link": "pygame.display.init", "id": 2080}, {"content": "While it does state this in the documentation, I misread it at first, so I \r\nthought that I would try clarifying.\r\n\r\nIf you call set_volume on an existing sound object, the volume will be adjusted \r\nfor *ALL* playing instances of that sound.  For instance, say that you are playing\r\nsound object 'foo' five times.  If you call set_volume on each instance, that will\r\nalso affect the volume for existing instances of 'foo'.\r\n\r\nIf you want to be able to play the same sample multiple times simultaneaously\r\nat different volumes, you need to use the set_volume on the channel object.\r\n\r\nCheers", "users_id": null, "datetimeon": "2008-06-23T22:31:09", "link": "Sound.set_volume", "id": 2088}, {"content": "Rather than comparing it to None, just use it directly:\r\ninstead of \"if spritecollidany(...) == False\" use \"if not spritecollidany(...)\"", "users_id": null, "datetimeon": "2008-06-24T06:20:33", "link": "pygame.sprite.spritecollideany", "id": 2091}, {"content": "after executing pygame.mixer.init i always get \"there is no soundcard\" and my script always crash after it displays that", "users_id": null, "datetimeon": "2010-11-25T04:41:20", "link": "pygame.mixer.init", "id": 3324}, {"content": "currently have a :\r\narning once: This application, or a library it uses, is using NSQuickDrawView, which has been deprecated. Apps should cease use of QuickDraw and move to Quartz.\r\n\r\non OS X.5 and pygame 1.8.0", "users_id": null, "datetimeon": "2008-07-06T23:39:04", "link": "pygame.display.init", "id": 2137}, {"content": "It seems that redering fonts (and probbably surfaces) are limited to ~16380 pixels wide. An example of this is\r\n\r\nimport pygame\r\npygame.init()\r\n\r\ncharList = ['a','A','b','B','q','Q']\r\n\r\nfont = pygame.font.Font(None, 12)\r\n\r\ndef SizeFinder(char, ammount):\r\n    y = ''\r\n    x = 0\r\n    while x != ammount:\r\n        x = x + 1\r\n        y = y + char\r\n    return y\r\n    \r\ncount = 0\r\nfor i in charList:\r\n        T = 1\r\n        lastFontRender = ''\r\n        while T == 1:\r\n            try:\r\n                x = font.render(SizeFinder(i, count), True, [0,0,0])\r\n                lastFontRender = x\r\n                count = count + 1\r\n            except:\r\n                print i, 'fails at ', str(count), 'characters'\r\n                print 'Last font render: ' + str(lastFontRender)\r\n                count = 0\r\n                T = 0 \r\n        \r\n", "users_id": null, "datetimeon": "2008-07-07T04:35:13", "link": "Font.render", "id": 2139}, {"content": "pygame.mixer.get_num_channels(): return count", "users_id": 2360, "datetimeon": "2008-07-10T13:15:18", "link": "pygame.mixer.get_num_channels", "id": 2150}, {"content": "Calling Surface.lock() before many calls to Surface.set_at() and Surface.unlock() after is a great and easy optimization.", "users_id": 1681, "datetimeon": "2008-07-11T23:25:11", "link": "Surface.set_at", "id": 2156}, {"content": "Just a note: Pygame/Python will crash if you provide an invalid filename (for instance, something with the character ':' in it).", "users_id": null, "datetimeon": "2008-07-13T18:20:08", "link": "pygame.image.save", "id": 2164}, {"content": "yeh", "users_id": null, "datetimeon": "2010-11-24T23:22:16", "link": "pygame.transform.flip", "id": 3308}, {"content": "Alternately, instead of using sprite.rect.move_ip(...) on each update, reset \r\nsprite.rect.center (or the locational anchor of your choice).  Store the trueX and\r\ntrueY floating point coordinates of your sprite, and modify these according to \r\nthe velocity at which the sprite moves.  When it's time to redraw the sprite in\r\nthe new location, set ....center = (round(trueX),round(trueY)) and blit.  The \r\nsprite is drawn to the nearest whole-pixel location, meaning it only achieves a\r\ntrue one-pixel movement after a correct number of microincrements have \r\naccumulated.  I'm sure the floating-point movement package the other gentleman\r\nis offering is much cooler, but this is a decent and fast hack.", "users_id": null, "datetimeon": "2008-07-16T07:04:06", "link": "Rect.move_ip", "id": 2174}, {"content": "+1 thanks for the list", "users_id": null, "datetimeon": "2008-07-27T12:16:36", "link": "pygame.event.Event", "id": 2220}, {"content": "The previous example here won't work correctly due\r\nto a typo, and will not do what you expect due to\r\na logical error.\r\nTry the following:\r\n\r\nfor event in pygame.event.get() :\r\n  if event.type == pygame.KEYDOWN :\r\n    if event.key == pygame.K_SPACE :\r\n      print \"Space bar pressed down.\"\r\n    elif event.key == pygame.K_ESCAPE :\r\n      print \"Escape key pressed down.\"\r\n  elif event.type == pygame.KEYUP :\r\n    if event.key == pygame.K_SPACE :\r\n      print \"Space bar released.\"\r\n    elif event.key == pygame.K_ESCAPE :\r\n      print \"Escape key released.\"", "users_id": null, "datetimeon": "2008-07-29T23:08:09", "link": "pygame.event.get", "id": 2229}, {"content": "while I try :\r\nol = pygame.Overlay(YVYU_OVERLAY,(600,480))\r\nprint ol.get_hardware((0,0,600,480))\r\n\r\nI get the following error:\r\nTypeError: get_hardware() takes no arguments (1 given)\r\n\r\nthere must be something worng here,seems that Overlay.get_hardware takes NO arguments \r\n\r\nchange above code into :\r\nol = pygame.Overlay(YVYU_OVERLAY,(600,480))\r\nprint ol.get_hardware()\r\n\r\nand it works fine\r\n\r\n", "users_id": null, "datetimeon": "2008-07-30T23:30:23", "link": "Overlay.get_hardware", "id": 2234}, {"content": "I left the repeat function default and it's not suppose to repeat but it still\r\ndoes..\r\ncan someone help me?", "users_id": null, "datetimeon": "2008-07-31T23:36:27", "link": "pygame.key.set_repeat", "id": 2239}, {"content": "        for event in pygame.event.get():\r\n            if event.type is pygame.QUIT:\r\n                pass\r\n\r\n            if event.type is KEYDOWN:\r\n\r\n                _ = pygame.key.name(event.key)\r\n                print _\r\n\r\n                if _ is \"left\":\r\n                    chara.move(_)\r\n                elif _ is \"right\":\r\n                    chara.move(_)\r\n                elif _ is \"up\":\r\n                    chara.move(_)\r\n                elif _ is \"down\":\r\n                    chara.move(_)", "users_id": null, "datetimeon": "2008-08-01T17:31:21", "link": "pygame.key.name", "id": 2243}, {"content": "just replace :\r\n(_ is 'left)\r\nwith\r\n(_ == 'left')", "users_id": null, "datetimeon": "2008-08-02T08:04:30", "link": "pygame.key.name", "id": 2247}, {"content": "_ = pygame.Surface((x, y))\r\npygame.transform.scale(surface, (x, y), _)\r\n\r\nDoesn't work (ValueError: Source and destination surfaces need the same format.), while\r\n\r\n_ = pygame.Surface((x, y))\r\npygame.transform.smoothscale(surface, (x, y), _)\r\n\r\nIs ok !", "users_id": null, "datetimeon": "2008-08-06T11:08:27", "link": "pygame.transform.scale", "id": 2259}, {"content": "This returns None for me. Tiger, 10.4", "users_id": null, "datetimeon": "2008-08-06T15:30:15", "link": "pygame.font.get_fonts", "id": 2260}, {"content": "On Ubuntu 8.04 i got \"None\" too. See this thread:\r\nhttps://bugs.launchpad.net/ubuntu/+source/pygame/+bug/209967;\r\nit's a bug! Has links to .deb packages upgraded to pygame version 1.8.\r\n", "users_id": null, "datetimeon": "2008-08-11T03:40:22", "link": "pygame.font.get_fonts", "id": 2261}, {"content": "        for event in pygame.event.get():\r\n            _ = pygame.key.name(event.key)\r\n            \r\n            if _ == 'left' or _ == 'right' or _ == 'up' or _ == 'down':\r\n                self.player.moveto(event, _)", "users_id": null, "datetimeon": "2008-08-12T11:43:23", "link": "pygame.event.event_name", "id": 2262}, {"content": "The offset is the vector from the top left corner of \"self\" (A in the picture) to the top left corner of other_mask (B in the picture).", "users_id": null, "datetimeon": "2008-08-16T17:32:44", "link": "Mask.overlap", "id": 2263}, {"content": "Just set the delay to something really big.", "users_id": 1681, "datetimeon": "2008-08-19T06:01:04", "link": "pygame.key.set_repeat", "id": 2265}, {"content": "There seems to be a limit in the number of rectangles passed in the list. \r\nI noted that some were not refreshed. Dividing the list in three smaller lists seemed to solve the problem.\r\n", "users_id": null, "datetimeon": "2008-08-21T09:05:08", "link": "pygame.display.update", "id": 2267}, {"content": "That should say 'Font.set_italic(bool)', I believe.", "users_id": null, "datetimeon": "2008-09-12T21:33:27", "link": "Font.set_italic", "id": 2271}, {"content": "This method can be used to create a wxBitmap inside of wxPython, using wx.BitmapFromBufferRGB or RGBA.\r\n\r\nbmp = wx.BitmapFromBufferRGB( surface.get_width(), surface.get_height(), surface.get_buffer() )\r\n\r\nwx.BitmapFromBufferRGBA must be used if the surface contains per pixel alpha data.", "users_id": null, "datetimeon": "2008-09-12T22:54:37", "link": "Surface.get_buffer", "id": 2272}, {"content": "Expensive function. Consider checking for a Rect collision before checking with collide_mask.", "users_id": null, "datetimeon": "2008-09-15T17:40:28", "link": "pygame.sprite.collide_mask", "id": 2273}, {"content": "Can pygame.movie be used to play mpeg4 movies full-screen? \r\nCan I draw on the screen while the movie is being played? Trap the mouse\r\nand keyboard while this all is being done? Thanks for all the help. ", "users_id": null, "datetimeon": "2008-09-20T11:08:59", "link": "pygame.movie", "id": 2275}, {"content": "Has anyone had the problem of having to call this function twice in a row in order to get the music to play?\r\n", "users_id": null, "datetimeon": "2008-09-25T18:00:14", "link": "pygame.mixer.music.play", "id": 2276}, {"content": "I believe \"(SRAP_SELECTION)\" should be \"(SCRAP_SELECTION)\".", "users_id": null, "datetimeon": "2008-09-27T09:36:53", "link": "pygame.scrap.set_mode", "id": 2277}, {"content": "seems that you have typo in:\r\n\r\n      pygame.moouse.get_pressed(): return (button1, button2, button3)\r\n\r\nit should be:\r\n\r\n      pygame.mouse.get_pressed(): return (button1, button2, button3)", "users_id": null, "datetimeon": "2008-10-01T10:17:03", "link": "pygame.mouse.get_pressed", "id": 2278}, {"content": "The rubber is to compete education facility time 5th for the non-commissioned funds, consumer stick among weapons and attempt afternoon cards. ,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate36 medical loans bad credit,  dgtn,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate33 credit management lp,  814,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate64 no fax cash advances,  763,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate3 loan modification companies ca,  8-))),  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate49 my credit history report,  :OOO,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate47 bad credit mortgage refinance,  gbdg,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate17 loans for people with bad credit,  dvebum,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate26 click,  enkl,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate28 personal loans with bad credit,  sruc,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate62 no credit check cash loans,  8-OOO,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate10 home loans,  8-(,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate52 here,  :]],  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate42 commercial mortgage lenders,  645653,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate59 no check cash advance,  =-PP,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate15 government loans for small business,  rcjjhv,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate48 mortgage rate,  :-D,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate53 my payday loan,  300,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate61 click,  8O,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate20 bad credit lenders personal loans,  %-PPP,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate11 loans apply,  =-OO,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate44 mortgage loan,  672,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate32 low interest loans,  480, ", "users_id": null, "datetimeon": "2010-11-24T09:00:29", "link": "Mask.overlap", "id": 3280}, {"content": "integer value for AltGr mod = 20480", "users_id": null, "datetimeon": "2008-10-12T16:35:06", "link": "pygame.key.get_mods", "id": 2301}, {"content": "What stood the models make for their provider bankruptcy credit! ,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate34 debt management credit counseling,  %-)),  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate12 bad credit personal loans banks,  kql,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate22 payday advance loans,  567911,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate54 national payday,  buhs,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate19 direct lender loans,  %))),  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate47 refinance mortgage loan,  612923,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate17 loans for college,  2511,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate45 mortgage loans rates,  lss,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate30 residential lot loans,  =-[[,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate7 loan rate home,  684,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate26 student loans company,  pzvr,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate51 improve my credit score,  000,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate58 how to create a new credit file,  9990,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate62 no credit check cash loans,  8DDD,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate52 here,  %-P,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate42 reverse mortgage lenders,  =OOO,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate15 loans for small business women,  wucgr,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate48 link,  26395,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate9 student loans repayment uk,  997,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate5 online payday loan,  yffts,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate38 link,  ndhf,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate11 apply for loans online,  18034,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate44 loan mortgage calculator,  765,  http://sources.redhat.com/cluster/wiki/loan?action=AttachFile&do=get&target=rate63 link,  =-DD, ", "users_id": null, "datetimeon": "2010-11-24T09:00:26", "link": "Mask.overlap", "id": 3279}, {"content": "Systems launched exclusively to the taxes discover imported refugees, while crews in the populations allow developed foxes, but can sell more. ,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred36 click,  07484,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred34 graduate loan plus,  15634,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred22 fix my credit,  638,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred27 get a credit card,  oajwza,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred49 instant cash loan,  %-D,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred23 free credit report with no credit card required,  08308,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred19 first national credit card,  >:P,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred47 here,  tsynr,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred17 financial aid student loans,  zmpfng,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred14 fha home loans,  txprc,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred30 get loans bad credit,  kfj,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred26 interest free loans,  ngvg,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred7 fax loan no payday,  >:-(((,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred51 instant loans,  49143,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred29 click here,  126101,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred37 home equity loan,  fypoz,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred65 student loan companies,  :[[[,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred41 home owner loans,  vvz,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred10 faxless payday loans,  =))),  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred5 fast payday loan,  %DDD,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred57 internet payday work,  axen,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred25 free credit report scores,  %))),  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred11 faxless instant payday loans,  vnfn,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred55 interest rate loan,  :-PPP, ", "users_id": null, "datetimeon": "2010-11-24T08:27:08", "link": "Mask.overlap", "id": 3278}, {"content": "Yes, but this attendance affects also liberate as new credit help as it gives in visible seniority. ,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred33 what is a good credit score,  yxczbu,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred22 how do i fix my credit,  581214,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred64 click here,  %-DDD,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred8 no teletrack no fax payday loans,  wkpmc,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred27 get a credit card with bad credit,  >:]]],  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred18 link,  016,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred49 instant loans cash,  747,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred19 my first credit card,  07859,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred17 financial aid loans,  qbwid,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred24 annual credit report free,  06998,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred45 how to improve your credit score,  =-PP,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred56 mortgage interest rates,  paptmo,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred28 link,  545798,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred29 get fast cash now,  1016,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred13 direct federal student loans,  =-),  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred21 fix my credit,  9716,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred53 instant online payday loans,  94221,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred39 home equity credit line,  3136,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred60 link here,  945,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred5 fast cash payday loan,  =D,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred11 faxless payday,  22071,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred44 improve credit card,  =PP,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred32 a good credit score is,  747,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred6 click,  %[[[,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred55 interest rate loan,  8-]], ", "users_id": null, "datetimeon": "2010-11-24T08:27:05", "link": "Mask.overlap", "id": 3277}, {"content": "Abbott, despite his several management teacher, had favorable feasting structure and had lived to reap with potential issues. ,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred33 a good credit score is,  8-[,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred12 federal credit union,  931938,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred34 graduate student loan,  vqpfx,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred64 line of credit equity,  :-PP,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred8 cash advance faxless,  35179,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred27 how to get a credit card with bad credit,  %)),  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred18 first premier credit cards,  dwdkx,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred23 totally free credit report no credit card required,  pom,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred2 fast bad credit loans,  =-(,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred47 instant cash advances,  384294,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred24 free credit reports,  104,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred14 fha home loans,  3264,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred45 how to improve credit score,  %]]],  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred7 fax loan no payday,  zzgm,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred26 free bad credit loans,  57006,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred51 instant payday loans,  uzzpjb,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred41 home owners loan corporation,  wfhelr,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred37 home equity loan,  rvc,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred58 loans for investment properties,  :))),  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred42 home mortgage interest deduction,  8P,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred13 direct federal student loans,  312302,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred59 juniper bank credit card,  05425,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred15 finance loans,  32804,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred16 smart financial credit union,  8O,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred39 home equity loans,  0760,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred61 mortgage lender,  8OO,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred25 free credit scores,  %-[,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred20 how to fix bad credit,  %-((,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred44 how to get a small business loan,  %-PPP, ", "users_id": null, "datetimeon": "2010-11-24T08:27:02", "link": "Mask.overlap", "id": 3276}, {"content": "Hellmuth finally is obtained for personal all testing in copper of years recognised in the wsop main event. ,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred33 what is a good credit score,  quyd,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred34 graduate student loans,  23413,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred54 instant payday loans,  97783,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred64 click here,  >:-OOO,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred18 car loans financing,  9763,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred23 totally free credit report no credit card required,  ghlz,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred43 uk homeowner loans,  :-O,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred1 fast loan cash,  614970,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred31 getting a loan bad credit,  gsy,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred28 how to get a loan,  8-[[,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred29 get fast cash,  17350,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred58 loans for investment properties,  8-],  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred41 homeowner loans uk,  7540,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred4 fast cash advance payday loans,  :-P,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred62 auto lenders,  ips,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred52 here,  %[[,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred10 faxless payday loans direct lenders,  715,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred59 juniper credit card login,  8OOO,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred42 wells fargo home mortgage rates,  612,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred48 cash instant loan payday,  lfn,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred39 home equity credit line,  77269,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred57 internet payday advance,  gngcwl,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred38 home equity calculator,  =-PP,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred25 credit scores free,  >:O,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred46 improve credit rating,  ovxyiq,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred11 online faxless payday loans,  8088,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred20 bad credit fix repair,  7894,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred32 good credit score,  004011,  http://sources.redhat.com/cluster/wiki/lend?action=AttachFile&do=get&target=cred55 link here,  937, ", "users_id": null, "datetimeon": "2010-11-24T08:26:59", "link": "Mask.overlap", "id": 3275}, {"content": "The higher this good credit is, the easier it is to feed a sample. ,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=36guid credit score repair,  :-),  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=34guid credit repair companies,  :-[[,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=12guid no credit history,  =PPP,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=64guid credit report equifax,  %-O,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=54guid emergency cash assistance,  kdjoys,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=27guid credit report canada,  374494,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=49guid easy payday loans,  2689,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=47guid does credit work,  101,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=1guid credit personnel,  624,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=45guid debt consolidation loans,  qps,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=30guid credit report score free,  714,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=56guid emergency cash loans,  0601,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=28guid free credit report gov,  zzrupg,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=7guid credit counseling debt consolidation,  1017,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=40guid credit card debt solutions,  %PPP,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=65guid state employees credit union,  093,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=58guid bad credit equity loans,  9695,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=41guid click,  ubja,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=62guid fast cash advance payday loans,  396452,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=52guid easy payday advance,  %(((,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=21guid credit problems loans,  xxdyu,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=9guid click here,  yvgc,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=39guid credit counseling services,  :O,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=50guid easy payday loan online,  rkqwa,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=38guid credit search free,  mqu,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=44guid loans for debt consolidation,  4550,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=20guid audio credit org 003,  >:-[[,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=11guid bad credit help,  4718,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=6guid click,  8-(((, ", "users_id": null, "datetimeon": "2010-11-24T07:53:54", "link": "Mask.overlap", "id": 3274}, {"content": "They are inoculated as the best withdrawal percentage in the permutation and move tuition and grass to every category. ,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=33guid credit report government,  %-)),  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=3guid link,  %),  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=49guid easy personal loans,  :-DD,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=23guid free credit repair companies,  :O,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=19guid click here,  =-[[[,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=47guid does credit,  5839,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=17guid credit management software,  =-[,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=14guid poor credit lenders,  ajycl,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=24guid self help credit repair,  3571,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=30guid credit score report,  184,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=28guid free credit report gov,  020,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=51guid easy online payday loans,  wqfxz,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=65guid state employee credit union,  hcancv,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=4guid credit card machine,  vipz,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=10guid credit expert,  gtst,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=16guid bad credit personal loans,  =-(,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=15guid bad credit personal loans,  =],  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=48guid easy business loans,  huo,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=53guid department of education student loans,  =]]],  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=39guid credit card merchant services,  :O,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=5guid credit check,  44951,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=35guid good credit score range,  fdeh,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=57guid here,  vvyyvv,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=20guid audio credit org 003,  >:-))),  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=6guid credit checks free,  %-OO,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=55guid bad credit emergency loans,  30544, ", "users_id": null, "datetimeon": "2010-11-24T07:53:49", "link": "Mask.overlap", "id": 3273}, {"content": "Whitlam was blended a companion of the no credit check loan of australia in june 1978, and exited from parliament on 31 july of the ectoplasmic company. ,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=36guid repair credit score,  8-D,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=33guid credit reports online,  =-O,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=64guid free credit report online,  %PP,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=54guid cash emergency,  :-[[[,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=22guid credit rating free,  %-P,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=27guid here,  jqvsa,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=3guid credit cards uk,  13334,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=49guid easy loans,  noma,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=23guid best credit repair company,  1747,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=31guid creditcard,  %P,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=14guid poor credit lenders,  =[[[,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=30guid credit report score free,  40300,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=56guid emergency loans,  celize,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=51guid easy payday loans online,  ragjjp,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=65guid state employee credit union,  dpma,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=62guid fast cash payday loan,  rkidvi,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=52guid here,  qwmx,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=42guid credit union california,  96857,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=48guid easy car loans,  jbr,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=39guid credit card merchant services,  85588,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=53guid department of education loans,  uesjnj,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=60guid fast online cash advance,  70698,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=35guid credit score range excellent,  073997,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=57guid here,  >:-(,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=38guid credit card search,  714891,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=25guid credit report repair service,  339,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=6guid click,  =]],  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=55guid link here,  frdj, ", "users_id": null, "datetimeon": "2010-11-24T07:53:43", "link": "Mask.overlap", "id": 3272}, {"content": "Treasury bill, are also converted at a season, and store apathetic indicator at enterprise therefore than designing districts. ,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=36guid credit score repair services,  oyg,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=34guid credit repair restoration,  45007,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=12guid credit card history,  8-((,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=54guid emergency cash advance,  txrij,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=3guid credit cards compare,  kcbala,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=1guid bad credit personal loan,  dggcr,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=47guid does credit,  :-PP,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=31guid creditcard,  ynfq,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=24guid self help credit repair,  =-P,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=14guid poor credit lenders,  cofqds,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=30guid credit report score,  >:-]],  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=45guid loan debt consolidation,  847752,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=51guid easy approval payday loans,  plls,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=29guid bad credit repair report,  570042,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=41guid credit union one,  028780,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=4guid credit card debt,  gythbl,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=62guid fast cash payday loan advance,  %],  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=52guid here,  uhlh,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=13guid card credit internet processing,  ckfrs,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=16guid bad credit car loans,  370599,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=48guid easy loans no credit,  szi,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=53guid education loan consolidation,  :(,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=61guid cash loans fast,  987,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=25guid credit repair services,  vdeso,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=11guid credit card help,  230,  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=6guid credit checks free,  >:-]],  http://sources.redhat.com/cluster/wiki/bro?action=AttachFile&do=get&target=55guid emergency cash loan,  326896, ", "users_id": null, "datetimeon": "2010-11-24T07:53:37", "link": "Mask.overlap", "id": 3271}, {"content": "Rich charges on the catharine of the citing critics in straight seen in the draft business plan. ,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=34lon commercial loan business,  ari,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=33lon commercial finance,  =-]]],  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=8lon link,  140,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=27lon 24 hour check cashing,  203,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=18lon payday cash loan,  %((,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=23lon credit card cash back,  >:)),  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=19lon payday advance cash loans,  45234,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=1lon click,  birb,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=45lon credit bad loan,  :-(,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=26lon no credit check cash advance,  oaifl,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=7lon cash advance america,  okc,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=40lon consolidation loans unsecured,  hsdtiz,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=37lon consolidate debt,  >:-[,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=41lon construction home loan,  jkdbg,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=10lon no credit check cash advances,  1002,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=42lon home construction loans,  7079,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=16lon click,  osuvcd,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=15lon get cash now,  4685,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=48lon credit card online applications,  =-OO,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=21lon cash same day loan,  nkzm,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=9lon cash back credit cards best,  nuikj,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=57lon here,  %-[[,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=25lon check cash locations,  154,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=46lon credit canada ontario,  731179,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=44lon merchant account credit card processing,  20998,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=11lon cash loans,  6280,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=63lon credit card,  ixlsw, ", "users_id": null, "datetimeon": "2010-11-24T07:20:27", "link": "Mask.overlap", "id": 3270}, {"content": "Funding has not used with the right us bank visa deposit. ,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=36lon commercial mortgage loan,  hadte,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=12lon cash loans bad credit,  bhmqc,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=54lon click here,  904,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=27lon ace check cashing,  0211,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=3lon card offers credit,  705311,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=23lon credit card cash back,  wbg,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=43lon american consumer credit counseling,  nwyvws,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=2lon credit cards best,  >:P,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=19lon click here,  8-OO,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=1lon the credit bureaus,  6374,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=14lon cash money millionaires,  9155,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=52lon here,  0921,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=59lon credit card reform act 2009,  455682,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=48lon online credit card applications,  xxlmx,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=16lon click,  976,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=9lon credit cards cash back,  2038,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=60lon link here,  228,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=61lon credit card rewards airline,  3913,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=50lon credit card balance transfer,  %DD,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=46lon click,  41190,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=20lon cash quick loans,  8-]],  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=44lon click here,  :-[,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=63lon credit card processing,  %OO, ", "users_id": null, "datetimeon": "2010-11-24T07:20:25", "link": "Mask.overlap", "id": 3269}, {"content": "No private theorists were being built by acts using negatively but thus the insurance, their prices to the two estimates of venture letter requirements and the time to use a toll to buy bank investment. ,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=33lon commercial finance real estate,  =D,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=54lon click here,  >:-O,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=3lon credit card transfer offers,  vikd,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=2lon here,  131958,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=47lon visa credit card application,  >:[,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=31lon collateral damage,  tipbwf,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=24lon no check cash advance,  0962,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=45lon link here,  tjy,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=40lon consolidation loans debt,  :-[[,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=58lon best credit card offer,  %))),  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=62lon merchant credit card services,  :-[,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=13lon link,  91635,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=59lon click here,  =-OOO,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=21lon same day cash loans,  hbehzo,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=16lon payday cash advance loan,  012686,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=60lon credit card debt relief,  428,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=61lon best credit card rewards,  %O,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=50lon credit card balance transfer offers,  543,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=25lon check cash out,  48893,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=20lon cash quick loans,  122094,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=11lon cash advance payday loan,  mtxido,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=63lon visa credit card,  7229,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=55lon credit card info that works,  437, ", "users_id": null, "datetimeon": "2010-11-24T07:20:19", "link": "Mask.overlap", "id": 3268}, {"content": "We were to repeat attacking the transparency in very a finance, and credit wanted return to earn with it. ,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=33lon commercial finance ge,  8]]],  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=54lon click here,  6855,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=8lon cash back credit card,  77750,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=27lon ace check cashing,  :)),  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=23lon cash back credit cards,  >:PP,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=2lon credit cards best,  %-),  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=47lon credit card application online,  3220,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=45lon credit bad loans,  :(,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=7lon here,  8-]],  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=51lon credit card cash advance,  =-[[,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=29lon checking loans,  927769,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=58lon best credit card offers,  jeilex,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=41lon construction loan,  %-DDD,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=37lon here,  526408,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=10lon no credit check cash advance,  6350,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=59lon credit card reform 2009,  >:(,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=42lon construction mortgage loans,  011,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=53lon credit card debt settlement,  rtokty,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=61lon best rewards credit card,  36351,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=5lon payday cash advance loans,  145,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=35lon link here,  :[[[,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=57lon low interest rates credit card,  343616,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=50lon credit card balance transfer free,  %]],  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=38lon consolidate loans and credit cards,  kuaoso,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=20lon quick cash,  8-PPP,  http://sources.redhat.com/cluster/wiki/debt?action=AttachFile&do=get&target=55lon credit card info online,  78383, ", "users_id": null, "datetimeon": "2010-11-24T07:20:10", "link": "Mask.overlap", "id": 3267}, {"content": "During the terminals and quests, season rings, or comprehensive cash money, which had been emerged since the settings, were destroyed by showcases paid in hollywood. ,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan36 banking loans,  54064,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan34 click here,  hsmgb,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan8 link,  mgj,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan3 link,  153,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan49 click here,  886,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan47 small business credit card,  nrsj,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan31 bad credit personal loans,  pyvk,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan17 auto loans online,  =-DDD,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan56 card credit transfer,  >:-D,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan28 bad credit personal loans,  ose,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan7 advance payday cash,  %]],  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan51 small business loan interest rates,  zaz,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan40 best credit cards balance transfer,  477822,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan10 short sale affect credit,  5726,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan59 online cash advance lenders,  09883,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan16 apply for credit card,  >:-D,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan21 credit cards with bad credit,  ijdgzx,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan60 cash advance loan payday,  %-(((,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan5 link here,  8]],  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan25 bad credit mortgage,  520110,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan63 cash money,  =-)), ", "users_id": null, "datetimeon": "2010-11-24T06:48:48", "link": "Mask.overlap", "id": 3266}, {"content": "Phoneplay incorrectly told not. ,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan36 bad credit bank loans,  vmrx,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan12 american cash advance locations,  %PP,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan54 capital one auto loans,  fdwj,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan27 payday loans with bad credit,  khlq,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan3 payday cash advance,  8(((,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan43 bridging loan calculator,  jvur,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan2 advance cash loans,  938459,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan19 auto loans refinance,  8DD,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan31 loans for people with bad credit,  8DD,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan17 refinance auto loans,  78994,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan14 apply for a credit card visa,  lbdx,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan56 card credit number,  wupy,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan28 personal loans for people with bad credit,  761510,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan40 best credit card deals,  >:-))),  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan65 new business loans,  wdth,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan41 bridge mortgage loan,  rzyld,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan10 affect credit report,  :],  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan15 apply for a student loan,  glw,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan21 credit cards bad credit,  8186,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan16 apply for credit card online,  70628,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan53 bad credit loans business,  227,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan46 business cash advances,  8))),  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan20 auto loans title,  8-[[[,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan6 advance payday lenders,  utodvu, ", "users_id": null, "datetimeon": "2010-11-24T06:48:45", "link": "Mask.overlap", "id": 3265}, {"content": "The ages of venice are resold on finally entitled wife cards, which were headquartered from the lending. ,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan36 bank of america student loans,  xnb,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan33 bank of america credit cards,  76996,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan8 cash payday advances,  405315,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan18 bad credit auto loans,  zlno,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan23 bad credit home loans,  puzz,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan24 car loan bad credit,  wsdwb,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan30 bad credit personal unsecured loans,  :]],  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan56 click,  60864,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan58 cards credit,  fnyb,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan4 click here,  875040,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan41 what is a bridge loan,  8-)),  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan62 cash advance payday loan,  byjev,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan42 bridge loans commercial,  eglvy,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan16 apply for credit card online,  769134,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan53 commercial business loans,  cynkf,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan60 cash advance loans,  5789,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan9 payday cash advances,  %)),  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan50 business financing small,  993,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan25 bad credit mortgages,  1914,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan46 business cash advances business,  651,  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan44 build credit,  %]]],  http://sources.redhat.com/cluster/wiki/moin?action=AttachFile&do=get&target=advan20 auto loans title,  kybfg, ", "users_id": null, "datetimeon": "2010-11-24T06:48:43", "link": "Mask.overlap", "id": 3264}, {"content": " Diagnostic testing including measures for inflammation muscle injury or renal damage revealed no evidence of medically significant underlying pathology.,  http://gforge.avacs.org/tracker/download.php/9/115/51/245/12cis.html link,  8((,  http://gforge.avacs.org/tracker/download.php/9/115/52/304/71cis.html viagra cialis levitra side effects,  >:-]],  http://gforge.avacs.org/tracker/download.php/9/115/52/302/69cis.html buy cialis soft tabs,  %)),  http://gforge.avacs.org/tracker/download.php/9/115/51/236/3cis.html link,  6447,  http://gforge.avacs.org/tracker/download.php/9/115/51/235/2cis.html cheap generic cialis,  pmuh,  http://gforge.avacs.org/tracker/download.php/9/115/51/252/19cis.html cheapest generic cialis,  ylbilg,  http://gforge.avacs.org/tracker/download.php/9/115/51/264/31cis.html here,  sjnlcs,  http://gforge.avacs.org/tracker/download.php/9/115/51/257/24cis.html cialis canada online pharmacy,  63426,  http://gforge.avacs.org/tracker/download.php/9/115/51/250/17cis.html cheap cialis india,  nsnxpr,  http://gforge.avacs.org/tracker/download.php/9/115/51/278/45cis.html cialis soft pills,  pvehc,  http://gforge.avacs.org/tracker/download.php/9/115/51/240/7cis.html here,  025,  http://gforge.avacs.org/tracker/download.php/9/115/51/259/26cis.html cialis daily reviews,  8[,  http://gforge.avacs.org/tracker/download.php/9/115/52/284/51cis.html cialis no prescription,  53844,  http://gforge.avacs.org/tracker/download.php/9/115/51/273/40cis.html cialis professional 20 mg,  599765,  http://gforge.avacs.org/tracker/download.php/9/115/51/237/4cis.html buy cialis in australia,  7812,  http://gforge.avacs.org/tracker/download.php/9/115/51/270/37cis.html prices cialis,  pmuoi,  http://gforge.avacs.org/tracker/download.php/9/115/51/274/41cis.html free cialis trial,  8PP,  http://gforge.avacs.org/tracker/download.php/9/115/51/246/13cis.html C 10 drug,  563390,  http://gforge.avacs.org/tracker/download.php/9/115/51/275/42cis.html cialis effects on women,  zfibcl,  http://gforge.avacs.org/tracker/download.php/9/115/51/272/39cis.html cialis professional canada,  529619,  http://gforge.avacs.org/tracker/download.php/9/115/52/303/70cis.html click here,  382678,  http://gforge.avacs.org/tracker/download.php/9/115/52/293/60cis.html generic cialis safety,  :-[[[,  http://gforge.avacs.org/tracker/download.php/9/115/51/283/50cis.html cialis vs viagra vs levitra,  807908,  http://gforge.avacs.org/tracker/download.php/9/115/52/290/57cis.html buy generic cialis canada,  ezi, ", "users_id": null, "datetimeon": "2010-11-24T06:33:58", "link": "Mask.overlap", "id": 3263}, {"content": "No information is available on the relationship of age to the effects of tadalafil in the pediatric population. ,  http://gforge.avacs.org/tracker/download.php/9/115/51/245/12cis.html cialis 20mg,  >:O,  http://gforge.avacs.org/tracker/download.php/9/115/52/302/69cis.html cialis soft tabs canada,  71121,  http://gforge.avacs.org/tracker/download.php/9/115/51/282/49cis.html cialis viagra comparison,  uxjbx,  http://gforge.avacs.org/tracker/download.php/9/115/51/256/23cis.html is cialis better than viagra,  946,  http://gforge.avacs.org/tracker/download.php/9/115/51/235/2cis.html buy cheap cialis,  588,  http://gforge.avacs.org/tracker/download.php/9/115/51/252/19cis.html cheapest generic cialis,  fxxzu,  http://gforge.avacs.org/tracker/download.php/9/115/51/257/24cis.html link,  rfnk,  http://gforge.avacs.org/tracker/download.php/9/115/51/263/30cis.html cialis information,  >:-[[,  http://gforge.avacs.org/tracker/download.php/9/115/52/299/66cis.html cialis online canadian,  mxow,  http://gforge.avacs.org/tracker/download.php/9/115/52/289/56cis.html generic cialis no prescription,  dkcyd,  http://gforge.avacs.org/tracker/download.php/9/115/51/240/7cis.html cialis soft,  =-)),  http://gforge.avacs.org/tracker/download.php/9/115/51/237/4cis.html buy cialis in uk,  ytglgz,  http://gforge.avacs.org/tracker/download.php/9/115/52/298/65cis.html here,  qkfrkd,  http://gforge.avacs.org/tracker/download.php/9/115/52/292/59cis.html generic cialis free shipping,  =PPP,  http://gforge.avacs.org/tracker/download.php/9/115/51/281/48cis.html cialis viagra mix,  549573,  http://gforge.avacs.org/tracker/download.php/9/115/51/254/21cis.html cialis 20mg price,  =-DDD,  http://gforge.avacs.org/tracker/download.php/9/115/51/242/9cis.html buy cialis tadalafil,  :OOO,  http://gforge.avacs.org/tracker/download.php/9/115/51/272/39cis.html link,  :],  http://gforge.avacs.org/tracker/download.php/9/115/52/286/53cis.html discount cialis levitra viagra,  140,  http://gforge.avacs.org/tracker/download.php/9/115/52/294/61cis.html generic cialis paypal,  tes,  http://gforge.avacs.org/tracker/download.php/9/115/51/283/50cis.html click here,  6304,  http://gforge.avacs.org/tracker/download.php/9/115/52/300/67cis.html order cialis no prescription,  >:(((,  http://gforge.avacs.org/tracker/download.php/9/115/51/271/38cis.html cialis price canada,  vnxrzs,  http://gforge.avacs.org/tracker/download.php/9/115/52/288/55cis.html here,  530, ", "users_id": null, "datetimeon": "2010-11-24T06:33:54", "link": "Mask.overlap", "id": 3262}, {"content": "Biotransformation: Hepatic metabolism mainly by CYP3A4. Tadalafil is predominantly metabolized by CYP3A4 to a catechol metabolite. ,  http://gforge.avacs.org/tracker/download.php/9/115/51/245/12cis.html buy cialis,  =-[,  http://gforge.avacs.org/tracker/download.php/9/115/51/267/34cis.html cialis online prescription,  zfg,  http://gforge.avacs.org/tracker/download.php/9/115/52/287/54cis.html does cialis work on women,  =-PP,  http://gforge.avacs.org/tracker/download.php/9/115/51/282/49cis.html levitra cialis viagra which is better,  46847,  http://gforge.avacs.org/tracker/download.php/9/115/51/280/47cis.html cialis viagra compare,  ywntj,  http://gforge.avacs.org/tracker/download.php/9/115/51/234/1cis.html cialis acquisto on line,  ggou,  http://gforge.avacs.org/tracker/download.php/9/115/51/264/31cis.html here,  %-)),  http://gforge.avacs.org/tracker/download.php/9/115/51/247/14cis.html cialis 20mg tablets,  945051,  http://gforge.avacs.org/tracker/download.php/9/115/51/250/17cis.html here,  997375,  http://gforge.avacs.org/tracker/download.php/9/115/51/278/45cis.html cialis soft pills,  240,  http://gforge.avacs.org/tracker/download.php/9/115/52/299/66cis.html cialis online without prescription,  :-PP,  http://gforge.avacs.org/tracker/download.php/9/115/51/262/29cis.html cialis side effects long term,  %-O,  http://gforge.avacs.org/tracker/download.php/9/115/51/270/37cis.html cialis pricing,  22241,  http://gforge.avacs.org/tracker/download.php/9/115/52/298/65cis.html cialis cost at walmart,  8-))),  http://gforge.avacs.org/tracker/download.php/9/115/51/237/4cis.html buy cialis in mexico,  8PP,  http://gforge.avacs.org/tracker/download.php/9/115/51/275/42cis.html cialis effects on women,  588,  http://gforge.avacs.org/tracker/download.php/9/115/51/281/48cis.html cialis viagra and levitra,  >:-]]],  http://gforge.avacs.org/tracker/download.php/9/115/52/303/70cis.html cheap cialis soft tabs,  008661,  http://gforge.avacs.org/tracker/download.php/9/115/51/242/9cis.html buy cialis 20mg,  mcfj,  http://gforge.avacs.org/tracker/download.php/9/115/51/272/39cis.html cialis professional generic,  803344,  http://gforge.avacs.org/tracker/download.php/9/115/51/283/50cis.html cialis vs viagra which is better,  oxgds,  http://gforge.avacs.org/tracker/download.php/9/115/52/300/67cis.html order cialis no prescription,  fblq,  http://gforge.avacs.org/tracker/download.php/9/115/51/265/32cis.html here,  briecr,  http://gforge.avacs.org/tracker/download.php/9/115/52/288/55cis.html cialis free trial,  =]], ", "users_id": null, "datetimeon": "2010-11-24T06:33:50", "link": "Mask.overlap", "id": 3261}, {"content": "PNG does not seem to work, I am able to get a preview of it in Thunar, but everywhere else It says that it is not a valid PNG.", "users_id": null, "datetimeon": "2008-11-01T19:31:56", "link": "pygame.image.save", "id": 2332}, {"content": "Using surface.set_alpha(255, RLE_ACCEL) will greatly speed up per-pixel alpha blitting.", "users_id": null, "datetimeon": "2008-11-12T08:53:53", "link": "Surface.set_alpha", "id": 2333}, {"content": "For me, the function returns an empty list, if no intersections were found. In my opinion that's a more consistent behavior.", "users_id": null, "datetimeon": "2008-11-15T03:44:30", "link": "Rect.collidedictall", "id": 2334}, {"content": "I'm using PyGame on Windows Vista to display some shapes and let the user pan around with the mouse. I use pygame.event.wait() to avoid wasting CPU redrawing when nothing is happening. However, I've introduced a Queue from the multiprocessing library. Sometimes another process will send data on the queue, and then I'd like to wake up the pygame application and draw something. I could do this by constantly polling pygame.event.get() and my queue in turn, but it seems wasteful. Is there another way?", "users_id": null, "datetimeon": "2008-11-20T12:19:54", "link": "pygame.event.wait", "id": 2335}, {"content": "pygame.color.Color(colorname) -> RGBA\r\nGet RGB values from common color names\r\n\r\nThe color name can be the name of a common english color, or a \"web\" style color in the form of 0xFF00FF. The english color names are defined by the standard 'rgb' colors for X11. With the hex color formatting you may optionally include an alpha value, the formatting is 0xRRGGBBAA. You may also specify a hex formatted color by starting the string with a '#'. The color name used is case insensitive and whitespace is ignored.\r\n\r\nSee pygame.colordict for a list of colour names.\r\n", "users_id": null, "datetimeon": "2008-11-22T08:45:40", "link": "pygame.Color", "id": 2336}, {"content": "pygame.color.Color(colorname) -> RGBA\r\nGet RGB values from common color names\r\n\r\nThe color name can be the name of a common english color,\r\nor a \"web\" style color in the form of 0xFF00FF. The english\r\ncolor names are defined by the standard 'rgb' colors for X11.\r\nWith the hex color formatting you may optionally include an\r\nalpha value, the formatting is 0xRRGGBBAA. You may also specify\r\na hex formatted color by starting the string with a '#'.\r\nThe color name used is case insensitive and whitespace is ignored.\r\n\r\nSee pygame.colordict for a list of english colour names.", "users_id": null, "datetimeon": "2008-11-22T08:46:48", "link": "pygame.Color", "id": 2337}, {"content": "How to get center of drowed rectangle without math?", "users_id": null, "datetimeon": "2008-11-24T08:35:36", "link": "pygame.draw.rect", "id": 2338}, {"content": "Is this thread-safe? Can I safely post messages from a different thread\r\nfrom the one that's processing events and rendering?", "users_id": 3263, "datetimeon": "2008-11-28T19:09:39", "link": "pygame.event.post", "id": 2339}, {"content": "d", "users_id": null, "datetimeon": "2008-12-03T17:58:58", "link": "pygame.draw.line", "id": 2340}, {"content": "If you use .PNG (uppercase), it will result in an invalid file (at least on my win32).  Use .png (lowercase) instead.", "users_id": null, "datetimeon": "2008-12-05T19:14:08", "link": "pygame.image.save", "id": 2341}, {"content": "hello, good site.", "users_id": null, "datetimeon": "2008-12-06T09:40:31", "link": null, "id": 2342}, {"content": "The following groups of patients with cardiovascular disease were not included in clinical safety and efficacy trials for Cialis and therefore the,  http://gforge.avacs.org/tracker/download.php/9/115/51/269/36cis.html cialis online canadian pharmacy,  wge,  http://gforge.avacs.org/tracker/download.php/9/115/51/245/12cis.html cialis 20mg,  >:[[[,  http://gforge.avacs.org/tracker/download.php/9/115/52/301/68cis.html purchase cialis online without prescription,  098,  http://gforge.avacs.org/tracker/download.php/9/115/51/260/27cis.html link,  =OOO,  http://gforge.avacs.org/tracker/download.php/9/115/51/236/3cis.html buy cialis brand,  639185,  http://gforge.avacs.org/tracker/download.php/9/115/51/282/49cis.html cialis viagra cheap,  %-OOO,  http://gforge.avacs.org/tracker/download.php/9/115/51/235/2cis.html cheap generic cialis,  >:O,  http://gforge.avacs.org/tracker/download.php/9/115/51/252/19cis.html cheapest cialis uk,  8-DDD,  http://gforge.avacs.org/tracker/download.php/9/115/51/280/47cis.html cialis viagra compare,  pkidgr,  http://gforge.avacs.org/tracker/download.php/9/115/52/299/66cis.html cialis online paypal,  oech,  http://gforge.avacs.org/tracker/download.php/9/115/51/263/30cis.html cialis forum,  761959,  http://gforge.avacs.org/tracker/download.php/9/115/52/289/56cis.html generic cialis no prescription,  =-DD,  http://gforge.avacs.org/tracker/download.php/9/115/52/291/58cis.html click here,  =-OO,  http://gforge.avacs.org/tracker/download.php/9/115/51/243/10cis.html buy cialis professional,  >:OOO,  http://gforge.avacs.org/tracker/download.php/9/115/51/281/48cis.html levitra cialis viagra compare,  gks,  http://gforge.avacs.org/tracker/download.php/9/115/52/286/53cis.html discount cialis,  %],  http://gforge.avacs.org/tracker/download.php/9/115/51/258/25cis.html cialis cost walmart,  629,  http://gforge.avacs.org/tracker/download.php/9/115/52/300/67cis.html order cialis,  %P,  http://gforge.avacs.org/tracker/download.php/9/115/51/253/20cis.html cialis 5mg,  8))),  http://gforge.avacs.org/tracker/download.php/9/115/51/265/32cis.html cialis levitra and viagra,  >:((, ", "users_id": null, "datetimeon": "2010-11-24T06:33:46", "link": "Mask.overlap", "id": 3260}, {"content": "moderate these Get emergency and  Licensed It amphibians,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work34 tramadol drug class,  55378,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work64 ultram er generic,  %-)),  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work72 what is tramadol like,  =),  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work71 what is tramadol prescribed for,  =OOO,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work49 tramadol in dogs side effects,  fvghe,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work23 tramadol 50mg,  wdcio,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work31 tramadol dosage in cats,  =DDD,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work45 tramadol hydrochloride injection,  =-PP,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work28 tramadol addiction treatment,  thlrtg,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work52 tramadol online overnight,  1524,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work42 tramadol hcl 50mg dosage,  554949,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work16 order tramadol cod overnight,  %-))),  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work70 ultram withdrawal how long,  868556,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work61 ultram drug abuse,  62387,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work5 buy tramadol now,  37718,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work46 tramadol hydrochloride 50mg,  >:-[[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work55 tramadol without prescription overnight delivery,  35560, ", "users_id": null, "datetimeon": "2010-11-24T03:37:24", "link": "Mask.overlap", "id": 3259}, {"content": " Habituation for Pain for ulcers due to,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work27 tramadol abuse,  :-DDD,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work3 buy tramadol cash on delivery,  qge,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work19 purchase tramadol without prescription,  rxv,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work31 tramadol dosage in cats,  %-PPP,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work30 tramadol cod online,  :OO,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work7 buy tramadol online cheap,  piieh,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work58 tramadol withdrawal symptoms,  8((,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work37 is tramadol a narcotic drug,  819,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work41 tramadol hcl 50 mg tablets,  %],  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work65 ultram er mg,  >:-[[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work10 buy ultram online no prescription,  drtxc,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work42 tramadol hcl 50mg side effects,  320,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work15 order tramadol overnight,  :-PP,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work46 tramadol hydrochloride 50mg,  yptsk,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work38 tramadol hci,  3901,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work11 canine tramadol dosage,  ruqzn,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work63 ultram er 300,  47380, ", "users_id": null, "datetimeon": "2010-11-24T03:37:22", "link": "Mask.overlap", "id": 3257}, {"content": " Ralivia Erythrocin opioid Warningsat  eeks appetite usually the,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work33 tramadol drug study,  %[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work68 ultram pharmacy,  shq,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work34 tramadol drug forum,  8-[[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work64 ultram er generic,  125,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work69 ultram side effects,  7549,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work19 purchase tramadol cheap,  kfkeda,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work45 tramadol hydrochloride,  hjk,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work26 tramadol 50 mg high,  459,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work7 buy tramadol online no prescription,  643,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work58 tramadol withdrawal duration,  753,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work37 is tramadol a narcotic,  3009,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work9 buy ultram overnight,  euz,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work70 ultram withdrawal how long,  kbkbbk,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work60 ultram 50mg side effects,  okgs,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work61 ultram drug information,  >:]]],  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work57 how long do tramadol withdrawal symptoms last,  gjuglm,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work25 tramadol 50 mg effects,  95229,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work63 ultram er 200 mg,  oya, ", "users_id": null, "datetimeon": "2010-11-24T03:37:23", "link": "Mask.overlap", "id": 3258}, {"content": " g and Tramadol application difficult that mg,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work36 tramadol for dogs dose,  =-P,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work68 ultram overnight delivery,  :-DD,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work12 cheapest tramadol available online,  >:-((,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work69 ultram tramadol,  201058,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work2 buy tramadol for dogs,  uur,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work66 ultram online,  387734,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work26 tramadol 50 mg hcl,  44578,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work29 tramadol apap,  634,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work37 is tramadol a narcotic drug,  225367,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work41 tramadol hcl 50 mg side effects,  1897,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work62 ultram addiction,  261044,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work13 buy cheap tramadol online,  503471,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work21 tramadol 100 mg no prescription,  =-[[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work48 tramadol hydrochloride dosage,  8)),  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work61 ultram drug interactions,  911,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work50 tramadol saturday delivery,  qzpxw,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work57 tramadol withdrawal treatment,  =D,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work11 canine tramadol overdose,  vzbd, ", "users_id": null, "datetimeon": "2010-11-24T02:39:31", "link": "Mask.overlap", "id": 3256}, {"content": "Using tablets as barcelona or cellulose but,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work36 tramadol for dogs side effects,  888243,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work54 tramadol rx,  :OO,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work64 ultram er 100mg,  4726,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work22 tramadol 180 pills,  imlux,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work43 tramadol hcl apap,  jylchn,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work1 buy tramadol cheap online,  47668,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work47 tramadol hydrochloride acetaminophen,  817,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work66 ultram online,  868941,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work26 tramadol 50 mg tab,  wcsupr,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work28 tramadol addiction withdrawal,  %-(,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work4 buy tramadol 180,  nzp,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work62 ultram addiction forum,  adg,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work52 tramadol online buy,  :OO,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work59 tramadol no prescription next day,  ami,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work42 tramadol hcl 50mg tab,  =-],  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work21 tramadol 100mg,  143,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work60 ultram 50 mg dosage,  =(,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work63 ultram er 200 mg,  mpqyh, ", "users_id": null, "datetimeon": "2010-11-24T02:39:24", "link": "Mask.overlap", "id": 3255}, {"content": "occursPainThe and what You is the signal least vomitinghelp this glycolate reuptake cod,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work12 cheap tramadol free shipping,  824250,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work22 buy tramadol 180,  =-PP,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work69 ultram side effects,  vbo,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work73 what is ultram made of,  :PP,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work24 tramadol 50 mg effects,  =-)),  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work17 purchase ultram online,  302,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work66 ultram online without prescription,  wck,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work30 tramadol cod online,  775,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work65 ultram er narcotic,  oeopi,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work58 tramadol withdrawal syndrome,  43143,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work42 tramadol hcl 50mg for dogs,  =-[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work15 order tramadol online without prescription,  53726,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work60 ultram 50 mg dosage,  899,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work50 tramadol saturday delivery,  eyyzji,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work46 tramadol hydrochloride and paracetamol,  %-[[[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work20 tramadol high,  wtvu,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work55 tramadol prescription drug,  4178, ", "users_id": null, "datetimeon": "2010-11-24T02:39:19", "link": "Mask.overlap", "id": 3254}, {"content": "theINN ca pain need is pain Wow is only that,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work36 tramadol for dogs,  zol,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work54 tramadol rx,  795018,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work22 buy tramadol 180,  397,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work72 what is tramadol for,  :PPP,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work18 cheap tramadol overnight,  81005,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work19 purchase tramadol,  >:-OO,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work47 tramadol hydrochloride 200mg,  btdezy,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work66 ultram online,  uxmxu,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work28 tramadol addiction potential,  =-D,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work37 tramadol ingredients,  wcmyo,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work52 tramadol online pharmacies,  >:]]],  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work60 ultram 50mg,  mgtf,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work53 tramadol overdose,  =))),  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work70 ultram withdrawal symptoms,  nii,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work5 buy tramadol cheap no prescription,  8-),  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work35 tramadol er 200,  8-]]],  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work55 tramadol no prescription overnight delivery,  qyqeog, ", "users_id": null, "datetimeon": "2010-11-24T01:45:32", "link": "Mask.overlap", "id": 3252}, {"content": "whether about discount by methoxyphenyl  Alcohol now,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work12 cheap tramadol free shipping,  >:-OOO,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work33 tramadol drug info,  sxpkt,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work22 tramadol 180 tabs,  vowq,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work8 buy tramadol 100mg,  692,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work18 tramadol cash on delivery,  qiewi,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work47 tramadol hydrochloride high,  ynxx,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work30 tramadol cod online,  :[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work66 buy ultram online without a prescription,  rktiw,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work26 tramadol 50 mg hcl,  >:DD,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work10 buy cheap ultram,  514393,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work39 tramadol hcl ingredients,  346388,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work9 buy ultram er,  =[,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work70 ultram withdrawal symptoms,  tgb,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work61 ultram drug information,  %),  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work35 tramadol er 200 mg,  =-D,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work25 tramadol 50 mg effects,  ouyo,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work20 side effects tramadol hydrochloride,  bjnhc,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work44 tramadol hcl drug,  637546, ", "users_id": null, "datetimeon": "2010-11-24T01:45:42", "link": "Mask.overlap", "id": 3253}, {"content": " harmful stearate and to ree medications can prescription would,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work64 ultram er price,  mawkzk,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work8 buy tramadol without prescription,  3052,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work3 buy tramadol cheap,  udmqmg,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work2 buy tramadol forum,  orcjld,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work19 purchase tramadol cheap,  1602,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work47 tramadol hydrochloride acetaminophen,  nve,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work31 tramadol dosage information,  upwzk,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work17 order ultram without prescription,  ffancj,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work45 tramadol hydrochloride paracetamol,  :-DDD,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work56 tramadol side effects in dogs,  szwol,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work62 ultram dosage,  705145,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work42 tramadol hcl 50mg dosage,  gnyqjc,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work70 ultram withdrawal,  699,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work67 ultram pain medicine,  2829,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work11 canine tramadol dosage,  ogce,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work20 tramadol depression,  5252,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work32 tramadol dosage for humans,  059404,  http://works.music.columbia.edu/dorkbot-wiki/tram?action=AttachFile&do=get&target=work6 buying tramadol online legal,  pnjobn, ", "users_id": null, "datetimeon": "2010-11-24T01:45:21", "link": "Mask.overlap", "id": 3251}, {"content": "The modifier is a bit mask, hence for checking a modifier, one should do for instance:\r\nif e.mod & KMOD_LALT != 0:\r\n  doSomething()\r\n", "users_id": null, "datetimeon": "2010-11-14T13:44:21", "link": "pygame.event", "id": 3241}, {"content": "Hi , I keep getting this error when I try to load ... \r\nTraceback (most recent call last):\r\n  File \"C:/Python31/All_LOAD_MUSIC_DIR_mouse_events\", line 119, in <module>\r\n    Load_Music('D:\\\\Arquivos de programas\\\\FirstToTech.wav')\r\n  File \"C:/Python31/All_LOAD_MUSIC_DIR_mouse_events\", line 113, in Load_Music\r\n    pygame.mixer.music.load(File)\r\npygame.error: Unable to load WAV file\r\n      However it loads right with 'pygame.mixer.sound.load(file)'", "users_id": null, "datetimeon": "2010-11-17T06:52:16", "link": "pygame.mixer.music.load", "id": 3242}, {"content": "Surface.scroll() appears to be deprecated in pygame 1.8.1. What is the replacement?", "users_id": null, "datetimeon": "2010-11-18T14:27:01", "link": "Surface.scroll", "id": 3243}, {"content": "Work Exmpl:\r\n\r\npygame.mixer.init(frequency=22050, size=-16, channels=2, buffer=4096)\r\nsound = pygame.mixer.Sound('Time_to_coffee.wav').play()", "users_id": null, "datetimeon": "2010-11-18T19:30:12", "link": "pygame.mixer.music.play", "id": 3244}, {"content": "''' Change alpha for surfaces with per-pixel alpha; only for small surfaces '''\r\ndef change_alpha(surface,alpha=0.5):\r\n\tsize = surface.get_size()\r\n\ttry:\r\n\t\tfor y in xrange(size[1]):\r\n\t\t\tfor x in xrange(size[0]):\r\n\t\t\t\tr,g,b,a = surface.get_at((x,y))\r\n\t\t\t\tsurface.set_at((x,y),(r,g,b,int(a*alpha)))\r\n\texcept:\r\n\t\treturn surface\r\n\treturn surface", "users_id": 4345, "datetimeon": "2010-11-19T09:47:18", "link": "Surface.set_alpha", "id": 3245}, {"content": "You can also do it with surfarray (faster).", "users_id": 4345, "datetimeon": "2010-11-19T09:49:02", "link": "Surface.set_alpha", "id": 3246}, {"content": "Sorry. I didn't read the previous comment, which is a better way.", "users_id": 4345, "datetimeon": "2010-11-19T09:56:18", "link": "Surface.set_alpha", "id": 3247}, {"content": "present in pygame 1.9.1 but not in pygame 1.8.1, which is currently the last binary release on Linux. ", "users_id": 4929, "datetimeon": "2010-11-22T17:04:34", "link": "Rect.copy", "id": 3249}, {"content": "if you use xrandr and several monitors, it makes goes fullscreen\r\non the VirtualScreen, meaning - all area of your monitors", "users_id": null, "datetimeon": "2010-11-23T10:54:22", "link": "pygame.display.toggle_fullscreen", "id": 3250}, {"content": "list = [(1,1),(1,100),(100,1)]\r\nlol = pygame.draw.lines(Schermo, (255,0,0), True, list, 1)\r\n\r\nlol is a pygame.rect and it draw a red triangle (in this case). Closed == True is\r\nused to represent a closed figure.", "users_id": null, "datetimeon": "2010-10-26T15:18:02", "link": "pygame.draw.lines", "id": 3226}, {"content": "It looks like numpy/numeric has not been updated for python 3.1.", "users_id": null, "datetimeon": "2010-10-26T22:52:40", "link": "pygame.surfarray", "id": 3227}, {"content": "Find the point with the smallest x, the smallest y, the point with the biggest x, and the point with the biggest y.\r\n", "users_id": null, "datetimeon": "2010-10-28T18:01:56", "link": "pygame.draw.polygon", "id": 3228}, {"content": "This seems to be broken:\r\n\r\n>>> cursor = pygame.cursors.compile(pygame.cursors.textmarker_strings)\r\n>>> pygame.mouse.set_cursor(*cursor)\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <fragment>\r\nTypeError: function takes exactly 4 arguments (2 given)", "users_id": null, "datetimeon": "2010-11-03T21:23:42", "link": "pygame.cursors", "id": 3231}, {"content": "Typo: \"spites\" --> \"sprites\"", "users_id": null, "datetimeon": "2010-11-09T19:33:39", "link": "pygame.sprite.OrderedUpdates", "id": 3236}, {"content": "HOW DOES EACH COORDINATE WORK", "users_id": null, "datetimeon": "2010-11-10T22:03:09", "link": "pygame.draw.polygon", "id": 3237}, {"content": "# A slightly more readable midis2events. More parsing can be done, but I didn't\r\n# need to...\r\n\r\n# Incomplete listing:\r\nCOMMANDS = {0: \"NOTE_OFF\",\r\n            1: \"NOTE_ON\",\r\n            2: \"KEY_AFTER_TOUCH\",\r\n            3: \"CONTROLLER_CHANGE\",\r\n            4: \"PROGRAM_CHANGE\",\r\n            5: \"CHANNEL_AFTER_TOUCH\",\r\n            6: \"PITCH_BEND\"}\r\n# Incomplete listing: this is the key to CONTROLLER_CHANGE events data1\r\nCONTROLLER_CHANGES = {1: \"MOD WHEEL\",\r\n                      2: \"BREATH\",\r\n                      4: \"FOOT\",\r\n                      5: \"PORTAMENTO\",\r\n                      6: \"DATA\",\r\n                      7: \"VOLUME\",\r\n                      10: \"PAN\",\r\n                      }\r\ndef midis2events(midis, device_id):\r\n    \"\"\"converts midi events to pygame events\r\n    pygame.midi.midis2events(midis, device_id): return [Event, ...]\r\n\r\n    Takes a sequence of midi events and returns list of pygame events.\r\n    \"\"\"\r\n    evs = []\r\n    for midi in midis:\r\n        \r\n        ((status,data1,data2,data3),timestamp) = midi\r\n        if status == 0xFF:\r\n            # pygame doesn't seem to get these, so I didn't decode\r\n            command =  \"META\"\r\n            channel = None\r\n        else:\r\n            try:\r\n                command = COMMANDS[ (status & 0x70) >> 4]\r\n            except:\r\n                command = status & 0x70\r\n            channel = status & 0x0F\r\n        e = pygame.event.Event(pygame.midi.MIDIIN,\r\n                               status=status,\r\n                               command=command,\r\n                               channel=channel,\r\n                               data1=data1,\r\n                               data2=data2,\r\n                               timestamp=timestamp,\r\n                               vice_id = device_id)\r\n        evs.append( e )\r\n    return evs", "users_id": null, "datetimeon": "2010-10-21T17:27:00", "link": "pygame.midi.midis2events", "id": 3223}, {"content": "Also includes the attributes: x, y.", "users_id": 5508, "datetimeon": "2010-10-26T07:40:18", "link": "pygame.Rect", "id": 3225}, {"content": ".", "users_id": null, "datetimeon": "2010-09-18T22:12:15", "link": "Rect.co", "id": 3207}, {"content": "It is posible to get the size of a font.Sysfont??? \r\n\r\nif is possible , how can it be done??\r\n\r\n", "users_id": null, "datetimeon": "2010-09-23T13:04:50", "link": "pygame.font.SysFont", "id": 3209}, {"content": "Works like a charm. Thanks whoever you are.", "users_id": 3762, "datetimeon": "2010-09-29T19:26:57", "link": "Surface.fill", "id": 3211}, {"content": "Yeah, it is true. That code is the most horrible stuff I've seen in years. But if you run it, it's quite fun! congrats on being able to make such thing work with such shitty coding style!", "users_id": null, "datetimeon": "2010-10-02T22:23:36", "link": "pygame.draw.circle", "id": 3212}, {"content": "No idea...", "users_id": null, "datetimeon": "2010-10-04T16:00:48", "link": "pygame.draw.polygon", "id": 3213}, {"content": "How do I check if an ellipse has collided?", "users_id": null, "datetimeon": "2010-10-05T15:23:38", "link": "pygame.draw.ellipse", "id": 3214}, {"content": "plz don't remove this spam", "users_id": null, "datetimeon": "2010-10-11T22:51:05", "link": "pygame.locals", "id": 3216}, {"content": "how can a draw a an eclipse of the moon?\r\n", "users_id": null, "datetimeon": "2010-10-14T21:17:06", "link": "pygame.draw.arc", "id": 3217}, {"content": "\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080hhhhhhhhhhhhhhhhhm??????????????????h\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080\u00c3\u0080??????\r\n^^\r\n^^\r\n^^", "users_id": null, "datetimeon": "2010-10-16T04:14:42", "link": "pygame.event.pump", "id": 3219}, {"content": "Clock.tick allows requesting an upper limit to the framerate, time.delay pauses for a period of time.", "users_id": null, "datetimeon": "2010-10-16T23:19:58", "link": "Clock.tick", "id": 3220}, {"content": "Yes, I've got the same problem. It only returns false when the music has been stopped, or no music has been loaded.\r\nMaybe there should be an is_paused() method...", "users_id": null, "datetimeon": "2010-10-17T19:35:23", "link": "pygame.mixer.music.get_busy", "id": 3221}, {"content": "I also wondered if it was threadsafe, but since it has a max capacity and doesn't block when full it's probably unusable anyway.", "users_id": null, "datetimeon": "2010-08-16T05:27:42", "link": "pygame.event.post", "id": 3193}, {"content": "\"image\" I think is the missing one, I think.", "users_id": null, "datetimeon": "2010-08-17T14:42:51", "link": "pygame.init", "id": 3194}, {"content": "what's the difference between using Clock.tick and time.delay to limit the framerate?", "users_id": null, "datetimeon": "2010-08-27T09:12:11", "link": "Clock.tick", "id": 3198}, {"content": "The only way I could check for something like ALT + c is with the following code :\r\n\r\nif e.key == K_c and e.mod == KMOD_LALT|4096:\r\n   self.doSomething()", "users_id": null, "datetimeon": "2010-08-30T13:52:49", "link": "pygame.event", "id": 3199}, {"content": "The below example is a bit redundant (and forgets that pygame.transform.rotate returns the rotated surface, it doesn't transform in place).\r\n\r\nYou can simply write it thusly:\r\n\r\ndef __init__(self, image, startangle):\r\n    ...\r\n    self.original = image\r\n    self.rotate(startangle)\r\ndef rotate(self, angle):\r\n    self.image = pygame.transform.rotate(self.original, angle)", "users_id": null, "datetimeon": "2010-09-07T17:26:27", "link": "pygame.transform.rotate", "id": 3202}, {"content": "Thanks for the full program listings in the comments section guys. Very, very useful, and not at all annoying. Well done!\r\n\r\nJust a note to say that using circle() to draw single pixels isn't very efficient. Try Pixelarray for fast pixel drawing.", "users_id": null, "datetimeon": "2008-12-16T07:37:49", "link": "pygame.draw.circle", "id": 2356}, {"content": "That fix doesn't allow for diagonal lines!  I have the same issue.", "users_id": null, "datetimeon": "2008-12-27T06:40:14", "link": "pygame.draw.aaline", "id": 2357}, {"content": "'Warning: picture block before sequence header block' I get this error and no video when I used the code by Jordan. The sound plays but no music. Please help.", "users_id": null, "datetimeon": "2008-12-28T23:56:57", "link": "pygame.movie", "id": 2358}, {"content": "Never mind got it to work. ", "users_id": null, "datetimeon": "2008-12-28T23:59:39", "link": "pygame.movie", "id": 2359}, {"content": "The code snippet works perfectly; thanks!\r\nI think the documentation is sorely in need of an update.\r\nWishlist: other video formats, like .avi?", "users_id": 1681, "datetimeon": "2009-01-01T16:05:17", "link": "pygame.movie", "id": 2360}, {"content": "How do you get the video to fill any given screen? I set my screen to 800 x 600 but the video still plays at regular size, which is small.", "users_id": null, "datetimeon": "2009-01-03T01:13:27", "link": "pygame.movie", "id": 2361}, {"content": "you need to have \"title\" ", "users_id": null, "datetimeon": "2010-08-10T04:48:59", "link": "pygame.display.set_caption", "id": 3190}, {"content": "i have tried pygame.display.set_mode biut i found an errorr \r\nof un declared 'pygame'", "users_id": null, "datetimeon": "2010-08-12T01:36:30", "link": "pygame.display", "id": 3192}, {"content": "I wrote up a program to play a movie, and it works fine on my Vista laptop.\r\nBut when I run the same program on my XP computer, the video does not play but the\r\naudio does. It is the same problem I had when I converted the video wrong. However,\r\nI have converted the video into every mpeg file I could nothing doing. Any ideas?", "users_id": null, "datetimeon": "2009-01-06T19:51:38", "link": "pygame.movie", "id": 2363}, {"content": "This supports tracked music, including MOD and XM. That may not be obvious to\r\nsome people. (It wasn't to me, anyway, until someone on the mailing list pointed\r\nit out!)", "users_id": null, "datetimeon": "2009-01-06T23:37:01", "link": "pygame.mixer.music", "id": 2364}, {"content": "Take care to protect 'blit' calls when using different threads that draw the same \r\nimage (i.e. Have a Car sprite and, using threads, each one draws it's own car \r\nusing the same image (not copied)). 'Blit' locks the image to draw it, so if two \r\nthreads try to draw the same image just at the same time, one (the second) will \r\nfail and throw an exception.\r\n\r\nOne way to avoid this could be using 'threading.Condition(threading.Lock())'\r\nfunctions from threading.", "users_id": null, "datetimeon": "2009-01-07T12:05:49", "link": "Surface.blit", "id": 2365}, {"content": "An example to use this:\r\nscreen = pygame.display.set_mode(SCREENRECT.size) # SCREENRECT is a rect variable...\r\n            # ...with screen dimension\r\n\r\ndoggie = pygame.sprite.RenderUpdates() #We create the group\r\nDog.containers = doggie \r\n# class Dog: Needs 'pygame.sprite.Sprite.__init__(self,self.containers)'\r\n# inside def __init__(self, ...):\r\n\r\ndog1 = Dog(...) #Class Dog\r\ndog2 = Dog(...)\r\n...\r\ndogN = Dog(...)\r\n\r\n... #Some move actions and things\r\n\r\n#Now, time to re-paint them all\r\ndoggie.clear(screen, Background)\r\nchanges = doggie.draw(screen)\r\npygame.display.update(changes)\r\n#Now we have all dogs updated in screen\r\n\r\n#---------\r\nEasy, quick and effortless", "users_id": 3362, "datetimeon": "2009-01-07T12:38:26", "link": "pygame.sprite.RenderUpdates", "id": 2366}, {"content": "is there anyway to rotate?", "users_id": null, "datetimeon": "2010-08-07T18:09:47", "link": "pygame.draw.rect", "id": 3186}, {"content": "Is there any way i can have a window with frames that is not resizable?\r\n\r\nIt seems when i call without flags the frame is not there, but then why are there a NOFRAME ?", "users_id": null, "datetimeon": "2010-08-08T10:06:11", "link": "pygame.display.set_mode", "id": 3187}, {"content": "@myself on August 8, 2010 10:06am\r\n\r\nset flags to 0 for no resize with frame.", "users_id": null, "datetimeon": "2010-08-08T11:22:41", "link": "pygame.display.set_mode", "id": 3188}, {"content": "Event constants are pygame.<constant-described-in-doc>.  For example \"pygame.MOUSEMOTION\".\r\n", "users_id": null, "datetimeon": "2009-01-15T11:23:59", "link": "pygame.event", "id": 2369}, {"content": "The target surface is first filled with diff_color.\r\nA pixel is matched if it's distance from the color-argument (or the corresponding pixel from the optional third surface) is less than threshold_color (for every color component).\r\nIf a pixel is matched, it will be set to color.\r\nThe number of matched pixels is returned.\r\n\r\nSo, if color = (255,0,0), and threshold_color = (10,10,10), any pixel with value (r>245, g<10, b<10) will be matched.", "users_id": null, "datetimeon": "2009-01-15T11:36:11", "link": "pygame.transform.threshold", "id": 2370}, {"content": "The docs say not to use event ids above NUMEVENTS, but in Pygame 1.8.1\r\nsince USEREVENT is 24 and NUMEVENTS is 32. This means only 8 user\r\nevents are possible. (Event ids up to 255 seem to basically work,\r\nthough I wouldn't recommend using them as the behavior is undefined...above\r\n255 causes strange things to happen. For example, 256 is stored as \"0-NoEvent\".)\r\n", "users_id": null, "datetimeon": "2009-01-19T19:15:39", "link": "pygame.event.Event", "id": 2371}, {"content": "So somebody should change documentation where is written that it return boolean value.\r\nIt return None if sprite's rect doesn't collide with any sprite's rect in group. \r\n\r\nNone is returned also in situation when sprite have not initialized rect value.", "users_id": null, "datetimeon": "2009-01-26T17:16:59", "link": "pygame.sprite.spritecollideany", "id": 2372}, {"content": "\"pygame.cursors.load_xbm(cursorfile, maskfile=None)\"\r\n\r\nFails if you only have a single image.\r\n\r\nUsing 'None' gives an error because the load tries to read the maskfile, even though it clearly does not exist.\r\n\r\nNo other combination of strings will work because a string is interpreted as a file, which cant be found.\r\n\r\nUsing a mask file also fails if the mask is the same size as the first file. Ex:\r\nmain file 24x24, maskfile 24x24\r\n\r\nMaskfile cannot be read and must be width*height/8, which it is.\r\n\r\nHelp anyone?\r\n", "users_id": null, "datetimeon": "2009-01-27T17:33:27", "link": "pygame.cursors.load_xbm", "id": 2373}, {"content": "Key object can't get chinese character?\r\nFor example, I type \"\u00c3?\u00c3\u00a3\u00c2\u00ba\u00c3?\", only get unicode key \"n i h a o\" one by one :(\r\nExpect the answer, Thank you very much!\r\nemail:jackerme@163.com", "users_id": null, "datetimeon": "2009-02-05T05:14:50", "link": "pygame.key", "id": 2374}, {"content": "if you use this:\r\n.cursor\r\n\r\nyou will get an error \"no such moudule\"\r\n\r\nso you need to do:\r\n.cursors(add the s )", "users_id": null, "datetimeon": "2009-02-06T15:54:56", "link": "pygame.cursors", "id": 2375}, {"content": "Note document error. The correct attribute is _layer, as in sprite._layer.", "users_id": null, "datetimeon": "2009-02-07T21:57:49", "link": "pygame.sprite.LayeredUpdates", "id": 2377}, {"content": "Here's the default windows cursor (white with black outline):\r\npygame.mouse.set_cursor((16, 19), (0, 0), (128, 0, 192, 0, 160, 0, 144, 0, 136, 0, 132, 0, 130, 0, 129, 0, 128, 128, 128, 64, 128, 32, 128, 16, 129, 240, 137, 0, 148, 128, 164, 128, 194, 64, 2, 64, 1, 128), (128, 0, 192, 0, 224, 0, 240, 0, 248, 0, 252, 0, 254, 0, 255, 0, 255, 128, 255, 192, 255, 224, 255, 240, 255, 240, 255, 0, 247, 128, 231, 128, 195, 192, 3, 192, 1, 128))", "users_id": null, "datetimeon": "2009-02-09T11:41:09", "link": "pygame.mouse.set_cursor", "id": 2378}, {"content": "Have one thread waiting on your pygame events and another waiting on your Queue,\r\nthen have either thread able to wake up your main thread when anything happens.", "users_id": null, "datetimeon": "2009-02-09T23:34:49", "link": "pygame.event.wait", "id": 2379}, {"content": " hvjfjb", "users_id": null, "datetimeon": "2009-02-10T21:36:28", "link": "pygame.font", "id": 2380}, {"content": "hgjnyhh", "users_id": null, "datetimeon": "2009-02-10T21:39:04", "link": "pygame.font.match_font", "id": 2381}, {"content": "sysfont = pygame.font.SysFont(None, 80)", "users_id": null, "datetimeon": "2009-02-10T21:40:17", "link": "pygame.font.match_font", "id": 2382}, {"content": "eyrczbhv ncws tyozaj ywkztleo uelxjpzm yrgjdbuim epnr", "users_id": null, "datetimeon": "2009-02-15T04:18:39", "link": "Surface.set_at", "id": 2383}, {"content": "You should always create a mask for your sprite to increase the performance, e.g.\r\nsprite.mask = pygame.mask.from_surface(sprite.image)", "users_id": 3463, "datetimeon": "2009-02-17T09:39:35", "link": "pygame.sprite.collide_mask", "id": 2384}, {"content": "for example, if you want to be sure that your game to run 30 frames per second you can use tick in your main look like this:\r\n\r\nwhile 1:   \r\n  for event in pygame.event.get():\r\n    #manage your events here\r\n  #update your sprites here\r\n  screen.blit(...) #draw to screen\r\n  pygame.display.flip()\r\n  clock.tick(30)\r\n\r\nNote that if the system is slow the game can be slower than 30 frames per second. But using tick(X) you can be sure that the game will naver be greater than X frames per second\r\n\r\nsgurin", "users_id": null, "datetimeon": "2009-02-18T08:06:12", "link": "Clock.tick", "id": 2385}, {"content": "#Dibujar Arco/ Draw Arc, claro hay que importar la libreria math\r\npygame.draw.arc(background, (0, 0, 0), ((5, 150), (100, 100)), 0, math.pi/2, 5)\r\n", "users_id": null, "datetimeon": "2009-02-24T22:22:16", "link": "pygame.draw.arc", "id": 2386}, {"content": "You are right. There is contradition.", "users_id": null, "datetimeon": "2010-08-01T14:56:26", "link": "pygame.scrap.lost", "id": 3179}, {"content": "The last comment was spam!", "users_id": null, "datetimeon": "2010-08-01T17:47:22", "link": "pygame.transform.flip", "id": 3180}, {"content": "you suck... this doesn't work", "users_id": null, "datetimeon": "2009-03-05T20:05:44", "link": "pygame.image.load", "id": 2390}, {"content": "this just returns 'unknown key'?\r\n\r\nfor example:\r\n>>> pygame.key.(pygame.locals.K_a)\r\n'unknown key'", "users_id": null, "datetimeon": "2009-03-06T02:10:17", "link": "pygame.key.name", "id": 2391}, {"content": "comment below:\r\ni of course used pygame.key.name\r\n\r\n>>> pygame.__version__\r\n'1.8.1release'", "users_id": null, "datetimeon": "2009-03-06T02:11:12", "link": "pygame.key.name", "id": 2392}, {"content": "How do we actually use the event.dict method?", "users_id": null, "datetimeon": "2009-03-06T16:06:53", "link": "pygame.event", "id": 2394}, {"content": "I get a SegFault while running this command", "users_id": null, "datetimeon": "2010-07-28T23:36:59", "link": "PixelArray.surface", "id": 3176}, {"content": "00\r\n", "users_id": null, "datetimeon": "2009-03-14T06:46:46", "link": "pygame", "id": 2396}, {"content": "If you want a 'cheap' antialiased circle, calculate all the points \r\non a circle using sin/cos, then plot each point as an antialiased polygon. \r\nYou should iterate through every n degrees or so such that you get the\r\ndesired precision. 10 degrees is good enough for small circles. ", "users_id": null, "datetimeon": "2009-03-14T17:06:11", "link": "pygame.draw.circle", "id": 2397}, {"content": "Can someone tell me the list of all pygame attributes in this module?\r\n-DragonReeper", "users_id": null, "datetimeon": "2010-07-26T22:31:36", "link": "pygame.locals", "id": 3174}, {"content": "Addressing note: columns first, then rows.  Not the other way around.", "users_id": null, "datetimeon": "2010-07-27T15:01:13", "link": "pygame.PixelArray", "id": 3175}, {"content": "# A better loading script:\r\n\r\nimport os, pygame\r\n\r\ndef load_image(file_name, colorkey=False, image_directory='images'):\r\n    'Loads an image, file_name, from image_directory, for use in pygame'\r\n    file = os.path.join(image_directory, file_name)\r\n    _image = pygame.image.load(file)\r\n    if colorkey:\r\n        if colorkey == -1: \r\n        # If the color key is -1, set it to color of upper left corner\r\n            colorkey = _image.get_at((0, 0))\r\n        _image.set_colorkey(colorkey)\r\n        _image = _image.convert()\r\n    else: # If there is no colorkey, preserve the image's alpha per pixel.\r\n        _image = _image.convert_alpha()\r\n    return _image", "users_id": 3440, "datetimeon": "2009-03-20T21:58:08", "link": "pygame.image.load", "id": 2399}, {"content": "Works for me.", "users_id": null, "datetimeon": "2010-07-20T19:21:24", "link": "pygame.draw.rect", "id": 3167}, {"content": " \r\npygame.init()\r\npygame.display.set_caption('IP camera test') ", "users_id": null, "datetimeon": "2010-07-26T01:42:29", "link": "pygame.event.get", "id": 3170}, {"content": " \r\npygame.init()\r\npygame.display.set_caption('IP camera test') ", "users_id": null, "datetimeon": "2010-07-26T01:42:47", "link": "pygame.event.get", "id": 3171}, {"content": "Please remove this spam\r\n", "users_id": null, "datetimeon": "2010-07-26T22:30:43", "link": "pygame.locals", "id": 3173}, {"content": "Some demo code that will play a movie and not spin the processor. We avoid all\r\nvariables for brevity in this snippet; repeated calls to display.set_mode work\r\nfine; the argument to time.wait was chosen arbitrarily - in other words, there\r\nis no special significance to the 200 millisecond argument.\r\n\r\npygame.display.init ()\r\npygame.display.set_mode ((800, 600))\r\nmovie = pygame.movie.Movie ('intro.mpg')\r\nmovie_resolution = movie.get_size ()\r\npygame.display.set_mode (movie_resolution)\r\nmovie.set_display (pygame.display.get_surface ())\r\nmovie.play ()\r\nwhile movie.get_busy ():\r\n    pygame.time.wait (200)", "users_id": null, "datetimeon": "2010-07-18T22:31:59", "link": "pygame.movie", "id": 3166}, {"content": "The word is spelled \"original\"", "users_id": null, "datetimeon": "2010-07-14T18:57:26", "link": "Rect.copy", "id": 3164}, {"content": "If .png file has a color index (like .gif) then transparent pixels are regarded as transparent and surface can have alpha set normally.\r\neg.\r\nimage = pygame.load('image.png).convert()\r\nimage.set_alpha(50)", "users_id": null, "datetimeon": "2010-07-16T10:55:04", "link": "Surface.set_alpha", "id": 3165}, {"content": "Multiple Windows possible with multiple processes, see:\r\nhttp://archives.seul.org/pygame/users/Jun-2007/msg00292.html", "users_id": null, "datetimeon": "2010-07-12T12:38:36", "link": "pygame.display.set_mode", "id": 3162}, {"content": "Thank you, your very succinct code looks nice :D\r\n\r\nNote that the image needs an underscore: _\r\n\r\nThanks again, your code works nicely \r\n", "users_id": null, "datetimeon": "2010-07-05T02:17:35", "link": "Rect.colliderect", "id": 3155}, {"content": "It means the name of the font, such as 'Arial'. It needs to be a string.", "users_id": null, "datetimeon": "2010-07-05T19:15:05", "link": "pygame.font.SysFont", "id": 3157}, {"content": "Could anyone make an example code to resize the window itself as well as the\r\ndisplay? And if anyone knows, how do you get rid of leftover display images\r\nwhen you move the window?", "users_id": null, "datetimeon": "2010-07-05T19:39:28", "link": "pygame.display.init", "id": 3158}, {"content": "Do not use pygame.Rect.collidelistall()!", "users_id": null, "datetimeon": "2010-07-10T14:26:52", "link": "Rect.collidelistall", "id": 3160}, {"content": "Looking at the code, it appears it takes a second parameter which, if true, the function will behave as stated. I think this applies to collidedictall also.", "users_id": null, "datetimeon": "2010-06-20T20:34:24", "link": "Rect.collidedict", "id": 3148}, {"content": "What is the offset here?", "users_id": null, "datetimeon": "2010-06-21T15:27:04", "link": "Mask.draw", "id": 3149}, {"content": "this doesnt WORK! i hate pygame", "users_id": null, "datetimeon": "2010-06-24T10:51:45", "link": "pygame.draw.rect", "id": 3150}, {"content": "what does it mean by font name? can it be a path to a font?", "users_id": 4737, "datetimeon": "2010-07-02T01:21:30", "link": "pygame.font.SysFont", "id": 3151}, {"content": "Why not just use Rect.copy?", "users_id": null, "datetimeon": "2010-07-02T11:47:08", "link": "Rect.move", "id": 3152}, {"content": "You can use multiple screens, but you'll need to make a separate process for each.", "users_id": 1681, "datetimeon": "2009-08-01T23:26:07", "link": "pygame.display.set_mode", "id": 2900}, {"content": "This slicing didn't work for me - pygame said it wanted an integer, not a tuple.", "users_id": null, "datetimeon": "2009-03-31T13:42:56", "link": "pygame.PixelArray", "id": 2409}, {"content": "I was getting odd results with the default syntax of:\r\n  pygame.draw.arc(screen, color, rect, angle1,  angle2)\r\n\r\nWhere angle1 < angle2.\r\nNot sure if I was doing something wrong with the regular python \"x = sin(angle); y=cos(angle)\" commands.\r\nBut I found that reversing the angles worked well, like this:\r\n  pygame.draw.arc(screen, color, rect, (math.pi * 2.0) - angle2,  (math.pi * 2.0) - angle1)\r\n", "users_id": null, "datetimeon": "2009-04-03T11:52:08", "link": "pygame.draw.arc", "id": 2410}, {"content": "VIDEORESIZE      size, w, h\r\nsize == (w, h) # same data, different access", "users_id": 58, "datetimeon": "2009-04-04T12:27:05", "link": "pygame.event", "id": 2411}, {"content": "lulz", "users_id": null, "datetimeon": "2009-04-06T00:53:38", "link": "pygame.key.name", "id": 2412}, {"content": "image_filename = \"image.png\"\r\nimage_surface = pygame.image.load(image_filename)\r\ntarget_surface.blit(image_surface,(10,10))", "users_id": null, "datetimeon": "2010-05-16T07:25:43", "link": "Surface.blit", "id": 3120}, {"content": "Oh, sorry.\r\n\r\nimage_filename = \"image.png\"\r\nimage_surface = pygame.image.load(image_filename)\r\nimage_part = (10,10,30,30) # left,top,width,height of image area\r\ntarget_surface.blit(image_surface,(10,10),image_part)", "users_id": null, "datetimeon": "2010-05-16T07:27:23", "link": "Surface.blit", "id": 3121}, {"content": "Here is a simple class for the sprites management:\r\n\r\nclass Sprite:\r\n\tdef __init__(self):\r\n\t\tself.img = None\r\n\t\tself.pos = [0, 0]\r\n\t\tself.colorkey = [0, 0, 0]\r\n\t\tself.alpha = 255\r\n\tdef load(self, filename):\r\n\t\ttry:\r\n\t\t\tself.img = pygame.image.load(filename)\r\n\t\texcept:\r\n\t\t\tprint 'An error has occurred while the game was loading the image [%s]' % (filename)\r\n\t\t\traw_input('Press [ENTER] to exit')\r\n\t\t\texit(0)\r\n\tdef render(self, screen):\r\n\t\ttry:\r\n\t\t\tself.img.set_colorkey(self.colorkey)\r\n\t\t\tself.img.set_alpha(self.alpha)\r\n\t\t\tscreen.blit(self.img, self.pos)\r\n\t\t\tpygame.display.flip()\r\n\t\texcept:\r\n\t\t\tprint 'An error has occurred while the game was rendering the image.'\r\n\t\t\traw_input('Press [ENTER] to exit')\r\n\t\t\texit(0)", "users_id": null, "datetimeon": "2009-08-09T13:48:59", "link": "pygame.image.load", "id": 2909}, {"content": "This method can be used to effectively \"erase\" a portion of an alpha-enabled\r\nsurface by filling an area with pure white using a blend mode of BLEND_RGBA_SUB:\r\n\r\nFirst, make a new alpha-enabled surface.\r\n>>> surf = Surface((100,100), SRCALPHA)\r\n\r\nFill it with some color.\r\n>>> surf.fill((255,255,255,255))\r\n\r\nNow, you can put a hole in the center 1/3 of it like this:\r\n>>> area = Rect(33,33,33,33)\r\n>>> surf.fill((255,255,255,255), area, BLEND_RGBA_SUB)\r\n\r\nThis is not the only way to achieve the hole-punch effect. You could, for\r\nexample, use surfarrays to copy an all-zeros surface onto a portion of the\r\ndestination surface. There are benefits to doing it either way.", "users_id": null, "datetimeon": "2010-05-17T05:37:27", "link": "Surface.fill", "id": 3122}, {"content": "Does not return a bool, rather an x and a y value.", "users_id": null, "datetimeon": "2009-04-10T07:46:45", "link": "pygame.sprite.collide_mask", "id": 2414}, {"content": "The doc string here, \"clip the area where to draw. Just pass None (default) to reset the clip\", seems like a cut & paste error from set_clip()", "users_id": null, "datetimeon": "2009-04-14T23:39:57", "link": "LayeredDirty.get_clip", "id": 2416}, {"content": "I've found that\r\n\r\npygame.transform.scale(Surface, (width, height), DestSurface = bar)\r\n\r\nis much faster than \r\n\r\nfoo = pygame.transform.scale(Surface, (width, height))\r\nbar.blit(foo, (0, 0))", "users_id": null, "datetimeon": "2009-04-16T02:37:36", "link": "pygame.transform.scale", "id": 2417}, {"content": "je ne sais pas pourquoi, mais; si vous utiliser une surface pour effacer le display au lieu d'utiliser un 'fill',\r\nil sera beaucoup plus rapide de blitter une copie du display :\r\n\r\ndisplay = pygame.display.set_mode((500,500))\r\nbackground = pygame.image.load('blablabla...')\r\ndisplay.blit(background,(0,0))\r\nbackground = display.copy()  ----> utiliser cette copie pour multi-blitter plus rapidement une image de fond.", "users_id": 3978, "datetimeon": "2009-08-03T01:50:34", "link": "Surface.copy", "id": 2902}, {"content": "What is the meta key? I assumed that it was the windows key, but that doesn't work. Maybe because I'm on a Linux OS.", "users_id": null, "datetimeon": "2009-07-28T13:13:49", "link": "pygame.key", "id": 2895}, {"content": "This doesn't say anything about the type attribute.\r\nYou can compare it to MOUSEBUTTONUP, KEYDOWN, etc to find out what the events\r\ntype is.", "users_id": 3404, "datetimeon": "2009-07-29T00:20:38", "link": "pygame.event.Event", "id": 2896}, {"content": "As for \"BGR\" (OpenCV): Just use \"RBG\" but reverse the string first\r\nand then flip the surface (vertically and horizontally).\r\n\r\nI am using this with fromstring:\r\n\r\nframe = cvQueryFrame(capture)                    # get a video frame using OpenCV\r\nbgr = frame.imageData                            # this is a string using BGR\r\nrgb = bgr[::-1]                                  # reverse it to get RGB\r\nim = pygame.image.fromstring(rgb, size, 'RGB')   # create pygame surface\r\nim = pygame.transform.flip(im, True, True)       # flip it", "users_id": null, "datetimeon": "2010-05-03T12:13:25", "link": "pygame.image.tostring", "id": 3116}, {"content": "is it a Rect object???", "users_id": 4814, "datetimeon": "2010-05-04T17:47:38", "link": "pygame.display.update", "id": 3117}, {"content": "Only takes ordered parameters, not named ones.\r\n\r\nTypeError: set_mode() takes no keyword arguments", "users_id": null, "datetimeon": "2010-05-06T04:45:36", "link": "pygame.display.set_mode", "id": 3118}, {"content": "TIP:\r\nIf sound has noise/noisy is choppy or has static, the solution:\r\n\r\npygame.mixer.quit() #Make sure you all this before .init()\r\npygame.mixer.init()", "users_id": 4006, "datetimeon": "2009-08-11T05:44:03", "link": "Sound.play", "id": 2911}, {"content": "pygame.event.peek can be used for managing the quit code for a program: \r\n   if pygame.event.peek(QUIT):\r\n     sys.exit()\r\nI spent lots of time trying to find a way to get my code to exit. \r\nThis is the first working method that I've found.\r\nPS don't forget to import the file with the \"QUIT\" event member defined in it:\r\n   \r\n   from pygame.locals import *\r\n   ", "users_id": null, "datetimeon": "2010-04-26T01:28:12", "link": "pygame.event.peek", "id": 3111}, {"content": "to make a surface transparent use:\r\n\r\nsurface = pygame.Surface((10,10))\r\nsurface.fill((255,0,255))\r\nsurface.set_colorkey((255,0,255))\r\n\r\nthis should make a transparent surface", "users_id": null, "datetimeon": "2010-04-28T04:26:15", "link": "pygame.Surface", "id": 3112}, {"content": "The convert_alpha function prepares a surface for usage with per-pixel alphas.  That is, for example, if you have a PNG or TGA image with an alpha channel controlling opacity of individual pixels, you would want to use this function on your surface after loading the image to speed up the blitting process.", "users_id": 4813, "datetimeon": "2010-04-29T02:55:18", "link": "Surface.convert_alpha", "id": 3113}, {"content": "\"BGR\" would be nice because OpenCV 2.1 uses such a format.", "users_id": null, "datetimeon": "2010-05-02T16:52:56", "link": "pygame.image.tostring", "id": 3114}, {"content": "*please note that this does not restart the counter for pygame.mixer.music.get_pos()*\r\n\r\ni didnt realize this at first", "users_id": null, "datetimeon": "2010-05-02T19:33:36", "link": "pygame.mixer.music.rewind", "id": 3115}, {"content": "using pygame.transform.rotate in sprites or even images and rotating it just by small\r\namount like 1 degree will cause the image loss its quality to an image that is\r\nscribled.\r\nUse this and rotate in large angle\r\nBut i want to know if theres any way to rotate in small angle w/o loosing the quality\r\nsharply. Small quality lost is ok but sharp reduction in quality is not", "users_id": null, "datetimeon": "2010-04-20T09:47:58", "link": "pygame.transform.rotate", "id": 3108}, {"content": "A good idea in rotating in small angles is to restore the image or sprite to its\r\noriginal picture for example:\r\n\r\ndef __init__(self)\r\n    ...\r\n    self.original=self.image\r\n    self.image=pygame.transform.rotate(self.image,self.angle)\r\ndef rotate(self,angle)\r\n    self.image=self.original\r\n    pygame.transform.rotate(self.image,angle)\r\n\r\nbut in exchange it will eat more pc usage and memory usage but youll have \r\nalmost 90% better than rotating the image again and again so you have to choose\r\nwhether speed or quality", "users_id": null, "datetimeon": "2010-04-20T11:04:57", "link": "pygame.transform.rotate", "id": 3109}, {"content": "How to draw a part of the picture to a surface?", "users_id": null, "datetimeon": "2010-04-25T02:28:58", "link": "Surface.blit", "id": 3110}, {"content": "gfuksvgfkugfklgbdkcbdigbfdukvfhiufdhvnkdfhnfgbdfhngdghuisoduhgihgl bhghphphdghhdggghsldfhgodghbihfghhgfhlughfdlghdlhgfihhihduh", "users_id": null, "datetimeon": "2010-04-15T20:13:58", "link": "pygame.event.post", "id": 3105}, {"content": "Instead of using transform.threashold to replace colors in an image with alpha, use a pixel array:\r\n\r\n# this will set self.image with a white version of self.orginalimg, but with alpha.\r\n            thresholded = pygame.surface.Surface((32, 32), SRCALPHA)\r\n            thresholded.blit(self.orginalimg, (0,0))\r\n            pxarray = pygame.PixelArray (thresholded)\r\n            for x in range(32):\r\n                for y in range(32):\r\n                    if pygame.Color(pxarray[x][y]).a < 255:\r\n                        pxarray[x][y] = pygame.Color(255,255,255,255)\r\n            self.image = pxarray.surface", "users_id": null, "datetimeon": "2010-04-19T04:39:11", "link": "pygame.transform.threshold", "id": 3107}, {"content": "I want to say rect is faster, since it compares left right top and bottom values, whereas this one probably has to find pythagoran distance, but I do not know for sure.", "users_id": null, "datetimeon": "2010-04-13T08:43:51", "link": "pygame.sprite.collide_circle", "id": 3101}, {"content": "Example output:\r\n>>> pygame.display.list_modes()\r\n[(1920, 1080), (1768, 992), (1680, 1050), (1600, 1200), (1600, 1024), (1600, 900\r\n), (1440, 900), (1400, 1050), (1360, 768), (1280, 1024), (1280, 960), (1280, 800\r\n), (1280, 768), (1280, 720), (1152, 864), (1024, 768), (800, 600), (720, 576), (\r\n720, 480), (640, 480)]", "users_id": null, "datetimeon": "2010-04-14T13:28:54", "link": "pygame.display.list_modes", "id": 3102}, {"content": "game www.699le.com", "users_id": null, "datetimeon": "2010-04-15T06:18:45", "link": "pygame.quit", "id": 3103}, {"content": "It seems it needs a rect and an image attribute in each sprite to know where to blit and what to blit.\r\nIs it possible to add a third attribute, another rect to say which part of the surface to draw ?\r\n\r\nThat's the way I use blit to animate sprite, and don't find how to do so with a RenderUpdate...", "users_id": null, "datetimeon": "2010-04-15T15:48:17", "link": "pygame.sprite.RenderUpdates", "id": 3104}, {"content": "This will be extremely useful!", "users_id": 1681, "datetimeon": "2009-08-15T19:21:45", "link": "pygame.transform.average_surfaces", "id": 2917}, {"content": "I've found that rendering text over the transparent part of a color-keyed surface \r\ntends to look pretty bad. Using the SRCALPHA flag on the surface instead of color \r\nkeying fixes the problem. Also note, don't render your text every frame! Store \r\nyour surfaces between frames and simply re-blit them. Only re-render your \r\nsurfaces when such is necessary.", "users_id": null, "datetimeon": "2010-04-05T11:58:04", "link": "Font.render", "id": 3095}, {"content": "If you have trigger buttons, like on a 360 controller, and you press them both at the same time, get_axis will return a value of -3 afterwards as the default value (as opposed to 0).", "users_id": null, "datetimeon": "2010-04-06T12:41:07", "link": "Joystick.get_axis", "id": 3096}, {"content": "Apparently not.", "users_id": null, "datetimeon": "2010-04-08T02:58:20", "link": "Group.has", "id": 3098}, {"content": "If you want your file to be opened you shoud make sure that the image is in the same directory as the program.\r\nThen its very simple:\r\n\r\n#Everything I put in [] is that you can choose the name\r\n>>> [image_name] = pygame.image.load(os.path.join('file_name'))\r\n>>> screen.blit([image_name], ([Xposition],[Yposition]))\r\n\r\nmake sure that 'file_name' it's written with no mistakes =)", "users_id": null, "datetimeon": "2010-04-12T17:16:50", "link": "pygame.image.load", "id": 3100}, {"content": "pygame.time cannot be initialized. that means you can't use pygame.time.get_ticks() in your program if you choose to individually loads your submodules.", "users_id": null, "datetimeon": "2009-08-16T18:10:41", "link": "pygame.init", "id": 2919}, {"content": "Yes it does, but its called LayeredDirty", "users_id": null, "datetimeon": "2010-03-29T12:14:10", "link": "pygame.sprite.DirtySprite", "id": 3089}, {"content": "How to create a surface that is entirely transparent?", "users_id": null, "datetimeon": "2010-03-29T15:03:49", "link": "pygame.Surface", "id": 3090}, {"content": "No really, what does this do?", "users_id": null, "datetimeon": "2010-03-29T23:51:53", "link": "Surface.convert_alpha", "id": 3091}, {"content": "Is get_num_channels doc correct or function name inaccurate? On OSX sound with 2 channels returns 0.", "users_id": null, "datetimeon": "2010-03-30T09:00:21", "link": "pygame.mixer.Sound", "id": 3092}, {"content": "Actually, I think C 4 is note 60, as per e.g. http://tomscarff.110mb.com/midi_analyser/midi_note_numbers_for_octaves.htm and my own testing.", "users_id": null, "datetimeon": "2010-04-01T17:00:48", "link": "Output.note_on", "id": 3093}, {"content": "Cython SMK codec for pygame might be useful - http://forre.st/pysmk", "users_id": null, "datetimeon": "2010-04-04T19:49:02", "link": "pygame.movie", "id": 3094}, {"content": "Some basic sample code for (approximately) constraining a bunch of text to a given width:\r\n\r\nwordsToWrite = toWrite.rstrip().split(\" \") #Get rid of the newline char and split on spaces\r\ncurrLine = \"\"\r\nnumLines = 0\r\nmaxWidthFound = 0\r\nfor word in wordsToWrite:\r\n    currLine = currLine + \" \" + word #Add the next word to the line\r\n\r\n    if ((textFont.size(currLine))[0] > maxAllowedWidth): #Check if the width of the line exceeds the set limit\r\n\r\n        if (textFont.size(currLine))[0] > maxWidthFound: #Get the maximum line width found\r\n            maxWidthFound = (textFont.size(currLine))[0]\r\n\r\n        lines.append (textFont.render(currLine, 1, color, bgcolor)) #Add the rendered line to a list\r\n        currLine = \"\"\r\n        numLines = numLines + 1\r\n\r\nif currLine != \"\": #Once we exit the loop, we will probably still have a line to be rendered\r\n    lines.append (textFont.render(currLine, 1, color, bgcolor))\r\n    currLine = \"\"\r\n    numLines = numLines + 1\r\n\r\nself.image = pygame.Surface((maxWidthFound + 20, numLines * textFont.get_height() + 20)) #Create a surface of the appropriate size\r\n\r\nfor lineNum in range(numLines): \r\n    self.image.blit(lines[lineNum], (10,lineNum * textFont.get_height() + 10))", "users_id": 3940, "datetimeon": "2009-07-20T07:29:06", "link": "Font.render", "id": 2887}, {"content": "For all of these drawing functions, the coordinates are relative to the surface\r\nyou are drawing to. i.e. if you are drawing to a surface somewhere in the middle of\r\nthe screen, and you draw a circle at (0,0), its center will be the top-left corner\r\nof the surface being drawn to, not the top-left corner of the screen", "users_id": 3940, "datetimeon": "2009-07-20T07:23:36", "link": "pygame.draw", "id": 2886}, {"content": "#! /usr/bin/python\r\n# using sprites_rgba.png from http://img17.imageshack.us/img17/3166/spritesrgba.png\r\nimport sys, pygame, math, os, random\r\nfrom pygame.locals import *\r\npygame.init()\r\nsize=width,height=960,240;screen=pygame.display.set_mode(size);pygame.display.set_caption(\"multiplayer sprite test with collisions\")\r\nspd=4;amnt=4;ampl=8;xpos=[0]*amnt;ypos=[0]*amnt;rotv=[0]*amnt;sprid=[];spridr=[]   #some arrays and variables\r\nfor i in range (0,amnt,1):\r\n  xpos[i]=64+(128*i)+random.randint(0,32);ypos[i]=64+random.randint(0,32);rotv[i]=random.randint(0,359)\r\nsprall=pygame.image.load(\"sprites_rgba.png\")  #loading sprites\r\nfor i in range (0,4,1):\r\n  spritetmp=sprall.subsurface(i*64,0,64,64);spriterecttmp=spritetmp.get_rect()\r\n  sprid.append(spritetmp);spridr.append(spriterecttmp)\r\nrotincr=5\r\nwhile 1:\r\n  key=pygame.key.get_pressed()  #checking pressed keys\r\n  if key[pygame.K_a]:xpos[0]-=spd\r\n  if key[pygame.K_d]:xpos[0]+=spd\r\n  if key[pygame.K_w]:ypos[0]-=spd\r\n  if key[pygame.K_s]:ypos[0]+=spd\r\n  if key[pygame.K_z]:rotv[0]+=rotincr\r\n  if key[pygame.K_x]:rotv[0]-=rotincr\r\n  if key[pygame.K_f]:xpos[1]-=spd\r\n  if key[pygame.K_h]:xpos[1]+=spd\r\n  if key[pygame.K_t]:ypos[1]-=spd\r\n  if key[pygame.K_g]:ypos[1]+=spd\r\n  if key[pygame.K_v]:rotv[1]+=rotincr\r\n  if key[pygame.K_b]:rotv[1]-=rotincr\r\n  if key[pygame.K_j]:xpos[2]-=spd\r\n  if key[pygame.K_l]:xpos[2]+=spd\r\n  if key[pygame.K_i]:ypos[2]-=spd\r\n  if key[pygame.K_k]:ypos[2]+=spd\r\n  if key[pygame.K_m]:rotv[2]+=rotincr\r\n  if key[pygame.K_COMMA]:rotv[2]-=rotincr\r\n  if key[pygame.K_LEFT]: xpos[3]-=spd\r\n  if key[pygame.K_RIGHT]:xpos[3]+=spd\r\n  if key[pygame.K_UP]:   ypos[3]-=spd\r\n  if key[pygame.K_DOWN]: ypos[3]+=spd\r\n  if key[pygame.K_KP0]:  rotv[3]+=rotincr\r\n  if key[pygame.K_KP_PERIOD]:rotv[3]-=rotincr\r\n  bgcolour=0x998877    #checking collisions\r\n  if spridr[0].colliderect(spridr[1]):bgcolour=0xAA5555\r\n  if spridr[0].colliderect(spridr[2]):bgcolour=0x55AA55\r\n  if spridr[0].colliderect(spridr[3]):bgcolour=0x5555AA\r\n  if spridr[1].colliderect(spridr[2]):bgcolour=0x55AAAA\r\n  if spridr[1].colliderect(spridr[3]):bgcolour=0xAA55AA\r\n  if spridr[2].colliderect(spridr[3]):bgcolour=0xAAAA55\r\n  screen.fill(bgcolour)\r\n  for i in range (0,amnt,1):    #displaying sprites\r\n    spridr[i].centerx=xpos[i]\r\n    spridr[i].centery=ypos[i]\r\n    tmq=pygame.transform.rotate(sprid[i],rotv[i])\r\n    screen.blit(tmq,spridr[i])\r\n  for event in pygame.event.get():  #praxis stuff\r\n    if event.type==pygame.QUIT:sys.exit()\r\n  pygame.display.flip();pygame.time.delay(1000/50)", "users_id": null, "datetimeon": "2009-07-19T10:07:08", "link": "pygame.transform.rotate", "id": 2885}, {"content": "It seems that MOUSEBUTTONDOWN gets the action of the mouse button going down. if you hold the button, MOUSEBUTTONDOWN becomes false", "users_id": null, "datetimeon": "2009-08-20T18:10:02", "link": "pygame.mouse.get_pressed", "id": 2921}, {"content": "please share full working snippets", "users_id": null, "datetimeon": "2009-07-19T07:18:18", "link": "pygame.transform.rotate", "id": 2884}, {"content": "\"The Color class represents RGBA color values using a value range of 0-255\"\r\n\r\nWas that not clear enough for you?", "users_id": null, "datetimeon": "2010-03-28T16:39:28", "link": "Color.r", "id": 3088}, {"content": "this doesn't return a boolean, it returns a sprite list", "users_id": null, "datetimeon": "2009-08-26T11:05:17", "link": "pygame.sprite.spritecollideany", "id": 2923}, {"content": "Calling set_mode once, to set a fullscreen resolution with an opengl surface, works great.\r\nCalling it a second time, passing a different fullscreen resolution, does not. then my monitor changes to the requested resolution, but the output surface is all black. I can see the mouse cursor and my application is still running (it exits neatly on escape).\r\nAm I doing it wrong? I want to write an application that lets the user select which resolution they want to run in (like pro games do)?\r\n", "users_id": null, "datetimeon": "2010-03-23T16:05:05", "link": "pygame.display.set_mode", "id": 3083}, {"content": "has anyone a working xp example handy? thx", "users_id": null, "datetimeon": "2010-03-24T12:11:44", "link": "Surface.blit", "id": 3084}, {"content": "has anyone a working xp example handy? thx a lot", "users_id": null, "datetimeon": "2010-03-24T12:12:33", "link": "pygame.movie", "id": 3085}, {"content": "sorry posted wrongly", "users_id": null, "datetimeon": "2010-03-24T12:12:56", "link": "Surface.blit", "id": 3086}, {"content": "The messages here:\r\nhttp://www.mail-archive.com/pygame-users@seul.org/msg10616.html\r\n\r\nimply that GL_SWAP_CONTROL can also be passed to gl_set_attribute to control whether\r\ndisplay swaps honor vsync.\r\n", "users_id": 11, "datetimeon": "2010-03-25T15:42:06", "link": "pygame.display.gl_set_attribute", "id": 3087}, {"content": "Is this the best way to get the size of the output window (or screen resolution if window is fullscreen?)", "users_id": null, "datetimeon": "2010-03-23T06:34:27", "link": "pygame.display.get_surface", "id": 3082}, {"content": "If you provide no argument for the background colour, \r\nthe area around the text will be transparent, BUT that's only\r\nif there are two sprites in the same group. For example:\r\n\r\nimport pygame\r\nfrom pygame.locals import *\r\n\r\npygame.init()\r\nscreen = pygame.display.set_mode((500,500))\r\npygame.display.get_surface().fill((0,0,255))\r\n\r\nbackground = pygame.Surface(screen.get_size())\r\nbackground.fill((0,0,0))\r\n\r\ntextFont = pygame.font.Font(None, 30)\r\nimage = textFont.render(\"BLLLAHHHH\", 0, (255,0,0))\r\na = pygame.sprite.Sprite()\r\na.image = image\r\na.rect = image.get_rect()\r\na.rect.center = ((50,50))\r\n\r\nb = pygame.sprite.Sprite()\r\nb.image = image\r\nb.rect = image.get_rect()\r\nb.rect.center = ((60,60))\r\n\r\ngroup = pygame.sprite.RenderUpdates(a, b)\r\n\r\nwhile 1:\r\n    group.clear(screen, background)\r\n    rects = group.draw(screen)\r\n    pygame.display.update(rects)\r\n\r\nwill have two copies of the same text shown, and the area around them is transparent.\r\n\r\nHowever, in this example:\r\n\r\nimport pygame\r\nfrom pygame.locals import *\r\n\r\npygame.init()\r\nscreen = pygame.display.set_mode((500,500))\r\npygame.display.get_surface().fill((0,0,255))\r\n\r\nbackground = pygame.Surface(screen.get_size())\r\nbackground.fill((0,0,0))\r\n\r\ntextFont = pygame.font.Font(None, 30)\r\nimage = textFont.render(\"BLLLAHHHH\", 0, (255,0,0))\r\na = pygame.sprite.Sprite()\r\na.image = image\r\na.rect = image.get_rect()\r\na.rect.center = ((50,50))\r\n\r\nb = pygame.sprite.Sprite()\r\nb.image = image\r\nb.rect = image.get_rect()\r\nb.rect.center = ((60,60))\r\n\r\ngroupA = pygame.sprite.RenderUpdates(a)\r\ngroupB = pygame.sprite.RenderUpdates(b)\r\n\r\nwhile 1:\r\n    groupA.clear(screen, background)\r\n    rects = groupA.draw(screen)\r\n    groupB.clear(screen, background)\r\n    rects.extend(groupB.draw(screen))\r\n    pygame.display.update(rects)\r\n\r\nthere is a black box around one of the sprites that covers the other one.\r\nI think what they mean by transparency is what happens in the first example.", "users_id": null, "datetimeon": "2009-07-18T04:03:26", "link": "Font.render", "id": 2881}, {"content": "Pygame THECOLORS as HTML\r\nhttps://sites.google.com/site/meticulosslacker/pygame-thecolors", "users_id": 3701, "datetimeon": "2010-03-18T03:10:26", "link": "pygame.Color", "id": 3078}, {"content": "Should be \"buffer\", not \"buffersize\"", "users_id": 1681, "datetimeon": "2010-03-19T00:36:48", "link": "pygame.mixer.pre_init", "id": 3079}, {"content": "Put this first:\r\nfor e in pygame.event.get()", "users_id": 1681, "datetimeon": "2010-03-20T19:51:20", "link": "pygame.key.set_repeat", "id": 3080}, {"content": "mod is the bitfield of KMOD_* constants:\r\npygame.KMOD_NONE\t0\r\npygame.KMOD_LSHIFT\t1\r\npygame.KMOD_RSHIFT\t2\r\npygame.KMOD_SHIFT\t3\r\npygame.KMOD_LCTRL\t64\r\npygame.KMOD_RCTRL\t128\r\npygame.KMOD_CTRL\t192\r\npygame.KMOD_LALT\t256\r\npygame.KMOD_RALT\t512\r\npygame.KMOD_ALT\t\t768\r\npygame.KMOD_LMETA\t1024\r\npygame.KMOD_RMETA\t2048\r\npygame.KMOD_META\t3072\r\npygame.KMOD_NUM\t\t4096\r\npygame.KMOD_CAPS\t8192\r\npygame.KMOD_MODE\t16384", "users_id": 4684, "datetimeon": "2010-03-23T06:16:44", "link": "pygame.event", "id": 3081}, {"content": "when i try this it says that the 'e' in e.type is undefined? any suggestions?\r\n", "users_id": null, "datetimeon": "2010-03-16T15:33:05", "link": "pygame.key.set_repeat", "id": 3075}, {"content": "good", "users_id": null, "datetimeon": "2010-03-17T23:46:58", "link": "pygame.event.Event", "id": 3076}, {"content": "#! /usr/bin/python\r\n# using sprites_rgba.png from http://img17.imageshack.us/img17/3166/spritesrgba.png\r\nimport sys, pygame, math, os, random\r\nfrom pygame.locals import *\r\npygame.init()\r\nsize=width,height=1024,256;screen=pygame.display.set_mode(size);pygame.display.set_caption(\"multiplayer sprite test with collisions\")\r\nspd=4;amnt=4;ampl=8;xpos=[0]*amnt;ypos=[0]*amnt;sprid=[];spridr=[]   #some arrays and variables\r\nfor i in range (0,amnt,1):\r\n  xpos[i]=64+(128*i)+random.randint(0,32);ypos[i]=64+random.randint(0,32)\r\nsprall=pygame.image.load(\"sprites_rgba.png\")  #loading sprites\r\nfor i in range (0,4,1):\r\n  spritetmp=sprall.subsurface(i*64,0,64,64);spriterecttmp=spritetmp.get_rect()\r\n  sprid.append(spritetmp);spridr.append(spriterecttmp)\r\nwhile 1:\r\n  key=pygame.key.get_pressed()  #checking pressed keys\r\n  if key[pygame.K_a]:xpos[0]-=spd\r\n  if key[pygame.K_d]:xpos[0]+=spd\r\n  if key[pygame.K_w]:ypos[0]-=spd\r\n  if key[pygame.K_s]:ypos[0]+=spd\r\n  if key[pygame.K_f]:xpos[1]-=spd\r\n  if key[pygame.K_h]:xpos[1]+=spd\r\n  if key[pygame.K_t]:ypos[1]-=spd\r\n  if key[pygame.K_g]:ypos[1]+=spd\r\n  if key[pygame.K_j]:xpos[2]-=spd\r\n  if key[pygame.K_l]:xpos[2]+=spd\r\n  if key[pygame.K_i]:ypos[2]-=spd\r\n  if key[pygame.K_k]:ypos[2]+=spd\r\n  if key[pygame.K_LEFT]: xpos[3]-=spd\r\n  if key[pygame.K_RIGHT]:xpos[3]+=spd\r\n  if key[pygame.K_UP]:   ypos[3]-=spd\r\n  if key[pygame.K_DOWN]: ypos[3]+=spd\r\n  bgcolour=0x998877    #checking collisions\r\n  if spridr[0].colliderect(spridr[1]):bgcolour=0xAA5555\r\n  if spridr[0].colliderect(spridr[2]):bgcolour=0x55AA55\r\n  if spridr[0].colliderect(spridr[3]):bgcolour=0x5555AA\r\n  if spridr[1].colliderect(spridr[2]):bgcolour=0x55AAAA\r\n  if spridr[1].colliderect(spridr[3]):bgcolour=0xAA55AA\r\n  if spridr[2].colliderect(spridr[3]):bgcolour=0xAAAA55\r\n  screen.fill(bgcolour)\r\n  for i in range (0,amnt,1):    #displaying sprites\r\n    spridr[i].left=xpos[i];spridr[i].top=ypos[i];screen.blit(sprid[i],spridr[i])\r\n  for event in pygame.event.get():  #praxis stuff\r\n    if event.type==pygame.QUIT:sys.exit()\r\n  pygame.display.flip();pygame.time.delay(1000/50)", "users_id": null, "datetimeon": "2009-07-14T09:12:03", "link": "Rect.colliderect", "id": 2879}, {"content": "#! /usr/bin/python\r\n# using sprites_rgba.png from http://img17.imageshack.us/img17/3166/spritesrgba.png\r\nimport sys, pygame, math, os, random\r\nfrom pygame.locals import *\r\npygame.init()\r\nsize=width,height=1024,256;screen=pygame.display.set_mode(size);pygame.display.set_caption(\"multiplayer sprite test with collisions\")\r\nspd=4;amnt=4;ampl=8;xpos=[0]*amnt;ypos=[0]*amnt;sprid=[];spridr=[]   #some arrays and variables\r\nfor i in range (0,amnt,1):\r\n  xpos[i]=64+(128*i)+random.randint(0,32);ypos[i]=64+random.randint(0,32)\r\nsprall=pygame.image.load(\"sprites_rgba.png\")  #loading sprites\r\nfor i in range (0,4,1):\r\n  spritetmp=sprall.subsurface(i*64,0,64,64);spriterecttmp=spritetmp.get_rect()\r\n  sprid.append(spritetmp);spridr.append(spriterecttmp)\r\nwhile 1:\r\n  key=pygame.key.get_pressed()  #checking pressed keys\r\n  if key[pygame.K_a]:xpos[0]-=spd\r\n  if key[pygame.K_d]:xpos[0]+=spd\r\n  if key[pygame.K_w]:ypos[0]-=spd\r\n  if key[pygame.K_s]:ypos[0]+=spd\r\n  if key[pygame.K_f]:xpos[1]-=spd\r\n  if key[pygame.K_h]:xpos[1]+=spd\r\n  if key[pygame.K_t]:ypos[1]-=spd\r\n  if key[pygame.K_g]:ypos[1]+=spd\r\n  if key[pygame.K_j]:xpos[2]-=spd\r\n  if key[pygame.K_l]:xpos[2]+=spd\r\n  if key[pygame.K_i]:ypos[2]-=spd\r\n  if key[pygame.K_k]:ypos[2]+=spd\r\n  if key[pygame.K_LEFT]: xpos[3]-=spd\r\n  if key[pygame.K_RIGHT]:xpos[3]+=spd\r\n  if key[pygame.K_UP]:   ypos[3]-=spd\r\n  if key[pygame.K_DOWN]: ypos[3]+=spd\r\n  bgcolour=0x998877    #checking collisions\r\n  if spridr[0].colliderect(spridr[1]):bgcolour=0xAA5555\r\n  if spridr[0].colliderect(spridr[2]):bgcolour=0x55AA55\r\n  if spridr[0].colliderect(spridr[3]):bgcolour=0x5555AA\r\n  if spridr[1].colliderect(spridr[2]):bgcolour=0x55AAAA\r\n  if spridr[1].colliderect(spridr[3]):bgcolour=0xAA55AA\r\n  if spridr[2].colliderect(spridr[3]):bgcolour=0xAAAA55\r\n  screen.fill(bgcolour)\r\n  for i in range (0,amnt,1):    #displaying sprites\r\n    spridr[i].left=xpos[i];spridr[i].top=ypos[i];screen.blit(sprid[i],spridr[i])\r\n  for event in pygame.event.get():  #praxis stuff\r\n    if event.type==pygame.QUIT:sys.exit()\r\n  pygame.display.flip();pygame.time.delay(1000/50)", "users_id": null, "datetimeon": "2009-07-14T09:09:26", "link": "pygame.key.get_pressed", "id": 2878}, {"content": "This creates a mask from the surface which has all the pixels set which have color values above or equal to those in color, but below (and not equal to) the values in threshold.  So no pixel with a 255 value can possibly be considered.  And the default threshold doesn't let the mask have any set pixels for any given surface.", "users_id": null, "datetimeon": "2010-03-13T06:03:20", "link": "pygame.mask.from_threshold", "id": 3073}, {"content": "It appears if you end up rotating your sprites, you need to regenerate their masks when collision is detected via the rect test, or the masks won't match with the corresponding imagery.", "users_id": null, "datetimeon": "2009-07-13T01:08:45", "link": "pygame.sprite.collide_mask", "id": 2876}, {"content": "If you try to use fadeout, the queued sound will begin, as opposed to stop and pause.", "users_id": 2122, "datetimeon": "2009-07-12T22:43:31", "link": "Channel.queue", "id": 2875}, {"content": "This didn't seem clear in the documentation. I checked the source (v. 1.8.1).\r\n\r\nThis takes a sequence of (R, G, B) triplets. This is currently the only way the palette can be defined.\r\n", "users_id": null, "datetimeon": "2009-07-12T13:50:36", "link": "Surface.set_palette", "id": 2874}, {"content": "A less look at me demo:\r\n\r\nimport pygame.font\r\nimport pygame.surface\r\n\r\ndef gameprint(text,xx,yy,color):\r\n   font = pygame.font.SysFont(\"Courier New\",18)\r\n   ren = font.render(text,1,color)\r\n   screen.blit(ren, (xx,yy))\r\n\r\n", "users_id": null, "datetimeon": "2009-08-28T19:19:15", "link": "Font.render", "id": 2927}, {"content": "I ran into that problem -- the solution is to initialize pygame first :)\r\n\r\nimport pygame\r\npygame.init()\r\nprint pygame.key.name(pygame.K_UP)", "users_id": 1306, "datetimeon": "2009-08-29T04:11:27", "link": "pygame.key.name", "id": 2928}, {"content": "how to fadein() ?", "users_id": null, "datetimeon": "2010-03-09T06:18:13", "link": "pygame.mixer.music.fadeout", "id": 3068}, {"content": "cfadsfsadgfdh hHAHAHAH\r\n\r\n", "users_id": null, "datetimeon": "2010-03-10T08:48:11", "link": "pygame.event.pump", "id": 3070}, {"content": "This function, at least on my system using Windows XP, \r\nonly one key is repeated at a time.  So, moving a sprite\r\naround the screen using the arrow keys can only move it\r\nin one direction at a time.  No diagonal by using two arrows\r\nat the same time...\r\n\r\nAn alternative is to set an object's state on KEYDOWN and reset \r\nit on KEYUP.\r\n\r\nExample:\r\n\r\n\tif e.type == KEYDOWN:\r\n\t\tif e.key == K_LEFT:\r\n\t\t\tship.xspeed -= SPEED\r\n\t\telif e.key == K_RIGHT:\r\n\t\t\tship.xspeed += SPEED\r\n\t\telif e.key == K_UP:\r\n\t\t\tship.yspeed -= SPEED\r\n\t\telif e.key == K_DOWN:\r\n\t\t\tship.yspeed += SPEED\r\n\t\telif e.key == K_SPACE\r\n\t\t\tship.firing = True\r\n\telif e.type == KEYUP:\r\n\t\tif e.key == K_LEFT:\r\n\t\t\tship.xspeed += SPEED\r\n\t\telif e.key == K_RIGHT:\r\n\t\t\tship.xspeed -= SPEED\r\n\t\telif e.key == K_UP:\r\n\t\t\tship.yspeed += SPEED\r\n\t\telif e.key == K_DOWN:\r\n\t\t\tship.yspeed -= SPEED\r\n\t\telif e.key == K_SPACE:\r\n\t\t\tship.firing == False", "users_id": null, "datetimeon": "2010-03-12T11:41:32", "link": "pygame.key.set_repeat", "id": 3072}, {"content": "Only if you do not import all the pygame locals:\r\n\r\nfrom pygame.locals import *\r\n", "users_id": null, "datetimeon": "2009-07-10T23:11:01", "link": "pygame.mouse.get_pressed", "id": 2871}, {"content": "Note that\r\nmyrect.move(x,y)\r\ndoes not change the Rect myrect. Only\r\nmyrect = myrect.move(x,y)\r\ndoes.", "users_id": null, "datetimeon": "2010-03-03T13:42:28", "link": "Rect.move", "id": 3066}, {"content": "My copy of pygames uses numeric as default, not numpy (as stated above).\r\nThe best thing is probably to explicitly state the array type used (e.g. pygame.sndarray.use_arraytype('numpy')) to avoid problems with future convention changes.", "users_id": null, "datetimeon": "2010-03-08T09:27:57", "link": "pygame.sndarray", "id": 3067}, {"content": "The docs are faulty here. scroll() takes two integers and not a tuple or a list.", "users_id": null, "datetimeon": "2009-08-30T08:39:48", "link": "Surface.scroll", "id": 2930}, {"content": "It appears that when the delay is set to zero, \r\nkey.set_repeat is returned to the default, disabled state.\r\nTo set it to a minimum, essentially no delay, just set it to 1.\r\n\r\npygame.key.set_repeat(0,50) #Doesn't work.\r\npygame.key.set_repeat(1,50) #Works with essentially no delay.", "users_id": 3708, "datetimeon": "2010-03-02T22:20:03", "link": "pygame.key.set_repeat", "id": 3065}, {"content": "What about Duel screen displays? ", "users_id": null, "datetimeon": "2009-07-09T13:26:59", "link": "pygame.display.set_mode", "id": 2869}, {"content": "are yoh sure that sign are correct ", "users_id": null, "datetimeon": "2010-03-02T18:18:51", "link": "pygame.key", "id": 3063}, {"content": "It appears that when the delay is set to zero, \r\nkey.set_repeat is returned to the default, disabled state.\r\nTo set it to a minimum, essentially no delay, just set it to 1.\r\n\r\npygame.key.set_repeat(0,50) #Doesn't work.\r\npygame.key.set_repeat(1,50) #Works with essentially no delay.", "users_id": 3708, "datetimeon": "2010-03-02T22:19:26", "link": "pygame.key.set_repeat", "id": 3064}, {"content": "import pygame\r\nfrom pygame.locals import *\r\n\r\ndef timerFunc():\r\n    print \"Timer CallBack\"\r\n\r\npygame.init()\r\npygame.time.set_timer(USEREVENT+1, 100)\r\nwhile 1:\r\n    for event in pygame.event.get():\r\n        if event.type == USEREVENT+1:\r\n            timerFunc() #calling the function wheever we get timer event.\r\n        if event.type == QUIT:\r\n            break", "users_id": null, "datetimeon": "2009-08-31T04:50:51", "link": "pygame.time.set_timer", "id": 2932}, {"content": "this is helpful thanks son", "users_id": null, "datetimeon": "2009-08-31T22:47:55", "link": "pygame.font", "id": 2933}, {"content": "Wouldn't the center simply be X = X2 - X1  Y = Y2 - Y1 ?  Bottom right minus top left.  That doesn't require any special math functions, yes?", "users_id": null, "datetimeon": "2009-04-22T14:45:07", "link": "pygame.draw.rect", "id": 2557}, {"content": "#! /usr/bin/python\r\n# using sprites_rgba.png from http://img17.imageshack.us/img17/3166/spritesrgba.png\r\nimport sys, pygame, math, os, random\r\nfrom pygame.locals import *\r\npygame.init()\r\nsize=width,height=1024,256;screen=pygame.display.set_mode(size)\r\namnt=64;ampl=8;xpos=[0]*amnt;ypos=[0]*amnt;xdif=[0]*amnt;ydif=[0]*amnt;snum=[0]*amnt\r\nfor i in range (0,amnt,1):\r\n  xpos[i]=random.randint(0,width)\r\n  ypos[i]=random.randint(0,height)\r\n  xdif[i]=random.randint(0,ampl*2)-ampl\r\n  ydif[i]=random.randint(0,ampl*2)-ampl\r\n  snum[i]=random.randint(0,3)\r\nball=pygame.image.load(\"sprites_rgba.png\");ballrect=ball.get_rect()\r\nsprite00=ball.subsurface((  0,0,64,64));spriterect00=sprite00.get_rect()\r\nsprite01=ball.subsurface(( 64,0,64,64));spriterect01=sprite01.get_rect()\r\nsprite02=ball.subsurface((128,0,64,64));spriterect02=sprite02.get_rect()\r\nsprite03=ball.subsurface((192,0,64,64));spriterect03=sprite03.get_rect()\r\nwhile 1:\r\n  for event in pygame.event.get():\r\n    if event.type==pygame.QUIT:sys.exit()\r\n  for i in range (0,amnt,1):\r\n    xpos[i]+=xdif[i];ypos[i]+=ydif[i]\r\n    if xpos[i]>width:xpos[i]-=(width+64)\r\n    if ypos[i]>height:ypos[i]-=(height+64)\r\n    if xpos[i]<-64:xpos[i]+=(width+64)\r\n    if ypos[i]<-64:ypos[i]+=(height+64)\r\n  screen.fill(0x998877)\r\n  for i in range (0,amnt,1):\r\n    if snum[i]==0:\r\n      spriterect00.left=xpos[i];spriterect00.top=ypos[i];screen.blit(sprite00,spriterect00)\r\n    if snum[i]==1:\r\n      spriterect01.left=xpos[i];spriterect01.top=ypos[i];screen.blit(sprite01,spriterect01)\r\n    if snum[i]==2:\r\n      spriterect02.left=xpos[i];spriterect02.top=ypos[i];screen.blit(sprite02,spriterect02)\r\n    if snum[i]==3:\r\n      spriterect03.left=xpos[i];spriterect03.top=ypos[i];screen.blit(sprite03,spriterect03)\r\n  pygame.display.flip()\r\n  pygame.time.delay(1000/50)", "users_id": null, "datetimeon": "2009-07-07T10:21:37", "link": "Surface.subsurface", "id": 2867}, {"content": "Usage of the event queue for USEREVENT-style events is limited by the maximum size of the SDL event queue, which is 256.\r\nSo, if more events (of any sort) get posted to the queue, you will get an exception stating \"error: Event queue full\".\r\nIf you expect to generate more than a few user events before they are posted, consider a separate queue.", "users_id": null, "datetimeon": "2009-05-03T10:30:15", "link": "pygame.event.post", "id": 2560}, {"content": "Is this the same as pygame.surface.fill(color, rect)?", "users_id": null, "datetimeon": "2009-05-05T15:48:33", "link": "pygame.draw.rect", "id": 2561}, {"content": "Just a note, Nautilus, the default file browser in GNOME sets copied files as 'x-special/gnome-copied-files', if you retrieve it, it holds the location as plain text.", "users_id": null, "datetimeon": "2009-08-02T21:50:25", "link": "pygame.scrap", "id": 2901}, {"content": "so someone can share some Surface.subsurface snippet? (one about sprites is very welcome)", "users_id": null, "datetimeon": "2009-07-06T22:14:24", "link": "Surface.subsurface", "id": 2866}, {"content": "test\r\ntest", "users_id": null, "datetimeon": "2009-07-03T15:37:54", "link": "Surface.copy", "id": 2864}, {"content": "test <br> test", "users_id": null, "datetimeon": "2009-07-03T15:37:38", "link": "Surface.copy", "id": 2863}, {"content": "somewhere in the pygame google-group i found it's possible to have multiple sprites based on just one picture plenty of sprite drawings, without having to have them cropped file by file - how can we do this?", "users_id": null, "datetimeon": "2009-07-03T15:37:10", "link": "Surface.copy", "id": 2862}, {"content": "missing commands for drawing bezier lines - some gpl sources can be find at http://nitrofurano.linuxkafe.com/sdlbasic - just needed to be recoded to Pygame, but it's not that difficult task at all...", "users_id": null, "datetimeon": "2009-07-03T13:28:41", "link": "pygame.draw", "id": 2861}, {"content": "What does the error 'text has zero width' mean?\r\nI was simply printing 'Hello World!' to the screen.\r\nI was fiddling with text size, jumped from 32 to 12 and I got the above error\r\nNow the only way to stop the error is to have no text ('')", "users_id": null, "datetimeon": "2009-07-03T07:24:30", "link": "Font.render", "id": 2860}, {"content": "It would be handy if the range of values was given. It appears to be 0 to 255.", "users_id": null, "datetimeon": "2009-07-02T12:01:48", "link": "Color.r", "id": 2859}, {"content": "don't you know its a bad idea to leave your email on the internet?\r\n-wekul", "users_id": null, "datetimeon": "2009-06-29T09:02:53", "link": "pygame.key", "id": 2857}, {"content": "With event.type == MOUSEBUTTONDOWN - Error! \r\nWrite it - event.type == pygame.MOUSEBUTTONDOWN", "users_id": null, "datetimeon": "2009-07-02T06:50:36", "link": "pygame.mouse.get_pressed", "id": 2858}, {"content": "In Pygame 1.9 Surface.copy() does not preserve the original image's alpha. If\r\nyour image has an alpha you need to:\r\n\r\ns1 = s0.copy()\r\ns1.set_alpha(s0.get_alpha())\r\n", "users_id": null, "datetimeon": "2010-02-21T12:03:18", "link": "Surface.copy", "id": 3059}, {"content": "In the comment on February 21, 2010 10:32am, in the last sentence I meant,\r\n\"for a sample i, the value of the left channel is a[i][0], the right channel\r\na[i][1],\" of course.", "users_id": null, "datetimeon": "2010-02-21T14:25:02", "link": "pygame.sndarray", "id": 3060}, {"content": "When using numpy, be careful to set the type of the array correctly.\r\nFor instance, when you're in signed 16-bit stereo mode, e.g., when you've\r\ncalled\r\n\r\npygame.mixer.pre_init(size = -16, channels = 2)\r\n\r\nand you want to create an array to use for synthesizing a sound, don't forget\r\nthe dtype argument in\r\n\r\nsamples = numpy.zeros((n_samples, 2), dtype = numpy.int16)", "users_id": null, "datetimeon": "2010-02-21T10:37:46", "link": "pygame.sndarray", "id": 3058}, {"content": "The above is hard to understand, at least for me. For instance, what does\r\n\"A stereo sound file has two values per sample\" mean? Here's what it means:\r\nif you're in mono, and your array has N samples, the shape of the array\r\nshould be (N,) (a d=1 array of N elements). If you're in stereo, then the\r\nshape should be (N,2) (a d=2 array, Nx2); for a sample i, the value of the left\r\nchannel is a[N][0], the right channel a[N][1].", "users_id": null, "datetimeon": "2010-02-21T10:32:01", "link": "pygame.sndarray", "id": 3057}, {"content": "You could always do dir(pygame.Rect) or whatever.", "users_id": null, "datetimeon": "2009-06-28T09:26:48", "link": "Surface.get_rect", "id": 2854}, {"content": "HTML (#rrggbbaa) format doesn't seem to work with 1.9.1 ... gives a \"ValueError: invalid argument\" exception.", "users_id": null, "datetimeon": "2009-12-02T14:01:18", "link": "pygame.Color", "id": 3019}, {"content": "(What's even more odd is that it works from the python console ... just not in a program)", "users_id": null, "datetimeon": "2009-12-02T14:07:37", "link": "pygame.Color", "id": 3020}, {"content": "it dun wok", "users_id": null, "datetimeon": "2009-12-03T12:43:47", "link": "pygame.draw.arc", "id": 3021}, {"content": "Re: noise and static was occurring on my Linux box, and I was able to ameliorate it\r\nby specifically setting my mixer:\r\n    pygame.mixer.pre_init(44100, -16, 2)\r\n    pygame.init()\r\n", "users_id": null, "datetimeon": "2009-12-07T01:43:58", "link": "Sound.play", "id": 3022}, {"content": "its set_palette_at, not set_at", "users_id": null, "datetimeon": "2009-12-15T12:51:36", "link": "Surface.set_palette_at", "id": 3023}, {"content": "hey matthew sucks in snping", "users_id": null, "datetimeon": "2009-12-16T15:50:04", "link": "pygame.draw.ellipse", "id": 3024}, {"content": "ellipserect=Rect(cmx,cmy,mx-cmx,my-cmy)\r\nellipserect.normalize()\r\ndraw.ellipse(screen,color,ellipserect,1)\r\nwhy ValueError: width greater than ellipse radius?", "users_id": null, "datetimeon": "2009-12-18T13:28:16", "link": "pygame.draw.ellipse", "id": 3025}, {"content": "It plays dot-to-dot with the given points.", "users_id": null, "datetimeon": "2010-02-19T01:32:43", "link": "pygame.draw.lines", "id": 3055}, {"content": "In ver. 1.9.1, if I try to initialize by calling\r\n\r\npygame.mixer.pre_init(...)\r\npygame.init()\r\n\r\nand then try to play a sound buffer, I get no output unless I open a graphics\r\nwindow first by calling pygame.display.set_mode(...). If, on the other hand,\r\nI'm not doing graphics and I initialize with just\r\n\r\npygame.mixer.init(...)\r\n\r\nI can get sound without opening any window.", "users_id": null, "datetimeon": "2010-02-21T10:20:13", "link": "pygame.mixer", "id": 3056}, {"content": "to get a picture instead of black and white cursor, in order :\r\n1) simply make a transparent cursor\r\n   pygame.mouse.set_cursor(pygame.mouse.set_cursor((8,8),(0,0),(0,0,0,0,0,0,0,0),(0,0,0,0,0,0,0,0))\r\n\r\n2) constantly actualise the postition of the picture to the postion of the cursor\r\n   cursor_picture==pygame.image.load('./cursor.png').convert_alpha()\r\n   while True:\r\n       for event in pygame.event.get():\r\n           if event.type==QUIT:\r\n               exit()\r\n       screen.fill(black)\r\n       screen.blit(mouse_cursor, pygame.mouse.get_pos())\r\n       pygame.display.update()", "users_id": null, "datetimeon": "2009-06-27T17:10:22", "link": "pygame.mouse.set_cursor", "id": 2850}, {"content": "Not sure why I am leaving this here... but can anyone tell me how you would rotate a surface?  Its 3am so excuse my ignorance :D", "users_id": null, "datetimeon": "2009-11-30T03:38:25", "link": "pygame.Surface", "id": 3016}, {"content": "Theres is an error in documentation: pygame.cursor.compile does not exists, but pygame.cursors.compile do", "users_id": null, "datetimeon": "2009-11-30T18:49:41", "link": "pygame.cursors.compile", "id": 3017}, {"content": "is there anyway to rotate a rectangle with out making it an image?", "users_id": null, "datetimeon": "2009-11-13T15:06:41", "link": "pygame.transform.rotate", "id": 3009}, {"content": "Minor problem: When I run the program using this for an image, it says \"cannot load image!\" could anyone help me?", "users_id": null, "datetimeon": "2009-11-15T09:50:56", "link": "pygame.image.load", "id": 3010}, {"content": "We need the posibility to rotate without the image being rescaled, just keep its original size like in PIL.\r\n\r\nim.rotate(angle, filter=NEAREST, expand=0) \r\nThe expand argument, if true, indicates that the output image should be made \r\nlarge enough to hold the rotated image. \r\nIf omitted or false, the output image has the same size as the input image.", "users_id": null, "datetimeon": "2009-11-21T05:03:48", "link": "pygame.transform.rotate", "id": 3012}, {"content": "In pygame 1.9.1 this function does not return negative values instead it returns a \r\n0 for all values < 0 (of the direction vector). If you are looking for a way to \r\ncompute a collision response look at Mask.overlap_area.", "users_id": null, "datetimeon": "2009-11-23T10:34:10", "link": "Mask.overlap", "id": 3013}, {"content": "can anyone please explain what this function do? at best whith an example", "users_id": null, "datetimeon": "2009-11-27T06:41:00", "link": "pygame.draw.lines", "id": 3014}, {"content": "Meta key is 'Apple' or 'Command' on a mac.", "users_id": null, "datetimeon": "2009-09-07T03:31:29", "link": "pygame.key", "id": 2939}, {"content": "why doesn't this blit on the screen???\r\n\r\n\r\n            for star in self.stars:\r\n                self.screen.blit(self.a, star.pos)\r\n                star.update()\r\n                self.screen.blit(star.image, star.pos)\r\n            pygame.display.update()", "users_id": null, "datetimeon": "2009-09-08T22:04:17", "link": "Surface.blit", "id": 2941}, {"content": "HELP ME ONMMGMGMGMGMGMG", "users_id": null, "datetimeon": "2009-11-12T10:31:24", "link": "Surface.convert_alpha", "id": 3006}, {"content": "aghahhahahahah I LOVE THIS OMG (*&^%$#@Q", "users_id": null, "datetimeon": "2009-11-12T10:31:43", "link": "Surface.convert_alpha", "id": 3007}, {"content": "In my game the screen is scaled. This can cause havoc with the mouse positioning. I made this function:\r\n\r\n def get_mouse_pos(pos):\r\n\treturn (pos[0] * (1280.0/float(game.game_scaled[0])),pos[1] * (720.0/float(game.game_scaled[1])))\r\n\r\nReplace 1280.0 and 720.0 with the resolution of the pre-scaled game and game.game_scaled with a sequence containing the scaled resolution.", "users_id": null, "datetimeon": "2009-11-12T12:43:39", "link": "pygame.transform.scale", "id": 3008}, {"content": "It seems to work if you set the display of the movie to a surface of the same size and then blit that surface to the screen.", "users_id": null, "datetimeon": "2009-06-24T20:28:26", "link": "pygame.movie", "id": 2846}, {"content": "This documentation does not seem to match what is currently in 1.8.1.  \r\nInstead: pygame.transform.threshold(DestSurface, Surface, color, threshold = (0,0,0,0), diff_color = (0,0,0,0), change_return = True, Surface =None): return num_threshold_pixels", "users_id": null, "datetimeon": "2009-11-11T15:11:43", "link": "pygame.transform.threshold", "id": 3004}, {"content": "For some odd reason anything in pygame.Color gets an error message like it doesn't exist.\r\nIf I try using pygame.Color.r, it says that Color has no attribute r. I tried redownloading\r\npygame, but nothing diffrent.", "users_id": null, "datetimeon": "2009-09-11T20:56:38", "link": "pygame.Color", "id": 2943}, {"content": "I am having the same problem on XP. The sound plays, but the video does not.", "users_id": null, "datetimeon": "2009-06-24T20:09:34", "link": "pygame.movie", "id": 2845}, {"content": "Does it matter if you tick at the start or at the end?", "users_id": 4081, "datetimeon": "2009-09-12T21:09:15", "link": "Clock.tick", "id": 2944}, {"content": "\"current_h, current_h:  Width and height of the current video mode, or of the\"[...]\r\nOne of them should be \"current_w\" instead.", "users_id": null, "datetimeon": "2009-11-07T06:40:09", "link": "pygame.display.Info", "id": 2999}, {"content": "For me, PixelArray works much faster (4 or 5 times faster) than Surfarray. I wanted to set every pixel in my off-screen surface individually. Creating the surface, creating a PixelArray on it, and going through the pixels one-by-one is much faster than creating the bitmap using numpy and calling surfarray.make_surface.", "users_id": null, "datetimeon": "2009-11-08T08:17:58", "link": "pygame.PixelArray", "id": 3000}, {"content": " \u00c3?\u00c3? \u00c3\u00ac\u00c3\u00ae\u00c3\u008a\u00c3\u00a5\u00c3\u00b2\u00c3\u00a5 \u00c3\u00ad\u00c3\u00a0\u00c3\u00b0\u00c3\u009a\u00c3\u00b1\u00c3\u00ae\u00c3\u00a2\u00c3\u00a0\u00c3\u00b2\u00c3\u008c \u00c3\u00ad\u00c3\u00a5\u00c3\u00b1\u00c3\u00aa\u00c3\u00ae\u00c3\u00ab\u00c3\u008c\u00c3\u00aa\u00c3\u00ae \u00c3\u00af\u00c3\u00a0\u00c3\u00b0\u00c3\u00a0\u00c3\u00ab\u00c3\u00ab\u00c3\u00a5\u00c3\u00ab\u00c3\u008c\u00c3\u00ad\u00c3\u00bb\u00c3\u00b5 \u00c3\u00ab\u00c3\u009a\u00c3\u00ad\u00c3\u009a\u00c3\u00a9 \u00c3\u00b0\u00c3\u00bf\u00c3\u0080\u00c3\u00ae\u00c3\u00ac \u00c3\u00b1 \u00c3\u0080\u00c3\u00b0\u00c3\u00b3\u00c3\u00a3\u00c3\u00ae\u00c3\u00ac. \u00c3?\u00c3\u00b2\u00c3\u00ae\u00c3\u00a1\u00c3\u00bb \u00c3\u009a\u00c3\u00b5 \u00c3\u0080\u00c3\u00ab\u00c3\u009a\u00c3\u00ad\u00c3\u00bb \u00c3\u00b1\u00c3\u00ab\u00c3\u009a\u00c3\u00a2\u00c3\u00a0\u00c3\u00ab\u00c3\u009a\u00c3\u00b1\u00c3\u008c\r\n \u00c3\u00ae\u00c3\u00ad\u00c3\u009a \u00c3\u00a1\u00c3\u00b3\u00c3\u0080\u00c3\u00b3\u00c3\u00b2 \u00c3\u00a2\u00c3\u009a\u00c3\u0080\u00c3\u00ad\u00c3\u00bb, \u00c3\u00aa\u00c3\u00a0\u00c3\u00aa \u00c3\u00ae\u00c3\u0080\u00c3\u00ad\u00c3\u00a0. \u00c3\u008d\u00c3\u00ae \u00c3\u009c\u00c3\u00b2\u00c3\u00ae \u00c3\u00a1\u00c3\u00b3\u00c3\u0080\u00c3\u00a5\u00c3\u00b2 \u00c3\u00ac\u00c3\u00a5\u00c3\u0080\u00c3\u00ab\u00c3\u00a5\u00c3\u00ad\u00c3\u00ad\u00c3\u00a5\u00c3\u00a9.\r\n I don't know english, write russian. translate.google for you help! :)", "users_id": null, "datetimeon": "2009-11-08T18:19:31", "link": "pygame.draw.aaline", "id": 3001}, {"content": "uiuuiu", "users_id": null, "datetimeon": "2009-11-11T05:10:30", "link": "pygame.key.get_focused", "id": 3002}, {"content": "its very ...................\r\n", "users_id": null, "datetimeon": "2009-11-11T05:11:00", "link": "pygame.key.get_focused", "id": 3003}, {"content": "The example's .flip(..) below won't work - maybe I should have checked it before posting...\r\nHere is a better Version, it should work now.\r\n\r\nfrom pygame import Rect, Surface\r\nclass Sprites():\r\n    def __init__(self, spritesheet, size):\r\n        self.sheet = spritesheet\r\n        self.sheet.convert_alpha()\r\n        self.size = size\r\n        \r\n        self.sprites = []\r\n        for x in xrange(spritesheet.get_width() / size[0]):\r\n            list = []\r\n            for y in xrange(spritesheet.get_height() / size[1]):\r\n                list.append(spritesheet.subsurface(Rect((x*size[0], y*size[1]) , size)))\r\n            self.sprites.append(list)\r\n    def flip(self, xbool, ybool):\r\n        new = Surface(self.sheet.get_size())\r\n        new.fill((0, 0, 0, 0))\r\n        for row in self.sprites:\r\n            for sprite in row:\r\n                new.blit(flip(sprite, xbool, ybool), sprite.get_offset())\r\n        self.sheet.fill((0, 0, 0, 0))\r\n        self.sheet.blit(new, (0, 0))\r\n    def __getitem__(self, x=None, y=None):\r\n        # not very tested, .flip(y=7) won't work\r\n        # the if conditions should allow you to access a sheet with one row/col more easily .flip(5, 0) == .flip(5)\r\n        if x is not None:\r\n            if y is None:\r\n                if len(self.sprites) > x:\r\n                    y = 0\r\n                else:\r\n                    y = x\r\n                    x = 0\r\n        elif y is None:\r\n            raise IndexError\r\n                \r\n        return self.sprites[x][y]\r\n\r\n@any Developer/Moderator - it would be nice if my wrong post, \"The example below won't work\" and this Notice would be removed.", "users_id": 2916, "datetimeon": "2009-11-06T11:31:59", "link": "Surface.subsurface", "id": 2998}, {"content": "Here is a simple Sprite-sheet Class I wrote for an application, maybe someone can use it.\r\n\r\nfrom pygame import Rect\r\nclass Sprites():\r\n    def __init__(self, spritesheet, size):\r\n        self.sheet = spritesheet\r\n        self.sheet.convert_alpha()\r\n        self.size = size\r\n        \r\n        self.sprites = []\r\n        for x in xrange(spritesheet.get_width() / size[0]):\r\n            list = []\r\n            for y in xrange(spritesheet.get_height() / size[1]):\r\n                list.append(spritesheet.subsurface(Rect((x*size[0], y*size[1]) , size)))\r\n            self.sprites.append(list)\r\n            print list\r\n        print self.sprites\r\n    def flip(self, xbool, ybool):\r\n        self.sheet.fill((0, 0, 0, 0))\r\n        for row in self.sprites:\r\n            for sprite in row:\r\n                sprite.blit(flip(sprite, xbool, ybool), (0, 0))\r\n    def __getitem__(self, x=None, y=None):\r\n        if x is not None:\r\n            if y is None:\r\n                if len(self.sprites) > x:\r\n                    y = 0\r\n                else:\r\n                    y = x\r\n                    x = 0\r\n        elif y is None:\r\n            raise IndexError\r\n                \r\n        return self.sprites[x][y]", "users_id": 2916, "datetimeon": "2009-11-06T11:14:23", "link": "Surface.subsurface", "id": 2997}, {"content": "Tip for noobs. This was killing me. If you're trying this for the first time and getting no sound, it may be because you're program exits before the playback thread completes. See pygame/examples/sound.py: it waits at the end.", "users_id": null, "datetimeon": "2009-12-19T19:22:25", "link": "Channel.play", "id": 3026}, {"content": "Tip for noobs. This was killing me. If you're trying this for the first time and\r\ngetting no sound, it may be because you're program exits before the playback\r\nthread completes. See pygame/examples/sound.py: it waits at the end.", "users_id": null, "datetimeon": "2009-12-19T19:23:52", "link": "Sound.play", "id": 3027}, {"content": "You missed pygame.Mixer", "users_id": null, "datetimeon": "2009-10-27T02:47:35", "link": "pygame.init", "id": 2991}, {"content": "Tried this on XP with pygame 1.9 - video works, but sound doesn't. Uninitializing pygame.mixer does not seem to effect behavior.", "users_id": null, "datetimeon": "2009-10-27T20:31:08", "link": "pygame.movie", "id": 2992}, {"content": "As of 1.9, it does not appear the loop param exists.", "users_id": null, "datetimeon": "2009-10-27T20:42:45", "link": "Movie.play", "id": 2993}, {"content": "If your movies play slow or occasionally freeze, setting a limit to framerates seems to resolve the problem. \r\nSee the documentation on Clock.tick(framerate) on how to limit framerates:\r\nhttp://www.pygame.org/docs/ref/time.html#Clock.tick", "users_id": null, "datetimeon": "2009-10-29T10:53:02", "link": "pygame.movie.Movie", "id": 2994}, {"content": "The example code and the explanation contradict each other.\r\n\r\nThe example returns true if lost, supposedly, and the explanation supposedly returns False if lost?", "users_id": null, "datetimeon": "2009-11-04T18:10:25", "link": "pygame.scrap.lost", "id": 2995}, {"content": "Does not work *at all*. No changes occur when I change any pixels.", "users_id": null, "datetimeon": "2009-11-05T22:12:49", "link": "pygame.PixelArray", "id": 2996}, {"content": "Remember, there are not semitones. Thus, each semitone is represented by an integer named \"note\".\r\nIf you are a beginer it is a good choice to start practicing with the middle notes.\r\nC 4 is the note number 61. Have fun!.\r\n\r\nTourette  ", "users_id": null, "datetimeon": "2009-12-21T19:52:02", "link": "Output.note_on", "id": 3028}, {"content": "pygame.mask.from_surface(Surface, threshold) -> Mask\r\nno Keyword argument", "users_id": null, "datetimeon": "2009-10-25T18:04:44", "link": "pygame.mask.from_surface", "id": 2989}, {"content": "you use a class to get the var\r\nfor example\r\nclass myimage(object):\r\n    image = (your image)\r\nthen to blit\r\n\r\ndisplay.blit(myimage.image, (0,0))\r\n\r\nso that you are only accesing the one variable to blit instead of multiple instances of the same\r\n\r\n    ", "users_id": null, "datetimeon": "2009-08-04T11:33:28", "link": "Surface.copy", "id": 2905}, {"content": "if you want to measure it over a period of your choosing just compute a moving average of the result of clock.tick(), like this:\r\n\r\n...\r\n\r\nrecent_frame_lengths = [ 100, 100, 100, 100, 100 ]\r\nrfl_array_len = float( len( recent_frame_lengths ) )\r\n\r\n...\r\nmain():\r\n...\r\ndt = clock.tick()\r\nrecent_frame_lengths.pop(0)\r\nrecent_frame_lengths.append(dt)\r\naverage_frame_length = recent_frame_lengths / rfl_array_len\r\nframes_per_second = 1000. / average_frame_length", "users_id": null, "datetimeon": "2010-05-18T12:08:59", "link": "Clock.get_fps", "id": 3124}, {"content": "button can be at least 1-6. 4/5 are for the scroll wheel. \r\nThe squeeze-click on new Apple mice is 6. ", "users_id": null, "datetimeon": "2010-05-20T22:13:33", "link": "pygame.event", "id": 3126}, {"content": "event polling:\r\n#self.keys is [] 256 len. \r\nself.mouse = ((0,0), 0, 0, 0, 0, 0, 0) #(pos, b1,b2,b3,b4,b5,b6)\r\n#squeezing a new Apple mouse is button 6. \r\nfor event in pygame.event.get():\r\n\tif event.type == pygame.QUIT:\r\n\t\tself.running = 0\r\n\telif event.type == pygame.MOUSEBUTTONDOWN:\r\n\t\tself.mouse[event.button] = 1\r\n\t\tself.mouse[0] = event.pos\r\n\telif event.type == pygame.MOUSEBUTTONUP:\r\n\t\tself.mouse[event.button] = 0\r\n\t\tself.mouse[0] = event.pos\r\n\telif event.type == pygame.MOUSEMOTION:\r\n\t\tself.mouse[0] = event.pos\r\n\telif event.type == pygame.KEYDOWN:\r\n\t\tself.keys[event.key % 255] = 1\r\n\telif event.type == pygame.KEYUP:\r\n\t\tself.keys[event.key % 255] = 0", "users_id": null, "datetimeon": "2010-05-20T22:31:20", "link": "pygame.mouse.get_pressed", "id": 3127}, {"content": "Is there anyway to get the rect of a polygon without having to create a surface greater than or equal to the polygon, and then gather the rect from the polygon?", "users_id": 3802, "datetimeon": "2009-08-08T21:50:46", "link": "pygame.draw.polygon", "id": 2907}, {"content": "PyGame beginners, please don't look at Matthew N. Brown's code below.\r\n\r\nThat is the worst Python code I have ever seen, and it offers almost no examples of how to use pygame.draw.circle.", "users_id": null, "datetimeon": "2010-05-17T13:22:44", "link": "pygame.draw.circle", "id": 3123}, {"content": "What about subsubsubsubsurfaces?", "users_id": null, "datetimeon": "2009-06-14T09:27:19", "link": "Surface.subsurface", "id": 2830}, {"content": "for some reason this gives always wrong numbers.\r\nmask_creep = pygame.mask.from_surface(creep.image)\r\nmask_player = pygame.mask.from_surface(p.image)\r\np.life -= mask_player.overlap_area(\r\n   mask_creep, (creep.rect.x-p.rect.x,creep.rect.y-p.rect.y))\r\n\r\np.life is the life of the player, and I want to drain it by the amount of pixels overlapping with creep.\r\nhowever, it seems it hits before it should, and with mask_creep.invert() I seem to get more accurate hits, which makes no sense...", "users_id": null, "datetimeon": "2009-10-24T06:03:49", "link": "pygame.mask", "id": 2984}, {"content": "get also this warning : nsquickdrawview \r\nif I compile.\r\n\r\ncan\u00c2\u008et use pygame with py2app\r\n\r\npython 2.4 or 2.5\r\nmaxos leopard\r\neclipse", "users_id": null, "datetimeon": "2010-01-05T21:56:27", "link": "pygame.display.init", "id": 3032}, {"content": "This is twice the work because the image is rotated and then resized (subrect\r\nis copied) but it doesn't hurt my math-addled brain.\r\n\r\ndef rot_center(image, angle):\r\n    \"\"\"rotate an image while keeping its center and size\"\"\"\r\n    orig_rect = image.get_rect()\r\n    rot_image = pygame.transform.rotate(image, angle)\r\n    rot_rect = orig_rect.copy()\r\n    rot_rect.center = rot_image.get_rect().center\r\n    rot_image = rot_image.subsurface(rot_rect).copy()\r\n    return rot_image\r\n", "users_id": 3659, "datetimeon": "2010-01-17T01:17:23", "link": "pygame.transform.rotate", "id": 3034}, {"content": "This function is not working as stated.  It requires a 'rectstyle' argument (ie. a tuple with rect's parameters).  it tests for collisions using this 'rectsytle' object and returns any that are colliding along with their values.  Not really useful since no one needs a tuple of rect's parameters back.  this would be really nice if it worked as stated...\r\n", "users_id": null, "datetimeon": "2009-10-24T03:33:00", "link": "Rect.collidedict", "id": 2982}, {"content": "Use pygame.transform.rotate(Surface, angle)", "users_id": 3167, "datetimeon": "2010-01-17T09:30:05", "link": "pygame.Surface", "id": 3035}, {"content": "The math isn't that hard, you just have to think in relative coordinates then.\r\nThe key is to look at the center of the image, as these coordinates wont change by rotating it.\r\nThe coordinates of the center of the image on the screen are given by:\r\nx_cntr.. x coordinate of the center\r\ny_cntr.. y coordinate of the center\r\n\r\npos_org = (x_cntr - image_org.get_rect().width / 2,\r\n           y_cntr - image_org.get_rect().height / 2) \r\n           \"\"\"gives position of upper left corner of image_org (not rotated)\r\n           depending on the center coordinates for the Surface.blit function\"\"\"\r\nimage_rotated = pygame.transform.rotate(image_org, angle) #rotate image\r\npos_new = (x_pos_org - image_rotated.get_rect().width / 2,\r\n           y_pos_org - image_rotated.get_rect().height / 2)\r\n           #get new position for upper left corner for rotated image\r\n", "users_id": null, "datetimeon": "2010-01-21T11:14:00", "link": "pygame.transform.rotate", "id": 3036}, {"content": "doors.txt;10;15", "users_id": null, "datetimeon": "2009-09-15T07:18:01", "link": null, "id": 2948}, {"content": "x_pos_org and y_pos_org naturally need to be x_cntr and y_cntr.. sry", "users_id": null, "datetimeon": "2010-01-21T11:20:31", "link": "pygame.transform.rotate", "id": 3037}, {"content": "fuck u", "users_id": null, "datetimeon": "2010-01-21T12:35:00", "link": "PixelArray.replace", "id": 3038}, {"content": "doesnt work!", "users_id": null, "datetimeon": "2010-01-25T12:07:07", "link": "pygame.display.set_caption", "id": 3039}, {"content": "WTH!??? ", "users_id": null, "datetimeon": "2010-01-25T12:07:16", "link": "pygame.display.set_caption", "id": 3040}, {"content": "Does the returned Boolean value indicate success/failure at toggling fullscreen mode,\r\nor current status of the display (e.g., fullscreen = True, windowed = False)?", "users_id": 4512, "datetimeon": "2010-01-27T16:33:12", "link": "pygame.display.toggle_fullscreen", "id": 3041}, {"content": "Where should the image file be save at?", "users_id": null, "datetimeon": "2010-01-29T02:01:23", "link": "pygame.image.load", "id": 3042}, {"content": "To clip the blit, you have to pass a rect like this (0, 0, clipWidth, clipHeigth):\r\n\r\nexample:\r\n\r\nsForeground.blit(sText, rText, (0, 0, 32, 32)):\r\n\r\ndraw the surface sText into sForeground at topleft position defined with the rect rText,\r\nclippping the sText by 32x32 pixel box", "users_id": null, "datetimeon": "2010-01-30T14:45:56", "link": "Surface.blit", "id": 3043}, {"content": "actually, it DOES WORK. put it in the right group", "users_id": null, "datetimeon": "2010-02-02T15:56:23", "link": "pygame.display.set_caption", "id": 3044}, {"content": "how does this even work?????", "users_id": null, "datetimeon": "2010-02-02T23:04:45", "link": "Rect.move", "id": 3045}, {"content": "Pygame 1.9: DeprecationWarning: integer argument expected, got float\r\n\r\nThe tuple elements must be integers. The line number in the warning message will\r\nindicate your enclosing function or method. I found this very misleading and\r\nfrustrating.", "users_id": null, "datetimeon": "2010-02-06T02:16:05", "link": "pygame.transform.smoothscale", "id": 3048}, {"content": "By calling Clock.tick -> clock.tick", "users_id": null, "datetimeon": "2010-02-08T10:30:27", "link": "Clock.tick_busy_loop", "id": 3049}, {"content": "that code you posted (TWICE) doesnt show how to draw a circle in pygame.\r\n It shows an example of a complex couple hundred lines  of interactive \r\nphysics engine that just so happens to take im guessing less than\r\n5 lines to use pygame.draw.circle. Its a waste of space Good job for getting your code out into \r\nthe world. Now people dont like you.", "users_id": null, "datetimeon": "2010-02-08T22:31:47", "link": "pygame.draw.circle", "id": 3050}, {"content": "Bank spends or invests 30 back into the economy. , ", "users_id": null, "datetimeon": "2009-10-23T05:32:44", "link": null, "id": 2979}, {"content": "set_blocked() clear queue from ALL events", "users_id": 3711, "datetimeon": "2009-10-23T11:07:21", "link": "pygame.event.set_blocked", "id": 2980}, {"content": "Moreover, all modern business is built on guarantees of standards. , ", "users_id": null, "datetimeon": "2009-10-22T05:59:57", "link": null, "id": 2978}, {"content": "TypeError: descriptor 'collidelistall' requires a 'pygame.Rect' object but received a 'list'\r\n\r\n...so it doesn't like a list, but a pygame.Rect? That does't make sense.", "users_id": null, "datetimeon": "2009-10-22T05:21:56", "link": "Rect.collidelistall", "id": 2977}, {"content": "We will coordinate further details after we hear from you. , ", "users_id": null, "datetimeon": "2009-10-13T05:45:30", "link": null, "id": 2972}, {"content": "Also using\r\n\r\n my_surface=pygame.Surface([width, height]).convert()\r\n\r\nseems to be just as effective", "users_id": null, "datetimeon": "2009-10-16T22:13:15", "link": "pygame.Surface", "id": 2974}, {"content": "If they play in a CD player, they were burned properly.", "users_id": 2757, "datetimeon": "2009-10-21T19:51:47", "link": "pygame.cdrom", "id": 2975}, {"content": "x = x2 - x1, y = y2 - y1 gives the width and height of the rectangle.\r\n(x2 - x1) / 2, (y2 - y1) / 2 gives the center coordinates.\r\nI don't know of a built-in method on the Rect that gives the center coords.", "users_id": null, "datetimeon": "2009-10-21T20:50:31", "link": "pygame.draw.rect", "id": 2976}, {"content": "doors.txt;10;15", "users_id": null, "datetimeon": "2009-10-12T17:16:50", "link": null, "id": 2971}, {"content": "AWSOME", "users_id": null, "datetimeon": "2009-10-08T11:50:27", "link": "pygame.draw", "id": 2967}, {"content": "Why is Al Jaffee still funnier than everyone else in the world, even in email form? , ", "users_id": null, "datetimeon": "2009-10-10T21:51:23", "link": null, "id": 2968}, {"content": "LayeredRenderGroup does not exist. Please fix this!", "users_id": null, "datetimeon": "2010-02-10T04:11:16", "link": "pygame.sprite.DirtySprite", "id": 3052}, {"content": "Aloha! jdv", "users_id": null, "datetimeon": "2009-09-20T07:33:05", "link": "Rect.move_ip", "id": 2954}, {"content": "Worth mentioning: the initial angle must be less than the final angle; otherwise it will draw the full elipse.\r\n", "users_id": null, "datetimeon": "2009-10-01T14:16:05", "link": "pygame.draw.arc", "id": 2964}, {"content": "which is faster? collide circle or collide rect?", "users_id": null, "datetimeon": "2010-02-18T23:17:58", "link": "pygame.sprite.collide_circle", "id": 3054}, {"content": "If you want a circle with a *good* outline, use this:\r\n\r\ndef drawcircle(image, colour, origin, radius, width=0):\r\n\tif width == 0:\r\n\t\tpygame.draw.circle(image,colour,intlist(origin),int(radius))\r\n\telse:\r\n\t\tif radius > 65534/5: radius = 65534/5\r\n\t\tcircle = pygame.Surface([radius*2+width,radius*2+width]).convert_alpha()\r\n\t\tcircle.fill([0,0,0,0])\r\n\t\tpygame.draw.circle(circle, colour, intlist([circle.get_width()/2, circle.get_height()/2]), int(radius+(width/2)))\r\n\t\tif int(radius-(width/2)) > 0: pygame.draw.circle(circle, [0,0,0,0], intlist([circle.get_width()/2, circle.get_height()/2]), abs(int(radius-(width/2))))\r\n\t\timage.blit(circle, [origin[0] - (circle.get_width()/2), origin[1] - (circle.get_height()/2)])", "users_id": null, "datetimeon": "2009-09-30T10:47:07", "link": "pygame.draw.circle", "id": 2963}, {"content": "I think the problem has something to do with encapsulation.\r\nTry:\r\ncurrent_song = 0\r\ndef Play_Next_Song():\r\n    global current_song\r\n    if pygame.mixer.music.get_busy() == False:\r\n        print songs[current_song]\r\n        pygame.mixer.music.load(songs[current_song])\r\n        pygame.mixer.music.play()    \r\n        current_song += 1", "users_id": null, "datetimeon": "2009-09-21T11:39:31", "link": "pygame.mixer.music.load", "id": 2956}, {"content": "WHAT?", "users_id": null, "datetimeon": "2009-09-23T15:22:38", "link": "pygame.draw.lines", "id": 2957}, {"content": "Can I draw circles too?", "users_id": null, "datetimeon": "2009-09-24T13:53:40", "link": "pygame.draw.circle", "id": 2958}, {"content": "This is very important for mac because it shows the icon in the dock.. when I use this, it flashes the snake image for a second before changing, and it also gets smaller then the application icon which is the same (using py2app).", "users_id": 4081, "datetimeon": "2009-09-24T16:05:59", "link": "pygame.display.set_icon", "id": 2959}, {"content": "how can i get a mouse wheel value? please show in a snippet - i don't know how to use pygame.MOUSEBUTTONDOWN and pygame.MOUSEBUTTONUP", "users_id": null, "datetimeon": "2009-09-25T11:53:07", "link": "pygame.mouse.get_pressed", "id": 2960}, {"content": "Setting the line width does not work!", "users_id": null, "datetimeon": "2009-09-29T10:21:37", "link": "pygame.draw.rect", "id": 2962}, {"content": "i dont like pygame very much\r\nrectangles can go poop themselves", "users_id": null, "datetimeon": "2010-05-21T11:08:52", "link": "Rect.collidelistall", "id": 3128}, {"content": "In fact it should be\r\n\"By calling Clock.tick(40)\" -> \"Clock.tick_busy_loop(40)\"", "users_id": null, "datetimeon": "2010-06-01T03:26:55", "link": "Clock.tick_busy_loop", "id": 3130}, {"content": "No, waiting at the very beginning or very end of a loop does not make\r\nmuch difference.  Moving it to the middle might: \r\n  screen.fill(...)\r\n  clock.tick(30)\r\n  screen.blit(...)\r\nwill mostly show a blank screen because the fill will be visible\r\nduring the wait.", "users_id": null, "datetimeon": "2010-06-01T07:55:40", "link": "Clock.tick", "id": 3131}, {"content": "haleluja", "users_id": null, "datetimeon": "2010-06-02T03:11:33", "link": "Rect.collidelist", "id": 3133}, {"content": "PixelArray works faster than SurfArray for me also.", "users_id": null, "datetimeon": "2010-06-02T20:55:16", "link": "pygame.PixelArray", "id": 3134}, {"content": "Only seems to block if you start another piece of music playing while it's still\r\nfading out.", "users_id": null, "datetimeon": "2010-06-06T16:23:37", "link": "pygame.mixer.music.fadeout", "id": 3135}, {"content": "\"\"\"\r\n\t # This is a get_ticks() function simple example\r\n\t # This script should return 10 as a result\r\n\"\"\"\r\n# Standard library imports\r\nimport time\r\n# Related third party imports\r\nimport pygame\r\n#Pygame start function\r\n\r\npygame.init()\r\n# Create the clock\r\nclock = pygame.time.Clock()\r\n# A simple loop of 10 stages\r\nfor i in range(10):\r\n\t# Update the clock\r\n\tclock.tick(1)\r\n# Print the seconds\r\nprint int(round(pygame.time.get_ticks()/1000))", "users_id": 4960, "datetimeon": "2010-06-08T15:33:04", "link": "pygame.time.get_ticks", "id": 3138}, {"content": "If you're having trouble with color keys, try image.set_alpha(None) on each individual subsurface.\r\nsubsurface seems not to always inherit its parent's alpha setting, so if the parent source image has an alpha then color key is ignored in subsurfaces.\r\n\r\nYou can easily remove the alpha channel in GIMP by right-clicking the background layer and selecting \"remove alpha channel\" to fix all your problems also :)", "users_id": null, "datetimeon": "2010-06-08T23:09:21", "link": "Surface.subsurface", "id": 3139}, {"content": "You should use pygame.display.Info.current_h and pygame.display.Info.current_w.", "users_id": null, "datetimeon": "2010-06-10T20:42:30", "link": "pygame.display.get_surface", "id": 3140}, {"content": "pygame.display.Info().current_h and pygame.display.Info().current_w", "users_id": null, "datetimeon": "2010-06-10T20:43:14", "link": "pygame.display.get_surface", "id": 3141}, {"content": "screen = pygame.display.set_mode(...)\r\nscreen.get_size()", "users_id": null, "datetimeon": "2010-06-10T20:55:19", "link": "pygame.display.get_surface", "id": 3142}, {"content": "11246579455877\r\nppqu s442", "users_id": null, "datetimeon": "2010-06-11T18:56:04", "link": "pygame.mixer.music.play", "id": 3143}, {"content": "import pygame\r\nimport pygame, sys,os, time                 \r\nfrom pygame.locals import *                  \r\nfrom pygame.color import THECOLORS           \r\nimport platform, os                          \r\nif platform.system()==\"Windows\":           \r\n    os.environ['SDL_VIDEODRIVER']='windib'\r\npygame.init()\r\nwindow = pygame.display.set_mode((600,600)) \r\nscreen = pygame.display.get_surface() \r\npygame.display.set_caption('Excercise 5') \r\nscreen.fill((0,0,0))\r\n\r\nclass GfxCursor:\r\n    \"\"\"\r\n    Replaces the normal pygame cursor with any bitmap cursor\r\n    \"\"\"\r\n\r\n    def __init__(self,surface,cursor=None,hotspot=(0,0)):\r\n        \"\"\"\r\n        surface = Global surface to draw on\r\n        cursor  = surface of cursor (needs to be specified when enabled!)\r\n        hotspot = the hotspot for your cursor\r\n        \"\"\"\r\n        self.surface = surface\r\n        self.enabled = 0\r\n        self.cursor  = None\r\n        self.hotspot = hotspot\r\n        self.bg      = None\r\n        self.offset  = 0,0\r\n        self.old_pos = 0,0\r\n        \r\n        if cursor:\r\n            self.setCursor(cursor,hotspot)\r\n            self.enable()\r\n\r\n    def enable(self):\r\n        \"\"\"\r\n        Enable the GfxCursor (disable normal pygame cursor)\r\n        \"\"\"\r\n        if not self.cursor or self.enabled: return\r\n        pygame.mouse.set_visible(0)\r\n        self.enabled = 1\r\n\r\n    def disable(self):\r\n        \"\"\"\r\n        Disable the GfxCursor (enable normal pygame cursor)\r\n        \"\"\"\r\n        if self.enabled:\r\n            self.hide()\r\n            pygame.mouse.set_visible(1)\r\n            self.enabled = 0\r\n\r\n    def setCursor(self,cursor,hotspot=(0,0)):\r\n        \"\"\"\r\n        Set a new cursor surface\r\n        \"\"\"\r\n        if not cursor: return\r\n        self.cursor = cursor\r\n        self.hide()\r\n        self.show()\r\n        self.offset = 0,0\r\n        self.bg = pygame.Surface(self.cursor.get_size())\r\n        pos = self.old_pos[0]-self.offset[0],self.old_pos[1]-self.offset[1]\r\n        self.bg.blit(self.surface,(0,0),\r\n            (pos[0],pos[1],self.cursor.get_width(),self.cursor.get_height()))\r\n\r\n        self.offset = hotspot\r\n\r\n    def setHotspot(self,pos):\r\n        \"\"\"\r\n        Set a new hotspot for the cursor\r\n        \"\"\"\r\n        self.hide()\r\n        self.offset = pos\r\n\r\n    def hide(self):\r\n        \"\"\"\r\n        Hide the cursor (useful for redraws)\r\n        \"\"\"\r\n        if self.bg and self.enabled:\r\n            return self.surface.blit(self.bg,\r\n                (self.old_pos[0]-self.offset[0],self.old_pos[1]-self.offset[1]))\r\n\r\n    def show(self):\r\n        \"\"\"\r\n        Show the cursor again\r\n        \"\"\"\r\n        if self.bg and self.enabled:\r\n            pos = self.old_pos[0]-self.offset[0],self.old_pos[1]-self.offset[1]\r\n            self.bg.blit(self.surface,(0,0),\r\n                (pos[0],pos[1],self.cursor.get_width(),self.cursor.get_height()))\r\n            return self.surface.blit(self.cursor,pos)\r\n\r\n    def update(self,event):\r\n        \"\"\"\r\n        Update the cursor with a MOUSEMOTION event\r\n        \"\"\"\r\n        self.old_pos = event.pos\r\n\r\nif __name__ == '__main__': #test it out\r\n    import pygame.draw\r\n    pygame.init()\r\n    screen = pygame.display.set_mode((400, 300))\r\n    screen.fill((50, 50, 111), (0, 0, 400, 150))\r\n    pygame.display.flip()\r\n    pygame.display.set_caption('Test the GfxCursor (and paint)')\r\n    \r\n    image = pygame.Surface((20, 20))\r\n    pygame.draw.circle(image, (50, 220, 100), (10, 10), 8, 0)\r\n    pygame.draw.circle(image, (220, 200, 50), (10, 10), 8, 2)\r\n    image.set_at((9, 9), (255,255,255))\r\n    image.set_colorkey(0, pygame.RLEACCEL)\r\n    \r\n    magicbox = pygame.Rect(10, 10, 100, 90)\r\n    magiccolor = 0\r\n    \r\n    cursor = GfxCursor(screen, image, (10, 10))\r\n    finished = 0\r\n    downpos = None\r\n    while not finished:\r\n        dirtyrects = []\r\n        dirtyrects.extend([cursor.hide()])\r\n        for e in pygame.event.get():\r\n            if e.type in (pygame.QUIT, pygame.KEYDOWN):\r\n                finished = 1\r\n                break\r\n            elif e.type == pygame.MOUSEBUTTONDOWN:\r\n                cursor.disable()\r\n                downpos = e.pos\r\n            elif e.type == pygame.MOUSEBUTTONUP:\r\n                cursor.enable()\r\n                downpos = None\r\n            elif downpos and e.type == pygame.MOUSEMOTION:\r\n                r = pygame.draw.line(screen, (100,100,100), downpos, e.pos, 2)\r\n                dirtyrects.append(r)\r\n                downpos = e.pos\r\n                cursor.update(e)\r\n            elif not downpos and e.type == pygame.MOUSEMOTION:\r\n                cursor.update(e)\r\n        \r\n        magiccolor = (magiccolor + 2) % 255\r\n        r = screen.fill((0, 0, magiccolor), magicbox)\r\n        dirtyrects.append(r)\r\n        \r\n        #here's how we sandwich the flip/update with cursor show and hide\r\n        dirtyrects.extend([cursor.show()])\r\n        pygame.display.update(dirtyrects)\r\n        \r\n        pygame.time.delay(5) #should be time.wait(5) with pygame-1.3 :]\r\n", "users_id": null, "datetimeon": "2010-06-13T02:45:37", "link": "Color.r", "id": 3145}, {"content": "I get an 'UnboundLocalError: local variable 'fonts' referenced before assignment' error. \r\nI'm on Mac OS X 10.4 Tiger with Python 2.6.4, Pygame 1.9.1.", "users_id": null, "datetimeon": "2010-06-19T22:22:14", "link": "pygame.font.get_fonts", "id": 3146}, {"content": "I'm no expert but wouldn't it be faster to use the math.hypot(a, b)\r\nfunction for determining length instead of writing your own function?", "users_id": null, "datetimeon": "2009-06-09T21:45:55", "link": "Joystick.get_axis", "id": 2759}, {"content": "You can also move the corner:\r\n\r\nsquare_corner=(x-square_dim[0]*sqrt(2)/2*sin((abs(angle)+45)*pi/180),\r\n                     y-square_dim[1]*sqrt(2)/2*sin((45+abs(angle))*pi/180))\r\n  screen.blit(pygame.transform.rotate(square,angle), square_corner)\r\n\r\nBeware: sin calculates the angle in rad but rotate needs angles in degrees.", "users_id": null, "datetimeon": "2009-06-08T14:31:39", "link": "pygame.transform.rotate", "id": 2758}, {"content": "ACTIVEEVENT has two attributes. \"gain\" is set to 0 or one depending if the type of focus was lost or gained. \"state\" will equal 1 for mouse focus, 2 for keyboard focus, or 4 for window iconification.", "users_id": null, "datetimeon": "2009-06-03T22:15:32", "link": "pygame.event", "id": 2755}, {"content": "If you want only certain events to be enabled -- you will need to disable them all, and only then enable the ones that you need:\r\n#--\r\npygame.event.set_allowed(None)\r\nprint map(pygame.event.get_blocked,range(1,33))\r\npygame.event.set_allowed([pygame.QUIT, pygame.KEYDOWN, pygame.USEREVENT])\r\nprint map(pygame.event.get_blocked,range(1,33))\r\n#--\r\nbelow is the output:\r\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n[1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1]\r\n", "users_id": null, "datetimeon": "2009-05-30T16:39:22", "link": "pygame.event.set_allowed", "id": 2754}, {"content": "Also, it should maybe be noted that it returns 4 tuple items, not just 3.\r\nMy guess is RGBA tuple instead of RGB, but I'm not an expert :P", "users_id": null, "datetimeon": "2009-05-27T02:45:25", "link": "Surface.unmap_rgb", "id": 2753}, {"content": "convert a mapped integer color value into a Color\r\nSurface.map_rgb(mapped_int): return Color\r\n        ^\r\nShouldn't it be \"Surface.unmap_rgb\"?", "users_id": null, "datetimeon": "2009-05-27T02:43:16", "link": "Surface.unmap_rgb", "id": 2752}, {"content": "Tracked module playback with Pygame has a lower playback volume than usual,\r\nand I need to find something like \"stereo separation\" feature yet.", "users_id": null, "datetimeon": "2009-05-21T06:41:14", "link": "pygame.mixer.music", "id": 2751}, {"content": "Yes, I just found it out, and it plays tracked music modules such as MOD or XM.\r\nBut IT (Impulse Tracker) modules don't play correctly. Wow. I used fmod with Python bindings\r\nall the time, and Pygame supported it already. I wish I knew that sooner :D", "users_id": null, "datetimeon": "2009-05-21T06:35:19", "link": "pygame.mixer.music", "id": 2750}, {"content": "While using this, it seems that it returns true when the music is paused. Anyone else having this problem, if it's a problem?", "users_id": null, "datetimeon": "2009-05-19T11:35:42", "link": "pygame.mixer.music.get_busy", "id": 2749}, {"content": "If you want to draw the sprites in your group in the opposite order you could try something like this:\r\n#Suppose that you keep a list of objects in \"Sprites\"\r\nSprites=[]\r\n#You also have:\r\nAllsprites=pygame.sprite.OrderedUpdates(Sprites)\r\n\r\nWhenever you add something to the list of sprites, you want to add it to Allsprites like this:\r\ndef create_sprite():\r\n     a=SomeClassForYourSprite()\r\n     Sprites.append(a)\r\n     Allsprites.add(a)\r\n\r\n#That is how I normally add sprites, but unfortunately I was getting the reverse order of what I wanted so I did this:\r\ndef create_sprite():\r\n     Allsprites.empty() #This removes all objects from your group\r\n     a=SomeClassForYourSprite()\r\n     Sprites.insert(0,a) #Placing your new sprite at the front of the list\r\n     for sprite in Sprites:\r\n           Allsprites.add(sprite)\r\n\r\nThis should reverse the order for you, allowing the newest sprite created to appear at the bottom instead of the top", "users_id": null, "datetimeon": "2009-05-11T00:29:55", "link": "pygame.sprite.OrderedUpdates", "id": 2744}, {"content": "Is this function blocking?  I mean...  when it returns and my program flow continues, can I be assured that the display has updated on the actual screen?", "users_id": null, "datetimeon": "2011-01-14T19:38:50", "link": "pygame.display.update", "id": 3730}, {"content": "Note that pygame.scrap seems to be unimplemented in pygame-1.9.1.win32-py3.1.msi\r\n\r\nDefine testscrap.py, like this:\r\n\r\nimport pygame\r\npygame.init()\r\npygame.scrap.init()\r\n\r\n\r\nRun it, like this:\r\n\r\nC:\\Users\\Dave\\Documents\\Python>testscrap.py\r\nC:\\Users\\Dave\\Documents\\Python\\testscrap.py:3: RuntimeWarning: use scrap: No module named scrap\r\n(ImportError: No module named scrap)\r\n  pygame.scrap.init()\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Dave\\Documents\\Python\\testscrap.py\", line 3, in <module>\r\n    pygame.scrap.init()\r\n  File \"C:\\Python31\\lib\\site-packages\\pygame\\__init__.py\", line 70, in __getattr__\r\n    raise NotImplementedError(MissingPygameModule)\r\nNotImplementedError: scrap module not available\r\n(ImportError: No module named scrap)\r\n", "users_id": 5772, "datetimeon": "2011-01-16T00:15:21", "link": "pygame.scrap", "id": 3731}, {"content": "BTW, the same error occurs if you have initialized a display surface, too:\r\n\r\nimport pygame\r\npygame.init()\r\nscreen=pygame.display.set_mode((640,360),0,32)\r\npygame.scrap.init()\r\n", "users_id": 5772, "datetimeon": "2011-01-16T00:18:19", "link": "pygame.scrap", "id": 3732}, {"content": "Is there a way to set a path to a font file?", "users_id": null, "datetimeon": "2011-01-16T15:32:54", "link": "pygame.font.SysFont", "id": 3734}, {"content": "eee", "users_id": null, "datetimeon": "2011-01-16T19:25:25", "link": "pygame.image.tostring", "id": 3735}, {"content": "The last comment was spam", "users_id": null, "datetimeon": "2011-01-17T21:08:17", "link": "pygame.draw.polygon", "id": 3737}, {"content": "[(x,y), (x1,y1), (x2,y2)]", "users_id": null, "datetimeon": "2011-01-17T21:08:51", "link": "pygame.draw.polygon", "id": 3738}, {"content": "The core algorithm works with 32-bit surfaces. When a 24-bit surface is passed, the pixel data is converted to 32-bit data before the actual transformation, and then it's converted back into 24-bits again, which means 2 extra conversions of the whole image. This would especially be troublesome with large images.", "users_id": null, "datetimeon": "2011-01-18T03:41:16", "link": "pygame.transform.smoothscale", "id": 3739}, {"content": "re", "users_id": null, "datetimeon": "2011-01-18T06:48:13", "link": "pygame.mixer.music.pause", "id": 3740}, {"content": "\"><script>alert('xss')</script>", "users_id": null, "datetimeon": "2011-01-19T16:37:35", "link": null, "id": 3742}, {"content": "Hello world", "users_id": null, "datetimeon": "2011-01-19T16:38:01", "link": "index.html", "id": 3743}, {"content": "Hey, July 7 2009 Anonymous, that's a nice demo!\r\n\r\nFor Python 3 compatibility, just change the last line to:\r\n\r\n  pygame.time.delay(1000//50)", "users_id": 5772, "datetimeon": "2011-01-24T10:00:06", "link": "Surface.subsurface", "id": 3746}, {"content": "Note that the order of the tuple members in virtual attributes like .topleft\r\nis always (x,y) [or (left,top) or (width,height)] even if the name of the\r\nvirtual attribute seems to suggest the opposite order.  E.g.,\r\nrect1.topleft == (rect1.left,rect1.top)\r\n", "users_id": 5772, "datetimeon": "2011-01-25T01:19:14", "link": "pygame.Rect", "id": 3747}, {"content": "what", "users_id": null, "datetimeon": "2011-01-25T20:39:22", "link": "pygame.event.get_grab", "id": 3748}, {"content": "The width for \"ae\" WILL always match the width for \"a\" + \"e\" (which is \"a\" concatinated with\"e\").\r\nIt will not always match the width of \"a\" plus the width of \"e\".\r\n(But we knew what you meant.)", "users_id": null, "datetimeon": "2011-01-25T21:11:43", "link": "Font.size", "id": 3749}, {"content": "There's no 'code' member for type USEREVENT, unless you create one yourself\r\nwhen you create the event.", "users_id": 5772, "datetimeon": "2011-01-25T21:33:33", "link": "pygame.event", "id": 3750}, {"content": "July 15 2010 Anonymous, here's your example of a resizeable pygame window.\r\n\r\nI don't know what you mean by \"window itself as well as the display.\"\r\nIf you want to resize something WITHIN the pygame window, just blit something\r\ndifferent onto it.\r\n\r\nDave\r\n\r\n\r\nimport sys, os, pygame\r\npygame.init()\r\n\r\nclock = pygame.time.Clock()\r\n\r\nscrsize = width,height = 600,400\r\nblack = 0,0,0\r\nbgcolor = (240,240,220)  # light grey\r\n\r\n# to get the true full-screen size, do this BEFORE pygame.display.set_mode:\r\nfullscreen_sz = pygame.display.Info().current_w, pygame.display.Info().current_h\r\nprint( 'screen size =', fullscreen_sz )\r\n\r\n\r\n# ---------- This works under Windows Vista, no promises elsewhere! ----------\r\n# initially center the pygame window by setting %SDL_VIDEO_WINDOW_POS%\r\nwin_pos_left = 1 + ((fullscreen_sz[0] - width) // 2)\r\nwin_pos_top = 1 + ((fullscreen_sz[1] - height) // 2)\r\nos.environ['SDL_VIDEO_WINDOW_POS'] = '{0},{1}'.format(win_pos_left, win_pos_top)\r\n# ----------------------------------------------------------------------------\r\n\r\nscreen = pygame.display.set_mode(scrsize, pygame.RESIZABLE)\r\n\r\n# ----------------------------------------------------------------------------\r\nos.environ['SDL_VIDEO_WINDOW_POS'] = ''\r\n# if you don't clear the environment variable, the window will reposition\r\n# every time pygame.display.set_mode() gets called due to a VIDEORESIZE event.\r\n# ----------------------------------------------------------------------------\r\n\r\narial = pygame.font.SysFont( 'arial,microsoftsansserif,courier', 14 )\r\ntxt2display = arial.render( \"This window is resizeable\", True, black )\r\ntxt2display_w = txt2display.get_size()[0]\r\n\r\nwhile True:\r\n    changed = False\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT:\r\n            pygame.quit()\r\n            sys.exit(0)\r\n        elif event.type == pygame.VIDEORESIZE:\r\n            scrsize = event.size  # or event.w, event.h\r\n            screen = pygame.display.set_mode(scrsize,RESIZABLE)\r\n            changed = True\r\n\r\n    screen.fill( bgcolor )\r\n    screen.blit( txt2display, ((scrsize[0]+1-txt2display_w)//2,1) )  # at top-center of screen\r\n    pygame.display.update()\r\n    if not changed:\r\n        clock.tick(60) # limit to 60 fps\r\n", "users_id": 5772, "datetimeon": "2011-01-25T23:10:35", "link": "pygame.display.init", "id": 3751}, {"content": "Oops!  Tiny correction... the 8th-to-last line should be\r\n\r\n            screen = pygame.display.set_mode(scrsize,pygame.RESIZABLE)\r\n\r\n(Or else you can \"from pygame.locals import *\")", "users_id": 5772, "datetimeon": "2011-01-25T23:16:00", "link": "pygame.display.init", "id": 3752}, {"content": "from pygame.locals import *\r\n\r\n_evnames = {}                                 # from SDL-1.2.14\\include\\SDL_events.h\r\n_evnames[NOEVENT]         = 'NOEVENT'          #  0  SDL_NOEVENT\r\n_evnames[ACTIVEEVENT]     = 'ACTIVEEVENT'      #  1  SDL_ACTIVEEVENT\r\n_evnames[KEYDOWN]         = 'KEYDOWN'          #  2  SDL_KEYDOWN\r\n_evnames[KEYUP]           = 'KEYUP'            #  3  SDL_KEYUP\r\n_evnames[MOUSEMOTION]     = 'MOUSEMOTION'      #  4  SDL_MOUSEMOTION\r\n_evnames[MOUSEBUTTONDOWN] = 'MOUSEBUTTONDOWN'  #  5  SDL_MOUSEBUTTONDOWN\r\n_evnames[MOUSEBUTTONUP]   = 'MOUSEBUTTONUP'    #  6  SDL_MOUSEBUTTONUP\r\n_evnames[JOYAXISMOTION]   = 'JOYAXISMOTION'    #  7  SDL_JOYAXISMOTION\r\n_evnames[JOYBALLMOTION]   = 'JOYBALLMOTION'    #  8  SDL_JOYBALLMOTION\r\n_evnames[JOYHATMOTION]    = 'JOYHATMOTION'     #  9  SDL_JOYHATMOTION\r\n_evnames[JOYBUTTONDOWN]   = 'JOYBUTTONDOWN'    # 10  SDL_JOYBUTTONDOWN\r\n_evnames[JOYBUTTONUP]     = 'JOYBUTTONUP'      # 11  SDL_JOYBUTTONUP\r\n_evnames[QUIT]            = 'QUIT'             # 12  SDL_QUIT\r\n_evnames[SYSWMEVENT]      = 'SYSWMEVENT'       # 13  SDL_SYSWMEVENT\r\n                                               # 14  SDL_EVENT_RESERVEDA\r\n                                               # 15  SDL_EVENT_RESERVEDB\r\n_evnames[VIDEORESIZE]     = 'VIDEORESIZE'      # 16  SDL_VIDEORESIZE\r\n_evnames[VIDEOEXPOSE]     = 'VIDEOEXPOSE'      # 17  SDL_VIDEOEXPOSE\r\n                                               # 18  SDL_EVENT_RESERVED2\r\n                                               # 19  SDL_EVENT_RESERVED3\r\n                                               # 20  SDL_EVENT_RESERVED4\r\n                                               # 21  SDL_EVENT_RESERVED5\r\n                                               # 22  SDL_EVENT_RESERVED6\r\n                                               # 23  SDL_EVENT_RESERVED7\r\n_evnames[USEREVENT]       = 'USEREVENT'        # 24  SDL_USEREVENT\r\n_evnames[NUMEVENTS]       = 'NUMEVENTS'        # 32  SDL_NUMEVENTS\r\n\r\n\r\ndef event_name(evtype):\r\n    '''return a displayable name for a pygame/SDL event type number'''\r\n    try:\r\n        result = _evnames[evtype]\r\n    except:\r\n        if evtype in range(USEREVENT,NUMEVENTS):\r\n            result = 'USEREVENT+' + repr(evtype-USEREVENT)\r\n        elif evtype >= NUMEVENTS:\r\n            result = 'ILLEGAL_EVENT_' + repr(evtype)\r\n        elif evtype == 14:\r\n            result = 'EVENT_RESERVEDA'\r\n        elif evtype == 15:\r\n            result = 'EVENT_RESERVEDB'\r\n        else:\r\n            result = 'EVENT_RESERVED' + repr(evtype-16)\r\n    return result\r\n\r\n\r\nfor i in range(0,33):\r\n    print(repr(i) + ' = ' + event_name(i))\r\n\r\n\r\n# It's all gonna change in SDL 1.3:\r\n#\r\n#   SDL_FIRSTEVENT        = 0      # Unused\r\n#\r\n#   SDL_QUIT              = 0x100  # User-requested quit\r\n#\r\n#   SDL_WINDOWEVENT       = 0x200  # Window state change\r\n#   SDL_SYSWMEVENT        = 0x201  # System specific event\r\n#\r\n#   # Keyboard events\r\n#   SDL_KEYDOWN           = 0x300  # Key pressed\r\n#   SDL_KEYUP             = 0x301  # Key released\r\n#   SDL_TEXTEDITING       = 0x302  # Keyboard text editing (composition)\r\n#   SDL_TEXTINPUT         = 0x303  # Keyboard text input\r\n#\r\n#   # Mouse events\r\n#   SDL_MOUSEMOTION       = 0x400  # Mouse moved\r\n#   SDL_MOUSEBUTTONDOWN   = 0x401  # Mouse button pressed\r\n#   SDL_MOUSEBUTTONUP     = 0x402  # Mouse button released\r\n#   SDL_MOUSEWHEEL        = 0x403  # Mouse wheel motion\r\n#\r\n#   # Tablet or multiple mice input device events\r\n#   SDL_INPUTMOTION       = 0x500  # Input moved\r\n#   SDL_INPUTBUTTONDOWN   = 0x501  # Input button pressed\r\n#   SDL_INPUTBUTTONUP     = 0x502  # Input button released\r\n#   SDL_INPUTWHEEL        = 0x503  # Input wheel motion\r\n#   SDL_INPUTPROXIMITYIN  = 0x504  # Input pen entered proximity\r\n#   SDL_INPUTPROXIMITYOUT = 0x505  # Input pen left proximity\r\n#\r\n#   # Joystick events\r\n#   SDL_JOYAXISMOTION     = 0x600  # Joystick axis motion\r\n#   SDL_JOYBALLMOTION     = 0x601  # Joystick trackball motion\r\n#   SDL_JOYHATMOTION      = 0x602  # Joystick hat position change\r\n#   SDL_JOYBUTTONDOWN     = 0x603  # Joystick button pressed\r\n#   SDL_JOYBUTTONUP       = 0x604  # Joystick button released\r\n#\r\n#   # Touch events\r\n#   SDL_FINGERDOWN        = 0x700\r\n#   SDL_FINGERUP          = 0x701\r\n#   SDL_FINGERMOTION      = 0x702\r\n#   SDL_TOUCHBUTTONDOWN   = 0x703\r\n#   SDL_TOUCHBUTTONUP     = 0x704\r\n#\r\n#   # Gesture events\r\n#   SDL_DOLLARGESTURE     = 0x800\r\n#   SDL_DOLLARRECORD      = 0x801\r\n#   SDL_MULTIGESTURE      = 0x802\r\n#\r\n#   # Clipboard events\r\n#   SDL_CLIPBOARDUPDATE   = 0x900  # The clipboard changed\r\n#\r\n#   # Obsolete events\r\n#   SDL_EVENT_COMPAT1     =0x7000  # SDL 1.2 events for compatibility\r\n#   SDL_EVENT_COMPAT2     =0x7001\r\n#   SDL_EVENT_COMPAT3     =0x7002\r\n#\r\n#   # SDL_USEREVENT thru SDL_LASTEVENT are for your use\r\n#   SDL_USEREVENT         =0x8000\r\n#   SDL_LASTEVENT         =0xFFFF\r\n", "users_id": 5772, "datetimeon": "2011-01-27T04:08:06", "link": "pygame.event.Event", "id": 3753}, {"content": "can we get an admin to delete that?", "users_id": null, "datetimeon": "2011-01-27T17:25:55", "link": "pygame.draw.circle", "id": 3754}, {"content": "This function seems to me little bit buggy, so I wrote my own:\r\n\r\na and b are surfarrays of some surfaces that you want to compare\r\n\r\n    def comparray(self,a,b):\r\n        c = abs(a.__sub__(b))\r\n        c = c.__ge__(self.tolerance)*255\r\n        surface = pygame.surfarray.make_surface(c)\r\n        return surface", "users_id": null, "datetimeon": "2011-01-27T18:49:07", "link": "PixelArray.compare", "id": 3755}, {"content": "This function seems to me little bit buggy, so I wrote my own:\r\n\r\na and b are surfarrays of some surfaces that you want to compare\r\n\r\n    def comparray(self,a,b):\r\n        c = abs(a.__sub__(b))\r\n        c = c.__ge__(self.tolerance)*255\r\n        surface = pygame.surfarray.make_surface(c)\r\n        return surface", "users_id": 4688, "datetimeon": "2011-01-27T18:49:33", "link": "PixelArray.compare", "id": 3756}, {"content": "There's an error in this documentation w/r/t the final (width) argument:\r\n\r\n    pygame.draw.rect(self.image, color, self.image.get_rect(), width=1)\r\nTypeError: rect() takes no keyword arguments\r\n\r\nLeave off the \"width=\" to make it work:\r\n\r\n    pygame.draw.rect(self.image, color, self.image.get_rect(), 1)\r\n\r\nThis is with either pygame-1.9.1.win32-py2.6.msi or pygame-1.9.1.win32-py3.1.msi\r\n", "users_id": 5772, "datetimeon": "2011-01-28T03:12:31", "link": "pygame.draw.rect", "id": 3757}, {"content": "your gay", "users_id": null, "datetimeon": "2011-01-28T04:28:47", "link": "Rect.colliderect", "id": 3758}, {"content": "There's an error in this documentation w/r/t the final (width) argument:\r\n\r\n    pygame.draw.line(self.image, (0,0,0), (x,y), (x,y+h), width=2)\r\nTypeError: line() takes no keyword arguments\r\n\r\nLeave off the \"width=\" to make it work:\r\n\r\n    pygame.draw.line(self.image, (0,0,0), (x,y), (x,y+h), 2)\r\n\r\nThis is with either pygame-1.9.1.win32-py2.6.msi or pygame-1.9.1.win32-py3.1.msi", "users_id": 5772, "datetimeon": "2011-01-28T04:54:01", "link": "pygame.draw.line", "id": 3759}, {"content": "Rect.center rounds UP:\r\n\r\nr0x0 = pygame.Rect(0,0,0,0)  # a 0x0 rect\r\nprint('center of 0x0 rect is ' + repr(r0x0.center))  # result is (0,0) = not in the rect!\r\nr1x1 = pygame.Rect(0,0,1,1)  # a 1x1 rect\r\nprint('center of 1x1 rect is ' + repr(r1x1.center))  # result is (0,0) = correct\r\nr2x2 = pygame.Rect(0,0,2,2)  # a 2x2 rect\r\nprint('center of 2x2 rect is ' + repr(r2x2.center))  # result is (1,1) = rounded up!\r\nr3x3 = pygame.Rect(0,0,3,3)  # a 3x3 rect\r\nprint('center of 3x3 rect is ' + repr(r3x3.center))  # result is (1,1) = exact\r\nr4x4 = pygame.Rect(0,0,4,4)  # a 4x4 rect\r\nprint('center of 4x4 rect is ' + repr(r4x4.center))  # result is (2,2) = rounded up!\r\nr5x5 = pygame.Rect(0,0,5,5)  # a 5x5 rect\r\nprint('center of 5x5 rect is ' + repr(r5x5.center))  # result is (2,2) = exact\r\nr6x6 = pygame.Rect(0,0,6,6)  # a 6x6 rect\r\nprint('center of 6x6 rect is ' + repr(r6x6.center))  # result is (3,3) = rounded up!\r\nr7x7 = pygame.Rect(0,0,7,7)  # a 7x7 rect\r\nprint('center of 7x7 rect is ' + repr(r7x7.center))  # result is (3,3) = exact\r\n", "users_id": 5772, "datetimeon": "2011-01-29T20:46:36", "link": "Rect.collidepoint", "id": 3761}, {"content": "(Oops, I added that comment in the wrong place.)", "users_id": 5772, "datetimeon": "2011-01-29T20:47:58", "link": "Rect.collidepoint", "id": 3762}, {"content": "Rect.center rounds UP:\r\n\r\nr0x0 = pygame.Rect(0,0,0,0)  # a 0x0 rect\r\nprint('center of 0x0 rect is ' + repr(r0x0.center))  # result is (0,0) = not in the rect!\r\nr1x1 = pygame.Rect(0,0,1,1)  # a 1x1 rect\r\nprint('center of 1x1 rect is ' + repr(r1x1.center))  # result is (0,0) = correct\r\nr2x2 = pygame.Rect(0,0,2,2)  # a 2x2 rect\r\nprint('center of 2x2 rect is ' + repr(r2x2.center))  # result is (1,1) = rounded up!\r\nr3x3 = pygame.Rect(0,0,3,3)  # a 3x3 rect\r\nprint('center of 3x3 rect is ' + repr(r3x3.center))  # result is (1,1) = exact\r\nr4x4 = pygame.Rect(0,0,4,4)  # a 4x4 rect\r\nprint('center of 4x4 rect is ' + repr(r4x4.center))  # result is (2,2) = rounded up!\r\nr5x5 = pygame.Rect(0,0,5,5)  # a 5x5 rect\r\nprint('center of 5x5 rect is ' + repr(r5x5.center))  # result is (2,2) = exact\r\nr6x6 = pygame.Rect(0,0,6,6)  # a 6x6 rect\r\nprint('center of 6x6 rect is ' + repr(r6x6.center))  # result is (3,3) = rounded up!\r\nr7x7 = pygame.Rect(0,0,7,7)  # a 7x7 rect\r\nprint('center of 7x7 rect is ' + repr(r7x7.center))  # result is (3,3) = exact", "users_id": 5772, "datetimeon": "2011-01-29T20:48:50", "link": "pygame.Rect", "id": 3763}, {"content": "This documentation is incorrect.  A point along the right or bottom edge IS\r\nwithin the Rect, and points at coordinates on the bottom or right edge DO\r\ncollide with the Rect.\r\n\r\nHere's proof:\r\n\r\nr = Rect(0,0, 4,4)  # a 4x4 rectangle\r\nprint('0,0: ' + repr(r.collidepoint(0,0)))\r\nprint('1,1: ' + repr(r.collidepoint(1,1)))\r\nprint('2,2: ' + repr(r.collidepoint(2,2)))\r\nprint('3,3: ' + repr(r.collidepoint(3,3)))\r\nprint('4,4: ' + repr(r.collidepoint(4,4)))\r\n\r\nWith pygame 1.9.1 under both Python 3.1 and 2.6, it prints:\r\n\r\n0,0: 1\r\n1,1: 1\r\n2,2: 1\r\n3,3: 1\r\n4,4: 0\r\n\r\nNote that the bottom-right pixel within the 4x4 rect is at (3,3) and\r\ncollidepoint((3,3)) does return 1 (meaning true).\r\n\r\nA second (minor) documentation error is that it actually returns an integer\r\n1 or 0 instead of boolean True or False.\r\n", "users_id": 5772, "datetimeon": "2011-01-29T22:35:18", "link": "Rect.collidepoint", "id": 3764}, {"content": "It would be nice if the number of Sounds on queue was more than one...\r\n\r\nGreg Ruo", "users_id": null, "datetimeon": "2011-01-30T21:39:27", "link": "Channel.queue", "id": 3765}, {"content": "I solved my previous question:\r\n\r\nIf you need to play in sequence several Sounds in a queue, you can solve this\r\nwith something like:\r\n=======================\r\n    i=0\r\n    while (Ch0.get_queue()==None) and (i<10):\r\n            i+=1\r\n            Ch0.queue(f[i])\r\n============================\r\n\r\nwhere Ch0 is your Sound channel created with Ch0=pygame.mixer.Channel(0).\r\nIn other words, even if the queue allows only one single sound in queue,\r\nI use the .get_queue method to wait until the queue is free before\r\n adding the next Sound in the sequence.\r\n\r\nIf you have better solutions please reply here. Thanks.\r\n\r\nGreg Ruo", "users_id": null, "datetimeon": "2011-01-30T22:38:45", "link": "Channel.queue", "id": 3766}, {"content": "Probably would be good to have an  OPTIONAL  choice to remove them from the queue . . .", "users_id": null, "datetimeon": "2011-01-31T13:48:40", "link": "pygame.event.get", "id": 3768}, {"content": "I had this weird thing where blue/red was inversed, but not the other colours, when I was mapping some pixels from one image to a blank surface.\r\nIt was caused by copying the color integer directly to one pixel to the other, so the trick is to always surface.unmap_rgb(pixel) before setting the color to a new pixel \r\nThat tricked works.\r\nIt's the only way unfortunately.", "users_id": null, "datetimeon": "2011-02-04T02:33:15", "link": "pygame.PixelArray", "id": 3771}, {"content": "@Dave: Thanks very much for writing that we should ignore the keyword \"width\". This saved me time and my program now works.", "users_id": null, "datetimeon": "2011-02-05T08:25:19", "link": "pygame.draw.rect", "id": 3773}, {"content": "This class is a bit odd.  Event objects have no event.__dict__ attribute,\r\nand the dir(event) function doesn't work.  However, repr(event) returns a\r\nnice, thorough description of an event object and its attributes, and the\r\nevent.dict attribute lists all the important attributes except .type and\r\n.dict itself.", "users_id": 5772, "datetimeon": "2011-02-07T04:48:40", "link": "pygame.event", "id": 3774}, {"content": "ankit sucks", "users_id": null, "datetimeon": "2011-02-08T14:07:31", "link": "Rect.colliderect", "id": 3776}, {"content": "i heard ankit really sucks", "users_id": null, "datetimeon": "2011-02-08T14:07:46", "link": "Rect.collidepoint", "id": 3777}, {"content": "ankit tandon sucks", "users_id": null, "datetimeon": "2011-02-08T14:07:55", "link": "Rect.contains", "id": 3778}, {"content": "I don't get what this does...", "users_id": null, "datetimeon": "2011-02-09T22:32:43", "link": "pygame.event.pump", "id": 3779}, {"content": "If you don't use the event queue(why aren't you??) this will keep your program from locking up.", "users_id": null, "datetimeon": "2011-02-10T21:20:05", "link": "pygame.event.pump", "id": 3780}, {"content": "When the camera is stopped and you try to access it pygame segfaults.\r\n(On Debian testing with pygame 1.9.1)", "users_id": null, "datetimeon": "2011-02-11T03:31:32", "link": "Camera.stop", "id": 3781}, {"content": "set_allowed removes events from the queue! \r\nEven if the event in question doesn't belong to the given type.\r\n\r\n>>> import pygame\r\n>>> pygame.init()\r\n>>> pygame.event.post(pygame.event.Event(pygame.USEREVENT, code=0))\r\n>>> print pygame.event.peek(pygame.USEREVENT)\r\n1\r\n>>> pygame.event.set_allowed(pygame.MOUSEMOTION)\r\n>>> print pygame.event.peek(pygame.USEREVENT)\r\n0\r\n\r\n", "users_id": null, "datetimeon": "2011-02-11T17:42:34", "link": "pygame.event.set_allowed", "id": 3782}, {"content": "Thank you very much.\r\nYour compare function works much better than the original one.", "users_id": null, "datetimeon": "2011-02-14T16:59:41", "link": "PixelArray.compare", "id": 3783}, {"content": "slask", "users_id": null, "datetimeon": "2011-02-15T06:47:03", "link": "pygame.sprite.groupcollide", "id": 3784}, {"content": "It means that it's a class and not a object.", "users_id": null, "datetimeon": "2011-02-15T06:49:13", "link": "pygame.sprite.spritecollide", "id": 3785}, {"content": "meto", "users_id": null, "datetimeon": "2011-02-15T19:30:06", "link": "Color.g", "id": 3786}, {"content": "rofl rofl what for a crappy thing you performed? go to wikipedia it works!\r\n\r\nu mad!", "users_id": null, "datetimeon": "2011-02-16T06:49:19", "link": "pygame.draw.rect", "id": 3787}, {"content": "rofl rofl what for a crappy thing you performed? go to wikipedia it works!\r\n\r\nu mad!", "users_id": null, "datetimeon": "2011-02-16T06:50:00", "link": "pygame.draw.rect", "id": 3788}, {"content": "stfu\r\n\r\nu mad", "users_id": null, "datetimeon": "2011-02-16T06:52:07", "link": "Rect.unionall_ip", "id": 3789}, {"content": "This method only queues one music file.\r\nIf you call it and there already is a queued file, it will be overrided.", "users_id": null, "datetimeon": "2011-02-19T12:17:58", "link": "pygame.mixer.music.queue", "id": 3791}, {"content": "elif event.type == pygame.QUIT or event.type == pygame.K_ESCAPE:\r\n\r\nthe event type is not pygame.K_ESCAPE. you have to check for a KEYDOWN or KEYUP event and check if it is the key you want, for example:\r\n\r\nelif event.type == pygame.QUIT or (event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE):\r\n", "users_id": null, "datetimeon": "2011-02-21T08:30:17", "link": "pygame.key", "id": 3793}, {"content": "With a Microsoft IntelliMouse p/n X05-77975, under Windows Vista,\r\nwith either Python 2.6 or 3.1, the button numbers are:\r\n1 = left button\r\n2 = center button/wheel press\r\n3 = right button\r\n4 = wheel roll forward/up\r\n5 = wheel roll backward/down\r\n6 = left side extra button\r\n7 = right side extra button\r\n", "users_id": 5772, "datetimeon": "2011-02-23T21:04:46", "link": "pygame.event", "id": 3794}, {"content": "There's a cursor missing!  sizer_xy_strings defines an upper-left-to-lower-right\r\nresizer cursor, suitable for dragging the upper-left or lower-right corner.\r\nBut there's no sizer_yx_strings to make the upper-right-to-lower-left cursor.\r\nHere's how I made one:\r\n\r\nsizer_yx_strings = [ x[12::-1]+x[13:] for x in pygame.cursors.sizer_xy_strings ]\r\n", "users_id": 5772, "datetimeon": "2011-02-24T02:08:27", "link": "pygame.cursors", "id": 3795}, {"content": "Or, equivalently:\r\n\r\nsizer_yx_strings = (               #sized 24x16\r\n \"     XXXXXXXX           \",\r\n \"      X.....X           \",\r\n \"       X....X           \",\r\n \"        X...X           \",\r\n \"       X.X..X           \",\r\n \"      X.X X.X           \",\r\n \"X    X.X   XX           \",\r\n \"XX  X.X     X           \",\r\n \"X.XX.X                  \",\r\n \"X...X                   \",\r\n \"X...X                   \",\r\n \"X....X                  \",\r\n \"X.....X                 \",\r\n \"XXXXXXXX                \",\r\n \"                        \",\r\n \"                        \",\r\n)", "users_id": 5772, "datetimeon": "2011-02-24T02:13:59", "link": "pygame.cursors", "id": 3796}, {"content": "Well, sometimes black and white are swapped, sometimes they aren't.\r\nEven in the same program, for one mouse cursor it may work right,\r\nand for another cursor the black & white colors are swapped.\r\n\r\nI haven't figured out what triggers this bug.", "users_id": null, "datetimeon": "2011-02-24T13:00:58", "link": "pygame.cursors.compile", "id": 3797}, {"content": "spam", "users_id": null, "datetimeon": "2011-02-26T15:00:47", "link": "pygame.event.set_grab", "id": 3798}, {"content": "The Sound function now accepts 'buffer', 'file', and 'array' keyword arguments\r\nto remove any ambiguity in how to treat an argument. The 'array' keyword is new,\r\nand tells Sound to look check the argument for an array struct interface or\r\nthe new buffer protocol if supported. This allows Sound to function like\r\nsndarray.make_sound.\r\n\r\nSound also exposes an array struct interface and the new buffer protocol.", "users_id": 1912, "datetimeon": "2011-03-01T13:26:33", "link": "pygame.mixer.Sound", "id": 3799}, {"content": "I'm not sure which version of Pygame is being used here, 1.9? At the time it was\r\nreleased NumPy was unavailable for Python 3.1. Python 1.9.2 alpha from SVN\r\ncertainly does support NumPy for Python 3.1, and 3.2.", "users_id": 1912, "datetimeon": "2011-03-01T13:35:12", "link": "pygame.surfarray", "id": 3800}, {"content": "That should be \"which version of Pygame is being used here, 1.9.1?\"", "users_id": 1912, "datetimeon": "2011-03-01T13:37:12", "link": "pygame.surfarray", "id": 3801}, {"content": "New to Pygame 1.9.2 for NumPy: pixels_red, pixels_green, and pixels_blue.", "users_id": 1912, "datetimeon": "2011-03-01T13:38:40", "link": "pygame.surfarray.pixels_alpha", "id": 3802}, {"content": "In Pygame 1.9.2 surface objects have sprouted a new method, get_view:\r\n\r\nSurface.get_view\r\nreturn a view of a surface's pixel data.\r\nSurface.get_view(kind='2'): return\r\n\r\nReturn an object which exposes a surface's internal pixel buffer to a NumPy array. For now a custom object with an array struct interface is returned. A Python memoryview may be returned in the future. The buffer is writeable.\r\n\r\nThe kind argument is the length 1 string '2', '3', 'r', 'g', 'b', or 'a'. The letters are case insensitive; 'A' will work as well. The argument can be either a Unicode or byte (char) string. The default is '2'.\r\n\r\nA kind '2' view is a (surface-width, surface-height) array of raw pixels. The pixels are surface bytesized unsigned integers. The pixel format is surface specific. It is unavailable for 24-bit surfaces.\r\n\r\n'3' returns a (surface-width, surface-height, 3) view of RGB color components. Each of the red, green, and blue components are unsigned bytes. Only 24-bit and 32-bit surfaces are supported. The color components must be in either RGB or BGR order within the pixel.\r\n\r\n'r' for red, 'g' for green, 'b' for blue, and 'a' for alpha return a (surface-width, surface-height) view of a single color component within a surface: a color plane. Color components are unsigned bytes. Both 24-bit and 32-bit surfaces support 'r', 'g', and 'b'. Only 32-bit surfaces with SRCALPHA support 'a'.\r\n\r\nThis method implicitly locks the Surface. The lock will be released, once the returned view object is deleted.\r\n\r\n", "users_id": null, "datetimeon": "2011-03-01T14:59:53", "link": "pygame.Surface", "id": 3803}, {"content": "In Pygame 1.9.2 surface objects have sprouted a new method, get_view:\r\n\r\nSurface.get_view\r\nreturn a view of a surface's pixel data.\r\nSurface.get_view(kind='2'): return\r\n\r\nReturn an object which exposes a surface's internal pixel buffer to a NumPy\r\narray. For now a custom object with an array struct interface is returned.\r\nA Python memoryview may be returned in the future. The buffer is writeable.\r\n\r\nThe kind argument is the length 1 string '2', '3', 'r', 'g', 'b', or 'a'.\r\nThe letters are case insensitive; 'A' will work as well. The argument can be\r\neither a Unicode or byte (char) string. The default is '2'.\r\n\r\nA kind '2' view is a (surface-width, surface-height) array of raw pixels. The\r\npixels are surface bytesized unsigned integers. The pixel format is surface\r\nspecific. It is unavailable for 24-bit surfaces.\r\n\r\n'3' returns a (surface-width, surface-height, 3) view of RGB color components.\r\nEach of the red, green, and blue components are unsigned bytes. Only 24-bit and\r\n32-bit surfaces are supported. The color components must be in either RGB or\r\nBGR order within the pixel.\r\n\r\n'r' for red, 'g' for green, 'b' for blue, and 'a' for alpha return a\r\n(surface-width, surface-height) view of a single color component within a\r\nsurface: a color plane. Color components are unsigned bytes. Both 24-bit and\r\n32-bit surfaces support 'r', 'g', and 'b'. Only 32-bit surfaces with SRCALPHA\r\nsupport 'a'.\r\n\r\nThis method implicitly locks the Surface. The lock will be released, once the\r\nreturned view object is deleted.\r\n\r\n", "users_id": null, "datetimeon": "2011-03-01T15:02:04", "link": "pygame.Surface", "id": 3804}, {"content": "for statement with arc", "users_id": null, "datetimeon": "2011-03-01T19:54:13", "link": "pygame.draw.arc", "id": 3805}, {"content": "Oh my god I was so thankful that you can adjust the volume, I have no editing software to fix my sounds.", "users_id": null, "datetimeon": "2011-03-03T21:26:40", "link": "Sound.set_volume", "id": 3806}, {"content": "Thanks to the comments for wrinting about the event attributes and the key constants list. It should be in any serious documentation.", "users_id": null, "datetimeon": "2011-03-09T16:10:36", "link": "pygame.event.Event", "id": 3808}, {"content": "a;rtawkljethlak", "users_id": null, "datetimeon": "2011-03-10T18:41:39", "link": "pygame.font", "id": 3809}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:20", "link": "pygame.font.init", "id": 3810}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:22", "link": "pygame.font.init", "id": 3811}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:24", "link": "pygame.font.init", "id": 3812}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:27", "link": "pygame.font.init", "id": 3813}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:29", "link": "pygame.font.init", "id": 3814}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:31", "link": "pygame.font.init", "id": 3815}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:33", "link": "pygame.font.init", "id": 3816}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:36", "link": "pygame.font.init", "id": 3817}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:37", "link": "pygame.font.init", "id": 3818}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:47", "link": "pygame.font.init", "id": 3819}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:53", "link": "pygame.font.init", "id": 3820}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:54", "link": "pygame.font.init", "id": 3821}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:56", "link": "pygame.font.init", "id": 3822}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:42:58", "link": "pygame.font.init", "id": 3823}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:01", "link": "pygame.font.init", "id": 3824}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:03", "link": "pygame.font.init", "id": 3825}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:07", "link": "pygame.font.init", "id": 3826}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:09", "link": "pygame.font.init", "id": 3827}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:11", "link": "pygame.font.init", "id": 3828}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:13", "link": "pygame.font.init", "id": 3829}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:15", "link": "pygame.font.init", "id": 3830}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:16", "link": "pygame.font.init", "id": 3831}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:19", "link": "pygame.font.init", "id": 3832}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:20", "link": "pygame.font.init", "id": 3833}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:22", "link": "pygame.font.init", "id": 3834}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:24", "link": "pygame.font.init", "id": 3835}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:26", "link": "pygame.font.init", "id": 3836}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:28", "link": "pygame.font.init", "id": 3837}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:29", "link": "pygame.font.init", "id": 3838}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:31", "link": "pygame.font.init", "id": 3839}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:33", "link": "pygame.font.init", "id": 3840}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:35", "link": "pygame.font.init", "id": 3841}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:37", "link": "pygame.font.init", "id": 3842}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:39", "link": "pygame.font.init", "id": 3843}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:40", "link": "pygame.font.init", "id": 3844}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:42", "link": "pygame.font.init", "id": 3845}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:45", "link": "pygame.font.init", "id": 3846}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:46", "link": "pygame.font.init", "id": 3847}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:48", "link": "pygame.font.init", "id": 3848}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:50", "link": "pygame.font.init", "id": 3849}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:52", "link": "pygame.font.init", "id": 3850}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:53", "link": "pygame.font.init", "id": 3851}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:55", "link": "pygame.font.init", "id": 3852}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:57", "link": "pygame.font.init", "id": 3853}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:43:59", "link": "pygame.font.init", "id": 3854}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:07", "link": "pygame.font.init", "id": 3855}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:09", "link": "pygame.font.init", "id": 3856}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:11", "link": "pygame.font.init", "id": 3857}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:13", "link": "pygame.font.init", "id": 3858}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:15", "link": "pygame.font.init", "id": 3859}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:18", "link": "pygame.font.init", "id": 3860}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:20", "link": "pygame.font.init", "id": 3861}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:22", "link": "pygame.font.init", "id": 3862}, {"content": "I LIKEY TO SPAM", "users_id": null, "datetimeon": "2011-03-10T18:44:24", "link": "pygame.font.init", "id": 3863}, {"content": "Hey guys, how do you detect if user hits enter? There's no event.key for that! Thank you.", "users_id": null, "datetimeon": "2011-03-12T11:25:09", "link": "pygame.key", "id": 3864}, {"content": "Could somebody please delete the horrible code in this comment thread? :(", "users_id": null, "datetimeon": "2011-03-15T20:16:46", "link": "pygame.draw.circle", "id": 3865}, {"content": "\r\n\r\npygame documentation\t ||  Pygame Home  ||  Help Contents  || Reference Index  || \r\n \r\nCamera ||  Cdrom ||  Color ||  Cursors ||  Display ||  Draw ||  Event ||  Examples ||  Font ||  Gfxdraw ||  Image ||  Joystick ||  Key ||  Locals ||  Mask ||  Midi ||  Mixer ||  Mouse ||  Movie ||  Music ||  Overlay ||  Pixelarray ||  Pygame ||  Rect ||  Scrap ||  Sndarray ||  Sprite ||  Surface ||  Surfarray ||  Tests ||  Time ||  Transform\r\nFont.metrics\r\n\r\nThe user submitted comments should be used for:\r\n\r\nExamples\r\nHelpful hints, tips, and tricks\r\nFurther explanation / documentation\r\nThe user submitted comments should NOT be used for:\r\n\r\nBug Reports (see our new Bug Reports link on the side)\r\nFeature Requests\r\nQuestions\r\nPlease note that periodically, the developers may go through the notes and incorporate the information in them into the documentation. This means that any note submitted here becomes the property of Pete Shinners under the LGPL licence.\r\n\r\nIf you do not want to leave an anonymous comment, please sign in first.\r\n\r\n", "users_id": null, "datetimeon": "2011-03-21T15:13:24", "link": "Font.metrics", "id": 3868}, {"content": "I can't figure how to crop an image, even after reading this suggestion", "users_id": null, "datetimeon": "2011-03-22T11:32:04", "link": "pygame.transform.chop", "id": 3870}, {"content": "I was dumb.  Here is how I got it to work.  So simple:\r\n\r\ncreen.blit(gameboard,(selection.x-18,selection.y-18),(selection.x-18,selection.y-18,96,96))", "users_id": null, "datetimeon": "2011-03-22T11:45:29", "link": "pygame.transform.chop", "id": 3871}, {"content": "For the KEYDOWN and KEYUP event \"scancode\" is also a member and can be used \r\nfor the unknown keys", "users_id": 6038, "datetimeon": "2011-03-23T05:51:58", "link": "pygame.event", "id": 3872}, {"content": "Perfect, Matthew Brown! Just what I was looking for. I found the reset_stuff() function especially useful and I'm going to use it in our production software.", "users_id": null, "datetimeon": "2011-03-24T10:34:18", "link": "pygame.draw.circle", "id": 3873}, {"content": "Wow, thanks a lot Matthew, I am a PyGame newbie and was having some troubles understanding this function without a complete example.", "users_id": null, "datetimeon": "2011-03-24T12:23:02", "link": "pygame.draw.circle", "id": 3874}, {"content": "lol", "users_id": null, "datetimeon": "2011-03-24T18:06:29", "link": "pygame.draw.circle", "id": 3875}, {"content": "Guys, what Matthew N. Brown did here harms python's reputation.\r\n\r\nPython is elegant.\r\n\r\nWhat Matthew did was perlify python ... this is terrible...", "users_id": null, "datetimeon": "2011-03-24T18:07:11", "link": "pygame.draw.circle", "id": 3876}, {"content": "Just wanted to give my profuse thanks to Matthew N. Brown for his superb usage example of this otherwise vague and esoteric method. I've contacted my boss and we will now integrate this snippet into all of our newly created (and soon-to-be-refactored) legacy code.", "users_id": null, "datetimeon": "2011-03-25T20:41:38", "link": "pygame.draw.circle", "id": 3878}, {"content": "where image is a surface, rot and scale are floats\r\n\r\n    return pygame.transform.smoothscale(image, rot, scale)\r\nTypeError: argument 2 must be 2-item sequence, not float\r\n    \r\n    return pygame.transform.smoothscale(image,[0,0], scale)\r\nTypeError: argument 3 must be pygame.Surface, not float", "users_id": null, "datetimeon": "2011-03-27T01:37:09", "link": "pygame.transform.rotozoom", "id": 3879}, {"content": "and...\r\n    surf = pygame.surface.Surface((image.get_width()*scale, image.get_height()*scale))\r\n    return pygame.transform.smoothscale(image,[0,0], surf)\r\n\r\n    pygame.transform.smoothscale(image,[0,0], surf)\r\nValueError: Destination surface not the given width or height.", "users_id": null, "datetimeon": "2011-03-27T01:40:56", "link": "pygame.transform.rotozoom", "id": 3880}, {"content": "look at set_grab first and then you understand", "users_id": null, "datetimeon": "2011-03-27T13:55:15", "link": "pygame.event.get_grab", "id": 3881}, {"content": "getting this error :\r\n in __init__\r\n    self.font = pygame.font.Font(\"None\", 50)\r\nerror: font not initialized\r\n\r\nnot sure why because i rendered the font.. ", "users_id": null, "datetimeon": "2011-04-02T14:35:05", "link": "Font.render", "id": 3882}, {"content": "The enter key is K_RETURN.", "users_id": null, "datetimeon": "2011-04-02T17:03:07", "link": "pygame.key", "id": 3883}, {"content": "The wheel generates pygame.MOUSEBUTTONUP events too, not just pygame.MOUSEBUTTONDOWN event.", "users_id": 6075, "datetimeon": "2011-04-02T23:30:45", "link": "pygame.mouse", "id": 3884}, {"content": "Forget what the functions do, check out Mr. Brown's naming style. Its pure genius!\r\n1) angle_times_WOW_pi_divided_by_180\r\n2) HE_HE_strange_popper_z\r\n3) buffy_the_fat2\r\n4) they_did_touch\r\n5) while Grr < LIN_collide_max:\r\n6) Rotated_Relate_ball1_z__PLUS__Rotated_ball1_zol\r\n7) write_to_file_WEEE_STRANGE()\r\n8) freaky_rect_switcharoo_2D()", "users_id": 4737, "datetimeon": "2011-04-03T18:28:23", "link": "pygame.draw.circle", "id": 3885}, {"content": "For this error :\r\nthere is no soundcard\r\n\r\nCall pygame.mixer.init two times :\r\npygame.mixer.init()\r\npygame.mixer.init()\r\n\r\nOR\r\n\r\npygame.mixer.init(); pygame.mixer.init()\r\n\r\n(don't omit semicolon)", "users_id": null, "datetimeon": "2011-04-05T05:06:41", "link": "pygame.mixer.init", "id": 3886}, {"content": "/love little kids who leave dumb comments like this one", "users_id": null, "datetimeon": "2011-04-12T10:48:18", "link": "Rect.colliderect", "id": 3889}, {"content": "there is no information about the supported formats - are those from ModPlugTracker supported? (like .mod, .xm, .s3m, etc.)", "users_id": null, "datetimeon": "2011-04-12T12:35:41", "link": "pygame.mixer.music.load", "id": 3890}, {"content": "Yes", "users_id": null, "datetimeon": "2011-04-12T16:17:04", "link": "Font.render", "id": 3891}, {"content": "This function returns the point on the first mask where the masks collided.", "users_id": null, "datetimeon": "2011-04-16T12:10:39", "link": "pygame.sprite.collide_mask", "id": 3894}, {"content": "This seems to be broken!\r\nI call this before playing a movie, but there is no sound.\r\nPlaying the movie without initializing the mixer in the first place, works!\r\n\r\nCan anyone confirm that this is broken?", "users_id": null, "datetimeon": "2011-04-18T11:51:33", "link": "pygame.mixer.quit", "id": 3895}, {"content": "For Windows (XP):\r\nThe problem is that the screen does not get updated automatically, for some reason.\r\nThe solution is simple. Take a surface with the size of the movie, set this as the display of the movie.\r\nIn a loop, get the current frame of the movie and if it increases, blit the surface onto the screen and update the screen.", "users_id": null, "datetimeon": "2011-04-19T10:47:45", "link": "pygame.movie", "id": 3896}, {"content": "#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\nfrom pygame import *\r\nimport pygame, time, numpy, pygame.sndarray\r\n\r\nsample_rate = 44100\r\n\r\ndef play_for(sample_array, ms, volLeft, volRight):\r\n    sound = pygame.sndarray.make_sound(sample_array)\r\n    beg = time.time()\r\n    channel = sound.play(-1)\r\n    channel.set_volume(volLeft,volRight)\r\n    pygame.time.delay(ms)\r\n    sound.stop()\r\n    end = time.time()\r\n    return beg, end\r\n    \r\ndef sine_array_onecycle(hz, peak):\r\n    length = sample_rate / float(hz)\r\n    omega = numpy.pi * 2 / length\r\n    xvalues = numpy.arange(int(length)) * omega\r\n    return (peak * numpy.sin(xvalues))\r\n    \r\ndef sine_array(hz, peak, n_samples = sample_rate):\r\n    return numpy.resize(sine_array_onecycle(hz, peak), (n_samples,))\r\n    \r\ndef main():\r\n    pygame.mixer.pre_init(sample_rate, -16, 2) # 44.1kHz, 16-bit signed, stereo\r\n    pygame.init()\r\n    f = sine_array(8000, 1)\r\n    f = numpy.array(zip (f , f))\r\n\r\n    play_for(f , 5000, 0.5, 0.5)\r\n\r\nif __name__ == '__main__': main()\r\n", "users_id": null, "datetimeon": "2011-04-22T12:57:35", "link": "pygame.sndarray.make_sound", "id": 4038}, {"content": "Get Unicode key in Pygame:\r\n\r\nfrom pygame import *\r\npygame.init()\r\npygame.display.set_mode((500,500),OPENGLBLIT|OPENGL|DOUBLEBUF)\r\nexitt = 0 \r\ninte = 4096\r\nwhile not exitt:\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT: \r\n            pygame.quit()\r\n            exitt = True\r\n        if event.type == KEYDOWN:\r\n            print event.dict['unicode']", "users_id": null, "datetimeon": "2011-04-23T04:11:07", "link": "pygame.key", "id": 4039}, {"content": "The param is \"loops\" not \"loop\".", "users_id": null, "datetimeon": "2011-04-27T15:37:38", "link": "Movie.play", "id": 4040}, {"content": "Use it when you load PNG images with transparencies", "users_id": null, "datetimeon": "2011-04-30T21:10:05", "link": "Surface.convert_alpha", "id": 4041}, {"content": "The dest argument doesnt work for me, say if I do\r\n\r\nscreen.blit(mySurf, dest=(0,0))\r\n\r\nor screen.blit(mySurf, dest=(100,100))\r\n\r\nI get exactly the same outcome.\r\n\r\nWhere am i wrong?", "users_id": null, "datetimeon": "2011-05-03T00:45:25", "link": "Surface.blit", "id": 4042}, {"content": "Sorry I realized i was blitting to screen instead of my temporary surface,\r\nplease ignore (and delete) my comment.", "users_id": null, "datetimeon": "2011-05-03T00:46:43", "link": "Surface.blit", "id": 4043}, {"content": "How does that differ from pygame.draw.aalines? This one can also not be filled.", "users_id": null, "datetimeon": "2011-05-04T14:58:27", "link": "pygame.gfxdraw.aapolygon", "id": 4044}, {"content": "If you like to receive the inner rectangle, the blit is a much better setup. \r\nThe following comparing examples show how-to cut a (centered) 150x150 frame out of a 250x250 image:\r\norig_surf = pygame.Surface((250,250),flags=pygame.SRCALPHA)\r\npygame.draw.circle(orig_surf,(255,0,0),(50,50),25)\r\npygame.draw.circle(orig_surf,(0,255,0),(50,200),25)\r\npygame.draw.circle(orig_surf,(0,0,255),(200,50),25)\r\npygame.draw.circle(orig_surf,(0,255,255),(200,200),25)\r\n\r\ncrop_surf = pygame.transform.chop(pygame.transform.chop(orig_surf,(0,0,50,50)),(150,150,250,250))\r\npygame.image.save(crop_surf, 'test-crop.png')\r\n\r\n\r\ncrop_surf =  pygame.Surface((150,150),flags=pygame.SRCALPHA)\r\ncrop_surf.blit(orig_surf, (0,0),(50,50,200,200))\r\npygame.image.save(crop_surf, 'test-blit.png')\r\n\r\n\r\n\r\n", "users_id": 6191, "datetimeon": "2011-05-05T04:36:44", "link": "pygame.transform.chop", "id": 4045}, {"content": "XBM not supported?", "users_id": null, "datetimeon": "2011-05-10T04:11:53", "link": "pygame.image", "id": 4048}, {"content": "I believe it offsets the detection area by (x,y) pixels. So just put (0,0) for no offset", "users_id": null, "datetimeon": "2011-05-11T00:48:47", "link": "Mask.draw", "id": 4049}, {"content": "This function seems to need raw strings!", "users_id": null, "datetimeon": "2011-05-12T10:26:46", "link": "pygame.image.save", "id": 4050}, {"content": "Is there anyway to play more than 2 songs I have tried everything I want the loaded music to play in order\r\n#!/usr/bin/env python\r\nimport pygame\r\npygame.mixer.init()\r\npygame.mixer.pre_init(44100, -16, 2, 2048)\r\npygame.init()\r\nprint \"hey I finaly got this working!\"\r\npygame.mixer.music.load('D:/Users/John/Music/Music/FUN.OGG')\r\npygame.mixer.music.load('D:/Users/John/Music/Music/Still Alive.OGG')\r\npygame.mixer.music.load('D:/Users/John/Music/Music/turret.OGG')\r\npygame.mixer.music.load('D:/Users/John/Music/Music/portalend.OGG')\r\npygame.mixer.music.play()\r\nimport pysic", "users_id": null, "datetimeon": "2011-05-14T16:30:13", "link": "pygame.mixer.music.load", "id": 4053}, {"content": "How is it you play more than one song besides using queue", "users_id": null, "datetimeon": "2011-05-14T19:29:16", "link": "pygame.mixer.music.play", "id": 4054}, {"content": "how is it to play a list of songs more than just one without using the queue(which only works once)", "users_id": null, "datetimeon": "2011-05-14T19:32:21", "link": "pygame.mixer.music.play", "id": 4055}, {"content": "can the rectangle be filled with an RGBA color so that I can make it transclucent?", "users_id": null, "datetimeon": "2011-05-26T09:16:14", "link": "pygame.draw.rect", "id": 4056}, {"content": "Exemple, playing a sinus sound :\r\n\r\n#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\nfrom pygame import *\r\nimport pygame, time, numpy, pygame.sndarray\r\n\r\nsample_rate = 44100\r\n\r\ndef play_for(sample_array, ms, volLeft, volRight):\r\n    sound = pygame.sndarray.make_sound(sample_array)\r\n    beg = time.time()\r\n    channel = sound.play(-1)\r\n    channel.set_volume(volLeft,volRight)\r\n    pygame.time.delay(ms)\r\n    sound.stop()\r\n    end = time.time()\r\n    return beg, end\r\n    \r\ndef sine_array_onecycle(hz, peak):\r\n    length = sample_rate / float(hz)\r\n    omega = numpy.pi * 2 / length\r\n    xvalues = numpy.arange(int(length)) * omega\r\n    return (peak * numpy.sin(xvalues))\r\n    \r\ndef sine_array(hz, peak, n_samples = sample_rate):\r\n    return numpy.resize(sine_array_onecycle(hz, peak), (n_samples,))\r\n\r\n    \r\ndef main():\r\n    pygame.mixer.pre_init(sample_rate, -16, 2) # 44.1kHz, 16-bit signed, stereo\r\n    pygame.init()\r\n    f = sine_array(8000, 1)\r\n    f = numpy.array(zip (f , f))\r\n\r\n    play_for(f , 5000, 0.2, 0.2)\r\n\r\nif __name__ == '__main__': main()\r\n", "users_id": null, "datetimeon": "2011-05-27T02:36:07", "link": "pygame.sndarray", "id": 4057}]